<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PinNotes – Python Graded Assignment</title><link>/categories/python-graded-assignment/</link><description>Recent content in Python Graded Assignment on PinNotes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/categories/python-graded-assignment/index.xml" rel="self" type="application/rss+xml"/><item><title>GrPA 1 Basic Collections</title><link>/exercises/graded-assignments/python/w4grpa1-basic-collections-graded/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/exercises/graded-assignments/python/w4grpa1-basic-collections-graded/</guid><description>
&lt;hr>
&lt;h2>GrPA 1 Basic Collections 👨‍💻&lt;span class="hx-absolute -hx-mt-20" id="grpa-1-basic-collections-">&lt;/span>
&lt;a href="#grpa-1-basic-collections-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>
&lt;div class="border-card border-card-basic">
&lt;div class="border-card-content">&lt;div class="hextra-scrollbar hx-overflow-x-auto hx-overflow-y-hidden hx-overscroll-x-contain">
&lt;div class="hx-mt-4 hx-flex hx-w-max hx-min-w-full hx-border-b hx-border-gray-200 hx-pb-px dark:hx-border-neutral-800">&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-0" aria-selected="true" tabindex="0" data-state="selected">QUESTION&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-1">TEST CASES&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-2">SOLUTION&lt;/button>&lt;/div>
&lt;/div>
&lt;div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-0"
role="tabpanel" tabindex="0" data-state="selected" >&lt;details class="last-of-type:hx-mb-0 hx-rounded-lg hx-bg-neutral-50 dark:hx-bg-neutral-800 hx-p-2 hx-mt-4 hx-group" >
&lt;summary class="hx-flex hx-items-center hx-cursor-pointer hx-select-none hx-list-none hx-p-1 hx-rounded hx-transition-colors hover:hx-bg-gray-100 dark:hover:hx-bg-neutral-800 before:hx-mr-1 before:hx-inline-block before:hx-transition-transform before:hx-content-[''] dark:before:hx-invert rtl:before:hx-rotate-180 group-open:before:hx-rotate-90">
&lt;strong class="hx-text-lg">Instructions&lt;/strong>
&lt;/summary>
&lt;div class="hx-p-2 hx-overflow-hidden">
&lt;/div>
&lt;/details>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;h2>Question ❓&lt;span class="hx-absolute -hx-mt-20" id="question-">&lt;/span>
&lt;a href="#question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Implement the below functions as per the docstrings.&lt;/p>
&lt;h2>Python Code 🐍&lt;span class="hx-absolute -hx-mt-20" id="python-code-">&lt;/span>
&lt;a href="#python-code-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note this prefix code is to verify that you are not using any for loops in this exercise. This won&amp;#39;t affect any other functionality of the program.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="vm">__file__&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">content&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;# &amp;lt;nofor&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="s2">&amp;#34;for &amp;#34;&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">content&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;You should not use for loop or the word for anywhere in this exercise&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The values of the below variables will be changed by the evaluator&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">int_iterable&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">string_iterable&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;Apple&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;Orange&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Banana&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">some_value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">some_collection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1"># list | set | tuple &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">some_iterable&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">another_iterable&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;apple&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;banana&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;cherry&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="c1"># can be any iterable&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">yet_another_iterable&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;lt;nofor&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;lt;eoi&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">empty_list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">empty_set&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># be carefull here you might end up creating something called as an empty dict &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">empty_tuple&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">singleton_list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># list: A list with only one element&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">singleton_set&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># set: A set with only one element&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">singleton_tuple&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># tuple: A tuple with only one element&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">a_falsy_list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># list: a list but when passed to bool function should return False.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">a_falsy_set&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># set: a list but when passed to bool function should return False.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">a_truthy_tuple&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># tuple: a tuple but when passed to bool function should return True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">int_iterable_min&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># int: find the minimum of int_iterable. Hint: use min function&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">int_iterable_max&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># int: find the maximum of int_iterable. Hint: use max function&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">int_iterable_sum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># int: you know what to do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">int_iterable_len&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># int: really... you need hint?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">int_iterable_sorted&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># list: the int_iterable sorted in ascending order&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">int_iterable_sorted_desc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># list: the int_iterable sorted in desc order&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="c1"># some iterables are not reversible why?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">int_iterable_reversed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># list: the int_iterable reversed use the reversed function&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># in that case sort it in ascending order and reverse it&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">int_iterable_reversed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1">#list&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">...&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># some collections are not indexable why?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">third_last_element&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># the third last element of `some_collection`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># in that case set third_last_element to None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">third_last_element&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">...&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># some collections are not slicable&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">odd_index_elements&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># type(some_collection): the elements at odd indices of `some_collection` &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># in that case set odd_index_elements to None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">odd_index_elements&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">is_some_value_in_some_collection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># bool: True if `some_value` is present in `some_collection`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">...&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># some collections are not ordered&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">is_some_value_in_even_indices&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># bool: True if `some_value` is present in even indices of `some_collection`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># in that case set is_some_value_in_even_indices to None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">is_some_value_in_even_indices&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">all_iterables&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># list: concatenate `some_iterable`, `another_iterable` and `yet_another_iterable` into a list.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="c1"># some iterables are not ordered&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">all_concat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># str: concatenate all the strings in string_iterable with &amp;#39;-&amp;#39; in between&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># in that case sort them and concatenate&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">all_concat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Python Code Solution ✅&lt;span class="hx-absolute -hx-mt-20" id="python-code-solution-">&lt;/span>
&lt;a href="#python-code-solution-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ...existing code...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">empty_list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">empty_set&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">set&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">empty_tuple&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">singleton_list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">42&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">singleton_set&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">42&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">singleton_tuple&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">42&lt;/span>&lt;span class="p">,)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">a_falsy_list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">a_falsy_set&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">set&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">a_truthy_tuple&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">int_iterable_min&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int_iterable&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">int_iterable_max&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int_iterable&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">int_iterable_sum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int_iterable&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">int_iterable_len&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int_iterable&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">int_iterable_sorted&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int_iterable&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">int_iterable_sorted_desc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int_iterable&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">reverse&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="nb">hasattr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int_iterable&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;__reversed__&amp;#39;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">int_iterable_reversed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">reversed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int_iterable&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">int_iterable_reversed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">reversed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">int_iterable&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="nb">hasattr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">some_collection&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;__getitem__&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="nb">hasattr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">some_collection&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;__len__&amp;#39;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">third_last_element&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">some_collection&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">third_last_element&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="nb">hasattr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">some_collection&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;__getitem__&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="nb">hasattr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">some_collection&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;__len__&amp;#39;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">odd_index_elements&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">some_collection&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="n">some_collection&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">odd_index_elements&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">is_some_value_in_some_collection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">some_value&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">some_collection&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="nb">isinstance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">some_collection&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">list&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">tuple&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">is_some_value_in_even_indices&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">some_value&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">some_collection&lt;/span>&lt;span class="p">[::&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">is_some_value_in_even_indices&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">all_iterables&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">some_iterable&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">another_iterable&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">yet_another_iterable&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="nb">isinstance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">string_iterable&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">list&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">tuple&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">all_concat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;-&amp;#39;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">string_iterable&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">all_concat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;-&amp;#39;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">string_iterable&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ...existing code&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>GrPA 1 Dictionary Basics</title><link>/exercises/graded-assignments/python/w5grpa1-dictionary-basics-graded/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/exercises/graded-assignments/python/w5grpa1-dictionary-basics-graded/</guid><description>
&lt;hr>
&lt;h2>GrPA 1 Dictionary Basics 👨‍💻&lt;span class="hx-absolute -hx-mt-20" id="grpa-1-dictionary-basics-">&lt;/span>
&lt;a href="#grpa-1-dictionary-basics-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>
&lt;div class="border-card border-card-basic">
&lt;div class="border-card-content">&lt;div class="hextra-scrollbar hx-overflow-x-auto hx-overflow-y-hidden hx-overscroll-x-contain">
&lt;div class="hx-mt-4 hx-flex hx-w-max hx-min-w-full hx-border-b hx-border-gray-200 hx-pb-px dark:hx-border-neutral-800">&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-0" aria-selected="true" tabindex="0" data-state="selected">QUESTION&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-1">TEST CASES&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-2">SOLUTION&lt;/button>&lt;/div>
&lt;/div>
&lt;div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-0"
role="tabpanel" tabindex="0" data-state="selected" >&lt;details class="last-of-type:hx-mb-0 hx-rounded-lg hx-bg-neutral-50 dark:hx-bg-neutral-800 hx-p-2 hx-mt-4 hx-group" >
&lt;summary class="hx-flex hx-items-center hx-cursor-pointer hx-select-none hx-list-none hx-p-1 hx-rounded hx-transition-colors hover:hx-bg-gray-100 dark:hover:hx-bg-neutral-800 before:hx-mr-1 before:hx-inline-block before:hx-transition-transform before:hx-content-[''] dark:before:hx-invert rtl:before:hx-rotate-180 group-open:before:hx-rotate-90">
&lt;strong class="hx-text-lg">Instructions&lt;/strong>
&lt;/summary>
&lt;div class="hx-p-2 hx-overflow-hidden">
&lt;/div>
&lt;/details>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;h2>Question ❓&lt;span class="hx-absolute -hx-mt-20" id="question-">&lt;/span>
&lt;a href="#question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>🫵 You are tasked with implementing a series of functions that perform various operations on dictionaries in Python. These functions will manipulate dictionaries that represent fruit prices and perform different operations as specified.&lt;/p>
&lt;p>&lt;code>dictionary_operations(fruit_prices: dict, fruits: list)&lt;/code>&lt;/p>
&lt;p>Perform a series of operations on the given fruit_prices dictionary based on the fruits list:&lt;/p>
&lt;ul>
&lt;li>👉 Add fruits[0] with a cost of 3.&lt;/li>
&lt;li>👉 Modify the cost of fruits[1] to 2.&lt;/li>
&lt;li>👉 Increase the cost of fruits[2] by 2.&lt;/li>
&lt;li>👉 Delete fruits[3] from fruit_prices.&lt;/li>
&lt;li>👉 Print the price of fruits[4].&lt;/li>
&lt;li>👉 Print the names of fruits in fruit_prices as a sorted list.&lt;/li>
&lt;li>👉 Print the prices of fruits in fruit_prices as a sorted list.&lt;/li>
&lt;li>👉 increase_prices(fruit_prices: dict) -&amp;gt; None&lt;/li>
&lt;/ul>
&lt;p>💹 Increase the prices of every fruit by 20% and round to two decimal places. Modify the dictionary in place.&lt;/p>
&lt;p>&lt;code>dict_from_string(string: str, key_type, value_type)&lt;/code>&lt;/p>
&lt;p>🔁 Convert a string with comma-separated key-value pairs into a dictionary, converting the keys and values to the specified types.&lt;/p>
&lt;p>&lt;code>dict_to_string(D: dict) -&amp;gt; str&lt;/code>&lt;/p>
&lt;p>🔁 Convert a dictionary back into a string with each key-value pair on a new line, using comprehensions.&lt;/p>
&lt;h2>Python Code 🐍&lt;span class="hx-absolute -hx-mt-20" id="python-code-">&lt;/span>
&lt;a href="#python-code-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Python Code Solution ✅&lt;span class="hx-absolute -hx-mt-20" id="python-code-solution-">&lt;/span>
&lt;a href="#python-code-solution-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>GrPA 1 Numbers (Arithemetic)</title><link>/exercises/graded-assignments/python/grpa1-arithemetic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/exercises/graded-assignments/python/grpa1-arithemetic/</guid><description>
&lt;hr>
&lt;h2>GrPA 1 Numbers (Arithemetic) Graded 👨‍💻&lt;span class="hx-absolute -hx-mt-20" id="grpa-1-numbers-arithemetic-graded-">&lt;/span>
&lt;a href="#grpa-1-numbers-arithemetic-graded-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>
&lt;div class="border-card border-card-basic">
&lt;div class="border-card-content">&lt;div class="hextra-scrollbar hx-overflow-x-auto hx-overflow-y-hidden hx-overscroll-x-contain">
&lt;div class="hx-mt-4 hx-flex hx-w-max hx-min-w-full hx-border-b hx-border-gray-200 hx-pb-px dark:hx-border-neutral-800">&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-0" aria-selected="true" tabindex="0" data-state="selected">QUESTION&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-1">TEST CASES&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-2">SOLUTION&lt;/button>&lt;/div>
&lt;/div>
&lt;div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-0"
role="tabpanel" tabindex="0" data-state="selected" >&lt;p>Change in eligibility criteria to write oppe1 exam:
A1&amp;gt;=40/100 AND A2&amp;gt;=40/100 AND A3&amp;gt;=40/100 AND A4&amp;gt;=40/100&lt;/p>
&lt;p>Solve the below tasks related to Numbers.&lt;/p>
&lt;p>Tasks 1 to 3 - building up Arithemetic expression
Tasks 4 and 5 - floating point arithemetic
Tasks 6 and 7 - modulo and floor division
Problem Type: Input variable - Output Variable, Hidden suffix for evaluation&lt;/p>
&lt;details class="last-of-type:hx-mb-0 hx-rounded-lg hx-bg-neutral-50 dark:hx-bg-neutral-800 hx-p-2 hx-mt-4 hx-group" >
&lt;summary class="hx-flex hx-items-center hx-cursor-pointer hx-select-none hx-list-none hx-p-1 hx-rounded hx-transition-colors hover:hx-bg-gray-100 dark:hover:hx-bg-neutral-800 before:hx-mr-1 before:hx-inline-block before:hx-transition-transform before:hx-content-[''] dark:before:hx-invert rtl:before:hx-rotate-180 group-open:before:hx-rotate-90">
&lt;strong class="hx-text-lg">Instructions&lt;/strong>
&lt;/summary>
&lt;div class="hx-p-2 hx-overflow-hidden">
&lt;p>NOTE: In this type of questions you should not take input or print anything unless your are explicitly asked to. Assign the result of the required computation to the correct variable name as it will be evaluated for type and value by the evaluator.&lt;/p>
&lt;p>The input variables will be assigned by the evaluator based on the test cases.&lt;/p>
&lt;p>The grey part before the white part (if any) in the code is the prefix code. The grey part after the white part (if any) is the suffix code which are not editable. Usually they will be the part of code but in this type of questions it will be removed by the evaluator.&lt;/p>
&lt;p>The Three dots (&amp;hellip;) called as Ellipsis in python are like placeholders, replace them with your answer.&lt;/p>
&lt;p>The inputs on the code blocks are just sample inputs they won&amp;rsquo;t be evaluated in the actual testcases.&lt;/p>
&lt;p>Each testcase will have its own set of testcases defined as variables. The check function in the testcases is in the hidden evaluation code that checks the value and type of the variable.&lt;/p>
&lt;/div>
&lt;/details>
&lt;details class="last-of-type:hx-mb-0 hx-rounded-lg hx-bg-neutral-50 dark:hx-bg-neutral-800 hx-p-2 hx-mt-4 hx-group" >
&lt;summary class="hx-flex hx-items-center hx-cursor-pointer hx-select-none hx-list-none hx-p-1 hx-rounded hx-transition-colors hover:hx-bg-gray-100 dark:hover:hx-bg-neutral-800 before:hx-mr-1 before:hx-inline-block before:hx-transition-transform before:hx-content-[''] dark:before:hx-invert rtl:before:hx-rotate-180 group-open:before:hx-rotate-90">
&lt;strong class="hx-text-lg">Template Code&lt;/strong>
&lt;/summary>
&lt;div class="hx-p-2 hx-overflow-hidden">
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">output1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># int: sum of a and b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">output2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># int: twice the sum of a and b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">output3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># int: absolute difference between a and b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">output4&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># int: absolute difference between sum and product of a and b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Find discounted price given price and discount_percent&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># input variables : price: int, discount_percent: float&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">discounted_price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># float&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Round the discounted_price&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">rounded_discounted_price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Find hrs and mins given the total_mins&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># input variables : total_mins&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">hrs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># int: hint: think about floor division operator&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">mins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># int&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;p>Python Tutor&lt;/p>
&lt;p>Starboard Notebook&lt;/p>
&lt;p>Pyodide Terminal&lt;/p>
&lt;/div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-1"
role="tabpanel">&lt;div class="hextra-scrollbar hx-overflow-x-auto hx-overflow-y-hidden hx-overscroll-x-contain">
&lt;div class="hx-mt-4 hx-flex hx-w-max hx-min-w-full hx-border-b hx-border-gray-200 hx-pb-px dark:hx-border-neutral-800">&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-0" aria-selected="true" tabindex="0" data-state="selected">CASE 1&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-1">CASE 2&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-2">CASE 3&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-3">CASE 4&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-4">CASE 5&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-5">CASE 6&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-6">CASE 7&lt;/button>&lt;/div>
&lt;/div>
&lt;div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-0"
role="tabpanel" tabindex="0" data-state="selected" >&lt;h6>Input&lt;span class="hx-absolute -hx-mt-20" id="input">&lt;/span>
&lt;a href="#input" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h6>&lt;p>a=5
b=7
check(&amp;lsquo;output1&amp;rsquo;,12)&lt;/p>&lt;/div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-1"
role="tabpanel">a,b = 2,-5
check(&amp;ldquo;output2&amp;rdquo;, -6)&lt;/div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-2"
role="tabpanel">a,b = 6,4
check(&amp;lsquo;output3&amp;rsquo;, 2)
a,b = 4,7
check(&amp;lsquo;output3&amp;rsquo;, 3)&lt;/div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-3"
role="tabpanel">a,b = 4,7
check(&amp;lsquo;output4&amp;rsquo;,17)&lt;/div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-4"
role="tabpanel">a=5
b=7
check(&amp;lsquo;output1&amp;rsquo;,12)&lt;/div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-5"
role="tabpanel">a=5
b=7
check(&amp;lsquo;output1&amp;rsquo;,12)&lt;/div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-6"
role="tabpanel">a=5
b=7
check(&amp;lsquo;output1&amp;rsquo;,12)&lt;/div>
&lt;/div>&lt;/div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-2"
role="tabpanel">&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Sample inputs (# note: The values given in the prefix code(grey) will be changed by the autograder according to the testcase while running them.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">6&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">price&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">discount_percent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">80&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">5.75&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">total_mins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">470&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;lt;eoi&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">output1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="c1"># int: sum of a and b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">output2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># int: twice the sum of a and b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">output3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># int: absolute difference between a and b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">output4&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">abs&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># int: absolute difference between sum and product of a and b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Find discounted price given price and discount_percent&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># input variables : price: int, discount_percent: float&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">discounted_price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">discount_percent&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">price&lt;/span> &lt;span class="c1"># float&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Round the discounted_price&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">rounded_discounted_price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">round&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">discounted_price&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Find hrs and mins given the total_mins&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># input variables : total_mins&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">hrs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">total_mins&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="mi">60&lt;/span> &lt;span class="c1"># int: hint: think about floor division operator&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">mins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">total_mins&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="mi">60&lt;/span> &lt;span class="c1"># int&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-basic">
&lt;div class="border-card-content">&lt;h3>Python Code 🧠&lt;span class="hx-absolute -hx-mt-20" id="python-code-">&lt;/span>
&lt;a href="#python-code-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-scrollbar hx-overflow-x-auto hx-overflow-y-hidden hx-overscroll-x-contain">
&lt;div class="hx-mt-4 hx-flex hx-w-max hx-min-w-full hx-border-b hx-border-gray-200 hx-pb-px dark:hx-border-neutral-800">&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-0" aria-selected="true" tabindex="0" data-state="selected">CODE&lt;/button>&lt;/div>
&lt;/div>
&lt;div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-0"
role="tabpanel" tabindex="0" data-state="selected" >&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Sample inputs (# note: The values given in the prefix code(grey) will be changed by the autograder according to the testcase while running them.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">6&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">price&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">discount_percent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">80&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">5.75&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">total_mins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">470&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;lt;eoi&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">output1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="c1"># int: sum of a and b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">output2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># int: twice the sum of a and b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">output3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># int: absolute difference between a and b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">output4&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">abs&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># int: absolute difference between sum and product of a and b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Find discounted price given price and discount_percent&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># input variables : price: int, discount_percent: float&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">discounted_price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">discount_percent&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># float&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Round the discounted_price&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">rounded_discounted_price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">round&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">discounted_price&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Find hrs and mins given the total_mins&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># input variables : total_mins&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">hrs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">total_mins&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">60&lt;/span> &lt;span class="c1"># int: hint: think about floor division operator&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">mins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">total_mins&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">60&lt;/span> &lt;span class="c1"># int&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style></description></item><item><title>GrPA 1 While Loop</title><link>/exercises/graded-assignments/python/w3grpa1-while-loop-graded/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/exercises/graded-assignments/python/w3grpa1-while-loop-graded/</guid><description>
&lt;hr>
&lt;h2>GrPA 1 While Loop Graded 👨‍💻&lt;span class="hx-absolute -hx-mt-20" id="grpa-1-while-loop-graded-">&lt;/span>
&lt;a href="#grpa-1-while-loop-graded-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>
&lt;div class="border-card border-card-basic">
&lt;div class="border-card-content">&lt;div class="hextra-scrollbar hx-overflow-x-auto hx-overflow-y-hidden hx-overscroll-x-contain">
&lt;div class="hx-mt-4 hx-flex hx-w-max hx-min-w-full hx-border-b hx-border-gray-200 hx-pb-px dark:hx-border-neutral-800">&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-0" aria-selected="true" tabindex="0" data-state="selected">QUESTION&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-1">TEST CASES&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-2">SOLUTION&lt;/button>&lt;/div>
&lt;/div>
&lt;div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-0"
role="tabpanel" tabindex="0" data-state="selected" >&lt;details class="last-of-type:hx-mb-0 hx-rounded-lg hx-bg-neutral-50 dark:hx-bg-neutral-800 hx-p-2 hx-mt-4 hx-group" >
&lt;summary class="hx-flex hx-items-center hx-cursor-pointer hx-select-none hx-list-none hx-p-1 hx-rounded hx-transition-colors hover:hx-bg-gray-100 dark:hover:hx-bg-neutral-800 before:hx-mr-1 before:hx-inline-block before:hx-transition-transform before:hx-content-[''] dark:before:hx-invert rtl:before:hx-rotate-180 group-open:before:hx-rotate-90">
&lt;strong class="hx-text-lg">Instructions&lt;/strong>
&lt;/summary>
&lt;div class="hx-p-2 hx-overflow-hidden">
&lt;/div>
&lt;/details>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;h2>Question ❓&lt;span class="hx-absolute -hx-mt-20" id="question-">&lt;/span>
&lt;a href="#question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Implement different parts of a multi-functional program based on an initial input value. Each part of the program will handle various tasks related to accumulation, filtering, mapping, and combinations of these operations. None of the tasks should use explicit loops for definite repetitions, and the program should handle indefinite inputs gracefully.&lt;/p>
&lt;h2>Python Code 🐍&lt;span class="hx-absolute -hx-mt-20" id="python-code-">&lt;/span>
&lt;a href="#python-code-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note this prefix code is to verify that you are not using any for loops in this exercise. This won&amp;#39;t affect any other functionality of the program.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="vm">__file__&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">content&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;# &amp;lt;eoi&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="s2">&amp;#34;for &amp;#34;&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">content&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;You should not use for loop or the word for anywhere in this exercise&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This is the first line of the exercise&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">task&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;lt;eoi&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;sum_until_0&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="o">...&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># the terminal condition&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span> &lt;span class="c1"># add n to the total&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span> &lt;span class="c1"># take the next n form the input&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">total&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;total_price&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total_price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="o">...&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># repeat forever since we are breaking inside&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">line&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">...&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># The terminal condition&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">quantity&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># split uses space by default&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">quantity&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="c1"># convert to ints&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span> &lt;span class="c1"># accumulate the total price&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">total_price&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;only_ed_or_ing&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;reverse_sum_palindrome&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;double_string&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;odd_char&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;only_even_squares&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;only_odd_lines&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Python Code Solution 🧠&lt;span class="hx-absolute -hx-mt-20" id="python-code-solution-">&lt;/span>
&lt;a href="#python-code-solution-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ...existing code...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;sum_until_0&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># the terminal condition&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="c1"># add n to the total&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="c1"># take the next n from the input&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">total&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;total_price&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total_price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># repeat forever since we are breaking inside&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">line&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">line&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;END&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># The terminal condition&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">quantity&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># split uses space by default&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">quantity&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">quantity&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">price&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># convert to ints&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total_price&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">quantity&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="c1"># accumulate the total price&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">total_price&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;only_ed_or_ing&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lower&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;stop&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lower&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">endswith&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;ed&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lower&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">endswith&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;ing&amp;#34;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;reverse_sum_palindrome&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;-1&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">)[::&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">rev&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">total&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">total&lt;/span>&lt;span class="p">)[::&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;double_string&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">s&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;odd_char&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">[::&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">endswith&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;.&amp;#34;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34; &amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;only_even_squares&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">s&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;NAN&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;only_odd_lines&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">idx&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lines&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">s&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;END&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">idx&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lines&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">idx&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lines&lt;/span>&lt;span class="p">))&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>GrPA 2 Dictionary Application</title><link>/exercises/graded-assignments/python/w5grpa2-dictionary-applications-graded/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/exercises/graded-assignments/python/w5grpa2-dictionary-applications-graded/</guid><description>
&lt;hr>
&lt;h2>GrPA 2 Dictionary Application 👨‍💻&lt;span class="hx-absolute -hx-mt-20" id="grpa-2-dictionary-application-">&lt;/span>
&lt;a href="#grpa-2-dictionary-application-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>
&lt;div class="border-card border-card-basic">
&lt;div class="border-card-content">&lt;div class="hextra-scrollbar hx-overflow-x-auto hx-overflow-y-hidden hx-overscroll-x-contain">
&lt;div class="hx-mt-4 hx-flex hx-w-max hx-min-w-full hx-border-b hx-border-gray-200 hx-pb-px dark:hx-border-neutral-800">&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-0" aria-selected="true" tabindex="0" data-state="selected">QUESTION&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-1">TEST CASES&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-2">SOLUTION&lt;/button>&lt;/div>
&lt;/div>
&lt;div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-0"
role="tabpanel" tabindex="0" data-state="selected" >&lt;details class="last-of-type:hx-mb-0 hx-rounded-lg hx-bg-neutral-50 dark:hx-bg-neutral-800 hx-p-2 hx-mt-4 hx-group" >
&lt;summary class="hx-flex hx-items-center hx-cursor-pointer hx-select-none hx-list-none hx-p-1 hx-rounded hx-transition-colors hover:hx-bg-gray-100 dark:hover:hx-bg-neutral-800 before:hx-mr-1 before:hx-inline-block before:hx-transition-transform before:hx-content-[''] dark:before:hx-invert rtl:before:hx-rotate-180 group-open:before:hx-rotate-90">
&lt;strong class="hx-text-lg">Instructions&lt;/strong>
&lt;/summary>
&lt;div class="hx-p-2 hx-overflow-hidden">
&lt;/div>
&lt;/details>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;h2>Question ❓&lt;span class="hx-absolute -hx-mt-20" id="question-">&lt;/span>
&lt;a href="#question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Implement the below functions as per the docstrings.&lt;/p>
&lt;h2>Python Code 🐍&lt;span class="hx-absolute -hx-mt-20" id="python-code-">&lt;/span>
&lt;a href="#python-code-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Python Code Solution ✅&lt;span class="hx-absolute -hx-mt-20" id="python-code-solution-">&lt;/span>
&lt;a href="#python-code-solution-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>GrPA 2 For Loop</title><link>/exercises/graded-assignments/python/w3grpa2-for-loop-graded/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/exercises/graded-assignments/python/w3grpa2-for-loop-graded/</guid><description>
&lt;hr>
&lt;h2>GrPA 2 For Loop Graded 👨‍💻&lt;span class="hx-absolute -hx-mt-20" id="grpa-2-for-loop-graded-">&lt;/span>
&lt;a href="#grpa-2-for-loop-graded-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>
&lt;div class="border-card border-card-basic">
&lt;div class="border-card-content">&lt;div class="hextra-scrollbar hx-overflow-x-auto hx-overflow-y-hidden hx-overscroll-x-contain">
&lt;div class="hx-mt-4 hx-flex hx-w-max hx-min-w-full hx-border-b hx-border-gray-200 hx-pb-px dark:hx-border-neutral-800">&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-0" aria-selected="true" tabindex="0" data-state="selected">QUESTION&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-1">TEST CASES&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-2">SOLUTION&lt;/button>&lt;/div>
&lt;/div>
&lt;div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-0"
role="tabpanel" tabindex="0" data-state="selected" >&lt;details class="last-of-type:hx-mb-0 hx-rounded-lg hx-bg-neutral-50 dark:hx-bg-neutral-800 hx-p-2 hx-mt-4 hx-group" >
&lt;summary class="hx-flex hx-items-center hx-cursor-pointer hx-select-none hx-list-none hx-p-1 hx-rounded hx-transition-colors hover:hx-bg-gray-100 dark:hover:hx-bg-neutral-800 before:hx-mr-1 before:hx-inline-block before:hx-transition-transform before:hx-content-[''] dark:before:hx-invert rtl:before:hx-rotate-180 group-open:before:hx-rotate-90">
&lt;strong class="hx-text-lg">Instructions&lt;/strong>
&lt;/summary>
&lt;div class="hx-p-2 hx-overflow-hidden">
&lt;/div>
&lt;/details>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;h2>Question ❓&lt;span class="hx-absolute -hx-mt-20" id="question-">&lt;/span>
&lt;a href="#question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Write a multi functional program that takes input task from standard input and does the corresponding taks accordingly. Note that the useage of for loop is not allowed in this exercise.&lt;/p>
&lt;h2>Python Code 🐍&lt;span class="hx-absolute -hx-mt-20" id="python-code-">&lt;/span>
&lt;a href="#python-code-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note this prefix code is to verify that you are not using any for loops in this exercise. This won&amp;#39;t affect any other functionality of the program.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="vm">__file__&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">content&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;# &amp;lt;eoi&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="s2">&amp;#34;while &amp;#34;&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">content&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;You should not use while loop or the word while anywhere in this exercise&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># your code should not use more than 7 for loops &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># assuming one for loop per problem&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">content&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;for &amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;You should not use more than 7 for loops&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This is the first line of the exercise&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">task&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;lt;eoi&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;factorial&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">*=&lt;/span>&lt;span class="n">i&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;even_numbers&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;power_sequence&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">*=&lt;/span>&lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;sum_not_divisible&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;from_k&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;string_iter&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;list_iter&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lst&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">eval&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="c1"># this will load the list from input&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Invalid&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Python Code Solution ✅&lt;span class="hx-absolute -hx-mt-20" id="python-code-solution-">&lt;/span>
&lt;a href="#python-code-solution-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;factorial&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">*=&lt;/span> &lt;span class="n">i&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;even_numbers&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;power_sequence&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">*=&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;sum_not_divisible&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">4&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">i&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">total&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;from_k&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Accept n and k either as &amp;#34;n k&amp;#34; in one line or as two lines&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">inp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">inp&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">inp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">inp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">99&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Checking:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Debug&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="s1">&amp;#39;5&amp;#39;&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">s&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="s1">&amp;#39;9&amp;#39;&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">s&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">[::&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;string_iter&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">ch&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ch&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">prev&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ch&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;list_iter&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lst&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">eval&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="c1"># this will load the list from input&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">element&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">lst&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">element&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> - type: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nb">type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">element&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Invalid&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>GrPA 2 Operations on list and set</title><link>/exercises/graded-assignments/python/w4grpa2-operations-on-list-and-set/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/exercises/graded-assignments/python/w4grpa2-operations-on-list-and-set/</guid><description>
&lt;hr>
&lt;h2>GrPA 2 Operations on list and set 👨‍💻&lt;span class="hx-absolute -hx-mt-20" id="grpa-2-operations-on-list-and-set-">&lt;/span>
&lt;a href="#grpa-2-operations-on-list-and-set-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>
&lt;div class="border-card border-card-basic">
&lt;div class="border-card-content">&lt;div class="hextra-scrollbar hx-overflow-x-auto hx-overflow-y-hidden hx-overscroll-x-contain">
&lt;div class="hx-mt-4 hx-flex hx-w-max hx-min-w-full hx-border-b hx-border-gray-200 hx-pb-px dark:hx-border-neutral-800">&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-0" aria-selected="true" tabindex="0" data-state="selected">QUESTION&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-1">TEST CASES&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-2">SOLUTION&lt;/button>&lt;/div>
&lt;/div>
&lt;div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-0"
role="tabpanel" tabindex="0" data-state="selected" >&lt;details class="last-of-type:hx-mb-0 hx-rounded-lg hx-bg-neutral-50 dark:hx-bg-neutral-800 hx-p-2 hx-mt-4 hx-group" >
&lt;summary class="hx-flex hx-items-center hx-cursor-pointer hx-select-none hx-list-none hx-p-1 hx-rounded hx-transition-colors hover:hx-bg-gray-100 dark:hover:hx-bg-neutral-800 before:hx-mr-1 before:hx-inline-block before:hx-transition-transform before:hx-content-[''] dark:before:hx-invert rtl:before:hx-rotate-180 group-open:before:hx-rotate-90">
&lt;strong class="hx-text-lg">Instructions&lt;/strong>
&lt;/summary>
&lt;div class="hx-p-2 hx-overflow-hidden">
&lt;/div>
&lt;/details>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;h2>Question ❓&lt;span class="hx-absolute -hx-mt-20" id="question-">&lt;/span>
&lt;a href="#question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Implement the below functions as per the docstrings.&lt;/p>
&lt;h2>Python Code 🐍&lt;span class="hx-absolute -hx-mt-20" id="python-code-">&lt;/span>
&lt;a href="#python-code-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Note this prefix code is to verify that you are not using any for loops in this exercise. This won&amp;#39;t affect any other functionality of the program.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="vm">__file__&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">content&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;# &amp;lt;noloop&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="s2">&amp;#34;for &amp;#34;&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">content&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="s2">&amp;#34;while &amp;#34;&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">content&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;You should not use for loop, while loop or the word for and while anywhere in this exercise&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># note that apart from the print statements inside the functions, the evaluator will also print what is returned by the function at last&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;lt;noloop&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">list_mutating_operations&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">list&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">item1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">item2&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># sort the `items` inplace&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;sorted:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># add item1 to the `items` at the end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;append:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># add item2 at index 3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;insert:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># extend `items` with the first three elements in `items`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;extend:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># pop the fifth element and store it in variable `popped_item`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;pop:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># remove first occurance of `item2` from the list&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;remove:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># make the element at index 4 None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;modify_index:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># make the even indices None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;modify_slice:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># delete the third last element&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;delete_index:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># delete the even indices&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;delete_slice:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">popped_item&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">list_non_mutating_operations&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">list&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">item1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">item2&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print the sorted version of items&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;sorted:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print a lsit with item1 appended to the `items` at the end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;append:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print a list with item2 added to items at index 3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;insert:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print a list with the first three elements in `items` added to the end of the `items` again&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;extend:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print a list with the fifth element from `items` removed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;pop:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print a list with first occurance of `item2` removed from `items` &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;remove:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># hint: you may want to use index&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print a list with the fourth element of `items` changed to None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;modify_index:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print a list with the even indices changed to None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;modify_slice:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print a list with the even indices removed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;delete_slice:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">items&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">do_set_operation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">set2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">set3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">item1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">item2&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># add item1 to set1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># remove item2 from set1. What if item2 is not in set1?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># add elements from set2 to set1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># remove all elements from set1 that are in set3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print the common elements in both set2 and set3 as a sorted list.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print all unique elements present in set1, set2 an set3 as a sorted list&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print all unique elements that are in set2 but not in set3 as a sorted list&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print all the non common elements from both set2 and set3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">set1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set1&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set2&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set3&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Python Code Solution ✅&lt;span class="hx-absolute -hx-mt-20" id="python-code-solution-">&lt;/span>
&lt;a href="#python-code-solution-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ...existing code...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">list_mutating_operations&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">list&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">item1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">item2&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># sort the `items` inplace&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">items&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sort&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;sorted:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># add item1 to the `items` at the end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">items&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">item1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;append:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># add item2 at index 3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">items&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">item2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;insert:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># extend `items` with the first three elements in `items`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">items&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extend&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;extend:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># pop the fifth element and store it in variable `popped_item`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">popped_item&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;pop:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># remove first occurance of `item2` from the list&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">item2&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">items&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remove&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">item2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;remove:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># make the element at index 4 None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">items&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;modify_index:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># make the even indices None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">items&lt;/span>&lt;span class="p">[::&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="kc">None&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">[::&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;modify_slice:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># delete the third last element&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">del&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;delete_index:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># delete the even indices&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">del&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[::&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;delete_slice:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">popped_item&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">list_non_mutating_operations&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">list&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">item1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">item2&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print the sorted version of items&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;sorted:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print a list with item1 appended to the `items` at the end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;append:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">items&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">item1&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print a list with item2 added to items at index 3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[:]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">temp&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">item2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">temp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">:]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;insert:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">temp2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print a list with the first three elements in `items` added to the end of the `items` again&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;extend:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">items&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print a list with the fifth element from `items` removed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">:]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[:]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;pop:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">temp3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print a list with first occurance of `item2` removed from `items` &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">item2&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">idx&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">item2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp4&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">idx&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">idx&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp4&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[:]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;remove:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">temp4&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># hint: you may want to use index&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print a list with the fourth element of `items` changed to None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp5&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[:]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">temp5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp5&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;modify_index:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">temp5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print a list with the even indices changed to None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp6&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[:]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp6&lt;/span>&lt;span class="p">[::&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="kc">None&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">temp6&lt;/span>&lt;span class="p">[::&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;modify_slice:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">temp6&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print a list with the even indices removed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp7&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;delete_slice:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">temp7&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">items&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">do_set_operation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">set2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">set3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">item1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">item2&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># add item1 to set1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">set1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">item1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># remove item2 from set1. What if item2 is not in set1?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">set1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">discard&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">item2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># add elements from set2 to set1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">set1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># remove all elements from set1 that are in set3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">set1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">difference_update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print the common elements in both set2 and set3 as a sorted list.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set2&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">set3&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print all unique elements present in set1, set2 an set3 as a sorted list&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set1&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">set2&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">set3&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print all unique elements that are in set2 but not in set3 as a sorted list&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set2&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">set3&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print all the non common elements from both set2 and set3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set2&lt;/span> &lt;span class="o">^&lt;/span> &lt;span class="n">set3&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">set1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set1&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set2&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set3&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>GrPA 3 Composing functions</title><link>/exercises/graded-assignments/python/w5grpa3-composing-functions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/exercises/graded-assignments/python/w5grpa3-composing-functions/</guid><description>
&lt;hr>
&lt;h2>GrPA 3 Composing functions 👨‍💻&lt;span class="hx-absolute -hx-mt-20" id="grpa-3-composing-functions-">&lt;/span>
&lt;a href="#grpa-3-composing-functions-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>
&lt;div class="border-card border-card-basic">
&lt;div class="border-card-content">&lt;div class="hextra-scrollbar hx-overflow-x-auto hx-overflow-y-hidden hx-overscroll-x-contain">
&lt;div class="hx-mt-4 hx-flex hx-w-max hx-min-w-full hx-border-b hx-border-gray-200 hx-pb-px dark:hx-border-neutral-800">&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-0" aria-selected="true" tabindex="0" data-state="selected">QUESTION&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-1">TEST CASES&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-2">SOLUTION&lt;/button>&lt;/div>
&lt;/div>
&lt;div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-0"
role="tabpanel" tabindex="0" data-state="selected" >&lt;details class="last-of-type:hx-mb-0 hx-rounded-lg hx-bg-neutral-50 dark:hx-bg-neutral-800 hx-p-2 hx-mt-4 hx-group" >
&lt;summary class="hx-flex hx-items-center hx-cursor-pointer hx-select-none hx-list-none hx-p-1 hx-rounded hx-transition-colors hover:hx-bg-gray-100 dark:hover:hx-bg-neutral-800 before:hx-mr-1 before:hx-inline-block before:hx-transition-transform before:hx-content-[''] dark:before:hx-invert rtl:before:hx-rotate-180 group-open:before:hx-rotate-90">
&lt;strong class="hx-text-lg">Instructions&lt;/strong>
&lt;/summary>
&lt;div class="hx-p-2 hx-overflow-hidden">
&lt;/div>
&lt;/details>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;h2>Question ❓&lt;span class="hx-absolute -hx-mt-20" id="question-">&lt;/span>
&lt;a href="#question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Implement all the given functions that are used to solve the below problems.&lt;/p>
&lt;p>Follow the path&lt;/p>
&lt;p>You are given a matrix of size m x n consisting of ones (1) and zeros (0). There is a single continuous path formed with ones that starts from the rightmost cell in the last row (m-th row) with one and ends at leftmost cell in the first row with one in it. The path does not branch, and there is only one such path. Your task is to traverse along the path and print the coordinates of the path from start to end as tuples over multiple lines. The path can move vertically and horizontally.&lt;/p>
&lt;p>Input&lt;/p>
&lt;p>matrix = [
[0, 0, 1, 1],
[0, 0, 0, 1],
[1, 1, 1, 1],
[1, 0, 0, 0],
[1, 1, 0, 0]
]
Output&lt;/p>
&lt;p>(4,1)
(4,0)
(3,0)
(2,0)
(2,1)
(2,2)
(2,3)
(1,3)
(0,3)
(0,2)
Alternate the path Same setup, but while going in that path, flip every ones in the even position in the path to 2. Modify the matrix inplace.&lt;/p>
&lt;p>Output&lt;/p>
&lt;p>[
[0, 0, 2, 1],
[0, 0, 0, 2],
[2, 1, 2, 1],
[1, 0, 0, 0],
[2, 1, 0, 0]
]
Count the path Same setup, but instead of flipping put the count of the step in the path. Modify the matrix inplace.&lt;/p>
&lt;p>Output&lt;/p>
&lt;p>[
[0, 0, 10, 9],
[0, 0, 0, 8],
[4, 5, 6, 7],
[3, 0, 0, 0],
[2, 1, 0, 0]
]
Mirror the path horizontally Same setup, but also add a path that is the horizontal mirror of the original path in the same matrix.&lt;/p>
&lt;p>Input&lt;/p>
&lt;p>[
[0,1,0,0,0],
[0,1,1,1,0],
[0,0,0,1,0],
[0,0,0,1,1]
]
Output&lt;/p>
&lt;p>[
[0,1,0,1,0],
[0,1,1,1,0],
[0,1,0,1,0],
[1,1,0,1,1]
]
Mirror the path vertically Same setup, but also add a path that is the vertical mirror of the original path in the same matrix.&lt;/p>
&lt;p>Input&lt;/p>
&lt;p>[
[0,1,0,0,0],
[0,1,1,1,0],
[0,0,0,1,0],
[0,0,0,1,1]
]
Output&lt;/p>
&lt;p>[
[0,1,0,1,1],
[0,1,1,1,0],
[0,1,1,1,0],
[0,1,0,1,1]
]&lt;/p>
&lt;h2>Python Code 🐍&lt;span class="hx-absolute -hx-mt-20" id="python-code-">&lt;/span>
&lt;a href="#python-code-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Python Code Solution ✅&lt;span class="hx-absolute -hx-mt-20" id="python-code-solution-">&lt;/span>
&lt;a href="#python-code-solution-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>GrPA 3 List and set applicarion</title><link>/exercises/graded-assignments/python/w4grpa3-list-and-set-application-graded/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/exercises/graded-assignments/python/w4grpa3-list-and-set-application-graded/</guid><description>
&lt;hr>
&lt;h2>GrPA 3 List and set application 👨‍💻&lt;span class="hx-absolute -hx-mt-20" id="grpa-3-list-and-set-application-">&lt;/span>
&lt;a href="#grpa-3-list-and-set-application-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>
&lt;div class="border-card border-card-basic">
&lt;div class="border-card-content">&lt;div class="hextra-scrollbar hx-overflow-x-auto hx-overflow-y-hidden hx-overscroll-x-contain">
&lt;div class="hx-mt-4 hx-flex hx-w-max hx-min-w-full hx-border-b hx-border-gray-200 hx-pb-px dark:hx-border-neutral-800">&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-0" aria-selected="true" tabindex="0" data-state="selected">QUESTION&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-1">TEST CASES&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-2">SOLUTION&lt;/button>&lt;/div>
&lt;/div>
&lt;div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-0"
role="tabpanel" tabindex="0" data-state="selected" >&lt;details class="last-of-type:hx-mb-0 hx-rounded-lg hx-bg-neutral-50 dark:hx-bg-neutral-800 hx-p-2 hx-mt-4 hx-group" >
&lt;summary class="hx-flex hx-items-center hx-cursor-pointer hx-select-none hx-list-none hx-p-1 hx-rounded hx-transition-colors hover:hx-bg-gray-100 dark:hover:hx-bg-neutral-800 before:hx-mr-1 before:hx-inline-block before:hx-transition-transform before:hx-content-[''] dark:before:hx-invert rtl:before:hx-rotate-180 group-open:before:hx-rotate-90">
&lt;strong class="hx-text-lg">Instructions&lt;/strong>
&lt;/summary>
&lt;div class="hx-p-2 hx-overflow-hidden">
&lt;/div>
&lt;/details>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;h2>Question ❓&lt;span class="hx-absolute -hx-mt-20" id="question-">&lt;/span>
&lt;a href="#question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Implement the below functions as per the docstrings.&lt;/p>
&lt;h2>Python Code 🐍&lt;span class="hx-absolute -hx-mt-20" id="python-code-">&lt;/span>
&lt;a href="#python-code-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">min&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">find_min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">list&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">odd_increment_even_decrement_no_modify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">list&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">odd_square_even_double_modify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">list&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">list&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">more_than_two_unique_vowels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sentence&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">sum_of_list_of_lists&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lol&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">flatten&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lol&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">all_common&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">strings&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">vocabulary&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sentences&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Python Code Solution ✅&lt;span class="hx-absolute -hx-mt-20" id="python-code-solution-">&lt;/span>
&lt;a href="#python-code-solution-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ...existing code...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">min&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">find_min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">list&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">odd_increment_even_decrement_no_modify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">list&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">odd_square_even_double_modify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">list&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">list&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">items&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">**&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">items&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># The function modifies in place, so no return needed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">more_than_two_unique_vowels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sentence&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">vowels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;aeiouAEIOU&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">words&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sentence&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;,&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">word&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">word&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">words&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">word&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">vowels&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">sum_of_list_of_lists&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lol&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sublist&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">sublist&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">lol&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">flatten&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lol&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">item&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">sublist&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">lol&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">sublist&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">all_common&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">strings&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">strings&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">common&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">strings&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">s&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">strings&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">common&lt;/span> &lt;span class="o">&amp;amp;=&lt;/span> &lt;span class="nb">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">common&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">vocabulary&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sentences&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">word&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lower&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">sentence&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">sentences&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">word&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">sentence&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">())&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>GrPA 3 Nested Loops</title><link>/exercises/graded-assignments/python/w3grpa3-nested-loops-graded/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/exercises/graded-assignments/python/w3grpa3-nested-loops-graded/</guid><description>
&lt;hr>
&lt;h2>GrPA 3 Nested Loops Graded 👨‍💻&lt;span class="hx-absolute -hx-mt-20" id="grpa-3-nested-loops-graded-">&lt;/span>
&lt;a href="#grpa-3-nested-loops-graded-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>
&lt;div class="border-card border-card-basic">
&lt;div class="border-card-content">&lt;div class="hextra-scrollbar hx-overflow-x-auto hx-overflow-y-hidden hx-overscroll-x-contain">
&lt;div class="hx-mt-4 hx-flex hx-w-max hx-min-w-full hx-border-b hx-border-gray-200 hx-pb-px dark:hx-border-neutral-800">&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-0" aria-selected="true" tabindex="0" data-state="selected">QUESTION&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-1">TEST CASES&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-2">SOLUTION&lt;/button>&lt;/div>
&lt;/div>
&lt;div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-0"
role="tabpanel" tabindex="0" data-state="selected" >&lt;details class="last-of-type:hx-mb-0 hx-rounded-lg hx-bg-neutral-50 dark:hx-bg-neutral-800 hx-p-2 hx-mt-4 hx-group" >
&lt;summary class="hx-flex hx-items-center hx-cursor-pointer hx-select-none hx-list-none hx-p-1 hx-rounded hx-transition-colors hover:hx-bg-gray-100 dark:hover:hx-bg-neutral-800 before:hx-mr-1 before:hx-inline-block before:hx-transition-transform before:hx-content-[''] dark:before:hx-invert rtl:before:hx-rotate-180 group-open:before:hx-rotate-90">
&lt;strong class="hx-text-lg">Instructions&lt;/strong>
&lt;/summary>
&lt;div class="hx-p-2 hx-overflow-hidden">
&lt;/div>
&lt;/details>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;h2>Question ❓&lt;span class="hx-absolute -hx-mt-20" id="question-">&lt;/span>
&lt;a href="#question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Create a multi-functional program that performs different tasks based on the user input. The program should support the following tasks:&lt;/p>
&lt;p>Permutation (permutation): Given a string s, print all the possible two-letter permutations(without repitition) of the letters in the string.&lt;/p>
&lt;p>Sorted Permutation (sorted_permutation): Given a string s, print all the possible two-letter permutations(without repetition) of the letters in the string where the first character comes before the second one in alphabetical order. The order in which the permutations are printed is same as the previous one (Type: Filtering).&lt;/p>
&lt;p>Repeat the Repeat (repeat_the_repeat): Given a number n, print the numbers from 1 to n in the same line and repeat this n times.&lt;/p>
&lt;p>Repeat Incrementally (repeat_incrementally): Given a number n, print a pattern where the k-th line contains the first k numbers and there are n lines in total. For example, if n is 4, the output should be:&lt;/p>
&lt;p>1
12
123
1234&lt;/p>
&lt;p>Increment and Decrement (increment_and_decrement): Given a number n, print a pattern where the k-th line should have the numbers from 1 to k and then back down to 1. For example, if n is 4, the output should be:&lt;/p>
&lt;p>1
121
12321
1234321&lt;/p>
&lt;h2>Python Code 🐍&lt;span class="hx-absolute -hx-mt-20" id="python-code-">&lt;/span>
&lt;a href="#python-code-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">task&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Python Code Solution ✅&lt;span class="hx-absolute -hx-mt-20" id="python-code-solution-">&lt;/span>
&lt;a href="#python-code-solution-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">task&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;permutation&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;sorted_permutation&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;repeat_the_repeat&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">line&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;repeat_incrementally&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">k&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;increment_and_decrement&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">k&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">inc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dec&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">inc&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">dec&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>GrPA 4 Function Basics</title><link>/exercises/graded-assignments/python/w4grpa4-function-basics-graded/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/exercises/graded-assignments/python/w4grpa4-function-basics-graded/</guid><description>
&lt;hr>
&lt;h2>GrPA 4 Function Basics 👨‍💻&lt;span class="hx-absolute -hx-mt-20" id="grpa-4-function-basics-">&lt;/span>
&lt;a href="#grpa-4-function-basics-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>
&lt;div class="border-card border-card-basic">
&lt;div class="border-card-content">&lt;div class="hextra-scrollbar hx-overflow-x-auto hx-overflow-y-hidden hx-overscroll-x-contain">
&lt;div class="hx-mt-4 hx-flex hx-w-max hx-min-w-full hx-border-b hx-border-gray-200 hx-pb-px dark:hx-border-neutral-800">&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-0" aria-selected="true" tabindex="0" data-state="selected">QUESTION&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-1">TEST CASES&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-2">SOLUTION&lt;/button>&lt;/div>
&lt;/div>
&lt;div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-0"
role="tabpanel" tabindex="0" data-state="selected" >&lt;details class="last-of-type:hx-mb-0 hx-rounded-lg hx-bg-neutral-50 dark:hx-bg-neutral-800 hx-p-2 hx-mt-4 hx-group" >
&lt;summary class="hx-flex hx-items-center hx-cursor-pointer hx-select-none hx-list-none hx-p-1 hx-rounded hx-transition-colors hover:hx-bg-gray-100 dark:hover:hx-bg-neutral-800 before:hx-mr-1 before:hx-inline-block before:hx-transition-transform before:hx-content-[''] dark:before:hx-invert rtl:before:hx-rotate-180 group-open:before:hx-rotate-90">
&lt;strong class="hx-text-lg">Instructions&lt;/strong>
&lt;/summary>
&lt;div class="hx-p-2 hx-overflow-hidden">
&lt;/div>
&lt;/details>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;h2>Question ❓&lt;span class="hx-absolute -hx-mt-20" id="question-">&lt;/span>
&lt;a href="#question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Implement the below functions as per the docstrings.&lt;/p>
&lt;h2>Python Code 🐍&lt;span class="hx-absolute -hx-mt-20" id="python-code-">&lt;/span>
&lt;a href="#python-code-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">swap_halves&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">swap_at_index&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">rotate_k&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">first_and_last_index&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">elem&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">reverse_first_and_last_halves&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Python Code Solution ✅&lt;span class="hx-absolute -hx-mt-20" id="python-code-solution-">&lt;/span>
&lt;a href="#python-code-solution-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">swap_halves&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">:]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">swap_at_index&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">rotate_k&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">k&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">n&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">:]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">first_and_last_index&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">elem&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">elem&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[::&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">elem&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">reverse_first_and_last_halves&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">items&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">][::&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">items&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">:]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">:][::&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>GrPA 4 lambda, zip, enumerate, map, filter</title><link>/exercises/graded-assignments/python/w5grpa4-lambda-zip-enumerate-map-filter-graded/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/exercises/graded-assignments/python/w5grpa4-lambda-zip-enumerate-map-filter-graded/</guid><description>
&lt;hr>
&lt;h2>GrPA 4 lambda, zip, enumerate, map, filter 👨‍💻&lt;span class="hx-absolute -hx-mt-20" id="grpa-4-lambda-zip-enumerate-map-filter-">&lt;/span>
&lt;a href="#grpa-4-lambda-zip-enumerate-map-filter-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>
&lt;div class="border-card border-card-basic">
&lt;div class="border-card-content">&lt;div class="hextra-scrollbar hx-overflow-x-auto hx-overflow-y-hidden hx-overscroll-x-contain">
&lt;div class="hx-mt-4 hx-flex hx-w-max hx-min-w-full hx-border-b hx-border-gray-200 hx-pb-px dark:hx-border-neutral-800">&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-0" aria-selected="true" tabindex="0" data-state="selected">QUESTION&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-1">TEST CASES&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-2">SOLUTION&lt;/button>&lt;/div>
&lt;/div>
&lt;div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-0"
role="tabpanel" tabindex="0" data-state="selected" >&lt;details class="last-of-type:hx-mb-0 hx-rounded-lg hx-bg-neutral-50 dark:hx-bg-neutral-800 hx-p-2 hx-mt-4 hx-group" >
&lt;summary class="hx-flex hx-items-center hx-cursor-pointer hx-select-none hx-list-none hx-p-1 hx-rounded hx-transition-colors hover:hx-bg-gray-100 dark:hover:hx-bg-neutral-800 before:hx-mr-1 before:hx-inline-block before:hx-transition-transform before:hx-content-[''] dark:before:hx-invert rtl:before:hx-rotate-180 group-open:before:hx-rotate-90">
&lt;strong class="hx-text-lg">Instructions&lt;/strong>
&lt;/summary>
&lt;div class="hx-p-2 hx-overflow-hidden">
&lt;/div>
&lt;/details>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;h2>Question ❓&lt;span class="hx-absolute -hx-mt-20" id="question-">&lt;/span>
&lt;a href="#question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Implement the given functions according to the docstrings.&lt;/p>
&lt;h2>Python Code 🐍&lt;span class="hx-absolute -hx-mt-20" id="python-code-">&lt;/span>
&lt;a href="#python-code-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Python Code Solution ✅&lt;span class="hx-absolute -hx-mt-20" id="python-code-solution-">&lt;/span>
&lt;a href="#python-code-solution-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>GrPA 4 Loops Application Graded</title><link>/exercises/graded-assignments/python/w3grpa4-loops-application-graded/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/exercises/graded-assignments/python/w3grpa4-loops-application-graded/</guid><description>
&lt;hr>
&lt;h2>GrPA 4 Loops Application Graded 👨‍💻&lt;span class="hx-absolute -hx-mt-20" id="grpa-4-loops-application-graded-">&lt;/span>
&lt;a href="#grpa-4-loops-application-graded-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>
&lt;div class="border-card border-card-basic">
&lt;div class="border-card-content">&lt;div class="hextra-scrollbar hx-overflow-x-auto hx-overflow-y-hidden hx-overscroll-x-contain">
&lt;div class="hx-mt-4 hx-flex hx-w-max hx-min-w-full hx-border-b hx-border-gray-200 hx-pb-px dark:hx-border-neutral-800">&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-0" aria-selected="true" tabindex="0" data-state="selected">QUESTION&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-1">TEST CASES&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-2">SOLUTION&lt;/button>&lt;/div>
&lt;/div>
&lt;div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-0"
role="tabpanel" tabindex="0" data-state="selected" >&lt;details class="last-of-type:hx-mb-0 hx-rounded-lg hx-bg-neutral-50 dark:hx-bg-neutral-800 hx-p-2 hx-mt-4 hx-group" >
&lt;summary class="hx-flex hx-items-center hx-cursor-pointer hx-select-none hx-list-none hx-p-1 hx-rounded hx-transition-colors hover:hx-bg-gray-100 dark:hover:hx-bg-neutral-800 before:hx-mr-1 before:hx-inline-block before:hx-transition-transform before:hx-content-[''] dark:before:hx-invert rtl:before:hx-rotate-180 group-open:before:hx-rotate-90">
&lt;strong class="hx-text-lg">Instructions&lt;/strong>
&lt;/summary>
&lt;div class="hx-p-2 hx-overflow-hidden">
&lt;/div>
&lt;/details>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;h2>Question ❓&lt;span class="hx-absolute -hx-mt-20" id="question-">&lt;/span>
&lt;a href="#question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>You are tasked with writing a program that can handle various tasks based on the input. The first line of the input represents the task to be performed. The possible tasks are:&lt;/p>
&lt;p>factors - Find the factors of a number n (including 1 and itself) in ascending order.&lt;/p>
&lt;p>find_min - Take n numbers from the input and print the minimum number.
prime_check - Check whether a given number is prime or not.&lt;/p>
&lt;p>is_sorted - Check if all characters of the given string from input are in alphabetical order. Print the output as &amp;ldquo;True&amp;rdquo; or &amp;ldquo;False&amp;rdquo; accordingly.&lt;/p>
&lt;p>any_true - Take n numbers from input and check if any of the numbers are divisible by 3. Print the output as &amp;ldquo;True&amp;rdquo; or &amp;ldquo;False&amp;rdquo; accordingly.&lt;/p>
&lt;p>manhattan - Take inputs directions such as &amp;ldquo;UP&amp;rdquo;, &amp;ldquo;DOWN&amp;rdquo;, &amp;ldquo;LEFT&amp;rdquo; and &amp;ldquo;RIGHT&amp;rdquo; from the input until the input is &amp;ldquo;STOP&amp;rdquo;. Assume you are starting from (0,0) in a cartesian coordinate. Find the Manhattan distance between the starting point and the ending point by following the steps in the cartesian plane.&lt;/p>
&lt;p>Write a program to solve these tasks. Use loops where necessary.&lt;/p>
&lt;h2>Python Code 🐍&lt;span class="hx-absolute -hx-mt-20" id="python-code-">&lt;/span>
&lt;a href="#python-code-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># this is to ensure that you cannot use the built in any, all and min function for this exercise but you can use it in the OPPEs.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">any&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">all&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">min&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">task&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Python Code Solution ✅&lt;span class="hx-absolute -hx-mt-20" id="python-code-solution-">&lt;/span>
&lt;a href="#python-code-solution-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">any&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">all&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">min&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">task&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;factors&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;find_min&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">first&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">minimum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">first&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">count&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">minimum&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">minimum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">minimum&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;prime_check&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;False&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">is_prime&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">**&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">is_prime&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;True&amp;#34;&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">is_prime&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="s2">&amp;#34;False&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;is_sorted&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sorted_flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sorted_flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;True&amp;#34;&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">sorted_flag&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="s2">&amp;#34;False&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;any_true&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">found&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">found&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;True&amp;#34;&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">found&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="s2">&amp;#34;False&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;manhattan&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">direction&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">direction&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;STOP&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">direction&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;UP&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">direction&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;DOWN&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">direction&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;LEFT&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">direction&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;RIGHT&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">))&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>GrPA 5 Comprehensions</title><link>/exercises/graded-assignments/python/w4grpa5-comprehensions-graded/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/exercises/graded-assignments/python/w4grpa5-comprehensions-graded/</guid><description>
&lt;hr>
&lt;h2>GrPA 5 Comprehensions 👨‍💻&lt;span class="hx-absolute -hx-mt-20" id="grpa-5-comprehensions-">&lt;/span>
&lt;a href="#grpa-5-comprehensions-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>
&lt;div class="border-card border-card-basic">
&lt;div class="border-card-content">&lt;div class="hextra-scrollbar hx-overflow-x-auto hx-overflow-y-hidden hx-overscroll-x-contain">
&lt;div class="hx-mt-4 hx-flex hx-w-max hx-min-w-full hx-border-b hx-border-gray-200 hx-pb-px dark:hx-border-neutral-800">&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-0" aria-selected="true" tabindex="0" data-state="selected">QUESTION&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-1">TEST CASES&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-2">SOLUTION&lt;/button>&lt;/div>
&lt;/div>
&lt;div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-0"
role="tabpanel" tabindex="0" data-state="selected" >&lt;details class="last-of-type:hx-mb-0 hx-rounded-lg hx-bg-neutral-50 dark:hx-bg-neutral-800 hx-p-2 hx-mt-4 hx-group" >
&lt;summary class="hx-flex hx-items-center hx-cursor-pointer hx-select-none hx-list-none hx-p-1 hx-rounded hx-transition-colors hover:hx-bg-gray-100 dark:hover:hx-bg-neutral-800 before:hx-mr-1 before:hx-inline-block before:hx-transition-transform before:hx-content-[''] dark:before:hx-invert rtl:before:hx-rotate-180 group-open:before:hx-rotate-90">
&lt;strong class="hx-text-lg">Instructions&lt;/strong>
&lt;/summary>
&lt;div class="hx-p-2 hx-overflow-hidden">
&lt;/div>
&lt;/details>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;h2>Question ❓&lt;span class="hx-absolute -hx-mt-20" id="question-">&lt;/span>
&lt;a href="#question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Implement the below functions as per the docstrings.&lt;/p>
&lt;h2>Python Code 🐍&lt;span class="hx-absolute -hx-mt-20" id="python-code-">&lt;/span>
&lt;a href="#python-code-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">sum_of_squares&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">numbers&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">total_cost&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cart&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">abbreviation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sentence&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">palindromes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">words&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">all_chars_from_big_words&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sentence&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">flatten&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lol&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">unflatten&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n_rows&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">make_identity_matrix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">make_lower_triangular_matrix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Python Code Solution ✅&lt;span class="hx-absolute -hx-mt-20" id="python-code-solution-">&lt;/span>
&lt;a href="#python-code-solution-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">sum_of_squares&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">numbers&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">sum&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">numbers&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">total_cost&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cart&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">sum&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">qty&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">qty&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">cart&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">abbreviation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sentence&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">word&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">upper&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">word&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">sentence&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">()])&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">palindromes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">words&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">w&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">w&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">words&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">w&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">w&lt;/span>&lt;span class="p">[::&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">all_chars_from_big_words&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sentence&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lower&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">w&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">sentence&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">]))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">flatten&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lol&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">item&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">sublist&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">lol&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">sublist&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">unflatten&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n_rows&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n_cols&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="n">n_rows&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">n_cols&lt;/span>&lt;span class="p">:(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">n_cols&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n_rows&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">make_identity_matrix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">)]&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">make_lower_triangular_matrix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">)]&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">)]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>GrPA 5 min, max, sorted, groupby</title><link>/exercises/graded-assignments/python/w5grpa5-min-max-sorted-groupby-graded/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/exercises/graded-assignments/python/w5grpa5-min-max-sorted-groupby-graded/</guid><description>
&lt;hr>
&lt;h2>GrPA 5 min, max, sorted, groupby 👨‍💻&lt;span class="hx-absolute -hx-mt-20" id="grpa-5-min-max-sorted-groupby-">&lt;/span>
&lt;a href="#grpa-5-min-max-sorted-groupby-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>
&lt;div class="border-card border-card-basic">
&lt;div class="border-card-content">&lt;div class="hextra-scrollbar hx-overflow-x-auto hx-overflow-y-hidden hx-overscroll-x-contain">
&lt;div class="hx-mt-4 hx-flex hx-w-max hx-min-w-full hx-border-b hx-border-gray-200 hx-pb-px dark:hx-border-neutral-800">&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-0" aria-selected="true" tabindex="0" data-state="selected">QUESTION&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-1">TEST CASES&lt;/button>&lt;button
class="hextra-tabs-toggle data-[state=selected]:hx-border-primary-500 data-[state=selected]:hx-text-primary-600 data-[state=selected]:dark:hx-border-primary-500 data-[state=selected]:dark:hx-text-primary-600 hx-mr-2 hx-rounded-t hx-p-2 hx-font-medium hx-leading-5 hx-transition-colors -hx-mb-0.5 hx-select-none hx-border-b-2 hx-border-transparent hx-text-gray-600 hover:hx-border-gray-200 hover:hx-text-black dark:hx-text-gray-200 dark:hover:hx-border-neutral-800 dark:hover:hx-text-white"
role="tab"
type="button"
aria-controls="tabs-panel-2">SOLUTION&lt;/button>&lt;/div>
&lt;/div>
&lt;div>
&lt;div
class="hextra-tabs-panel hx-rounded hx-pt-6 hx-hidden data-[state=selected]:hx-block"
id="tabs-panel-0"
role="tabpanel" tabindex="0" data-state="selected" >&lt;details class="last-of-type:hx-mb-0 hx-rounded-lg hx-bg-neutral-50 dark:hx-bg-neutral-800 hx-p-2 hx-mt-4 hx-group" >
&lt;summary class="hx-flex hx-items-center hx-cursor-pointer hx-select-none hx-list-none hx-p-1 hx-rounded hx-transition-colors hover:hx-bg-gray-100 dark:hover:hx-bg-neutral-800 before:hx-mr-1 before:hx-inline-block before:hx-transition-transform before:hx-content-[''] dark:before:hx-invert rtl:before:hx-rotate-180 group-open:before:hx-rotate-90">
&lt;strong class="hx-text-lg">Instructions&lt;/strong>
&lt;/summary>
&lt;div class="hx-p-2 hx-overflow-hidden">
&lt;/div>
&lt;/details>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;h2>Question ❓&lt;span class="hx-absolute -hx-mt-20" id="question-">&lt;/span>
&lt;a href="#question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Implement all the given functions below according to the docstring.&lt;/p>
&lt;h2>Python Code 🐍&lt;span class="hx-absolute -hx-mt-20" id="python-code-">&lt;/span>
&lt;a href="#python-code-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Python Code Solution ✅&lt;span class="hx-absolute -hx-mt-20" id="python-code-solution-">&lt;/span>
&lt;a href="#python-code-solution-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>Python Week 1</title><link>/exercises/graded-assignments/python/graded-assignment-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/exercises/graded-assignments/python/graded-assignment-1/</guid><description>
&lt;hr>
&lt;h2>Multiple Choice Questions 🧠&lt;span class="hx-absolute -hx-mt-20" id="multiple-choice-questions-">&lt;/span>
&lt;a href="#multiple-choice-questions-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>1&lt;/strong>) What will be the output type of the expression &lt;code>5 + 2&lt;/code>?&lt;/p>
&lt;p>int&lt;/p>
&lt;p>float&lt;/p>
&lt;p>str&lt;/p>
&lt;p>bool&lt;/p>
&lt;p>Invalid Expression (raises an error)&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>🎯 &lt;strong>The output type of the expression &lt;code>5 + 2&lt;/code> in Python is &lt;code>int&lt;/code>.&lt;/strong>&lt;/p>
&lt;p>Let&amp;rsquo;s break it down step by step! 👇&lt;/p>
&lt;h3>Step-by-Step Explanation 🐍&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-explanation-">&lt;/span>
&lt;a href="#step-by-step-explanation-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Both operands are integers:&lt;/strong>
&lt;ul>
&lt;li>&lt;code>5&lt;/code> is an integer (&lt;code>int&lt;/code>)&lt;/li>
&lt;li>&lt;code>2&lt;/code> is also an integer (&lt;code>int&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Using the &lt;code>+&lt;/code> operator:&lt;/strong>
&lt;ul>
&lt;li>The &lt;code>+&lt;/code> operator adds two numbers.&lt;/li>
&lt;li>When both numbers are integers, Python performs integer addition.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Result:&lt;/strong>
&lt;ul>
&lt;li>&lt;code>5 + 2&lt;/code> evaluates to &lt;code>7&lt;/code>.&lt;/li>
&lt;li>Since both operands are integers, &lt;strong>the result is also an integer&lt;/strong> (&lt;code>int&lt;/code>)[^1][^2][^3].&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>Practice It Yourself! 💻&lt;span class="hx-absolute -hx-mt-20" id="practice-it-yourself-">&lt;/span>
&lt;a href="#practice-it-yourself-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Try this in your Python shell:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Output: 7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># Output: &amp;lt;class &amp;#39;int&amp;#39;&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Why Not Other Types? 🤔&lt;span class="hx-absolute -hx-mt-20" id="why-not-other-types-">&lt;/span>
&lt;a href="#why-not-other-types-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>int&lt;/strong>&lt;/td>
&lt;td style="text-align: left">✅ Correct! Both operands are integers, so the result is an integer.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">float&lt;/td>
&lt;td style="text-align: left">❌ Would only happen if at least one operand was a float (e.g., &lt;code>5.0 + 2&lt;/code>).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">str&lt;/td>
&lt;td style="text-align: left">❌ Only if you use quotes, like &lt;code>'5' + '2'&lt;/code>, which would concatenate strings.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">bool&lt;/td>
&lt;td style="text-align: left">❌ Only if you use Boolean values, like &lt;code>True + False&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">Invalid/Error&lt;/td>
&lt;td style="text-align: left">❌ This is a valid expression; no error is raised.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Quick Quiz! 📝&lt;span class="hx-absolute -hx-mt-20" id="quick-quiz-">&lt;/span>
&lt;a href="#quick-quiz-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Q:&lt;/strong> What will be the type of the result for &lt;code>5 + 2.0&lt;/code>?&lt;/p>
&lt;p>A) int&lt;/p>
&lt;p>B) float&lt;/p>
&lt;p>C) str&lt;/p>
&lt;p>D) bool&lt;/p>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>B) float&lt;/p>
&lt;p>&lt;em>Explanation: When you add an integer and a float, Python automatically converts the result to a float.&lt;/em>&lt;/p>
&lt;p>&lt;strong>Summary:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>5 + 2&lt;/code> results in an &lt;code>int&lt;/code> type output.&lt;/strong>&lt;/li>
&lt;li>You can always check the type using the &lt;code>type()&lt;/code> function in Python.&lt;/li>
&lt;/ul>
&lt;p>Keep practicing! 🚀&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>2&lt;/strong>) What will be the output type of the expression &lt;code>5 + 2.0&lt;/code>?&lt;/p>
&lt;p>int&lt;/p>
&lt;p>float&lt;/p>
&lt;p>str&lt;/p>
&lt;p>bool&lt;/p>
&lt;p>Invalid Expression (raises an error)&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>✨ &lt;strong>The output type of the expression &lt;code>5 + 2.0&lt;/code> in Python is &lt;code>float&lt;/code>.&lt;/strong>&lt;/p>
&lt;p>Let&amp;rsquo;s see why, step by step! 🚀&lt;/p>
&lt;h3>Step-by-Step Explanation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-explanation">&lt;/span>
&lt;a href="#step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Operands:&lt;/strong>
&lt;ul>
&lt;li>&lt;code>5&lt;/code> is an &lt;strong>integer&lt;/strong> (&lt;code>int&lt;/code>)&lt;/li>
&lt;li>&lt;code>2.0&lt;/code> is a &lt;strong>floating-point number&lt;/strong> (&lt;code>float&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Addition with Mixed Types:&lt;/strong>
&lt;ul>
&lt;li>When you add an &lt;code>int&lt;/code> and a &lt;code>float&lt;/code>, &lt;strong>Python automatically converts the integer to a float&lt;/strong> (this is called &lt;em>implicit type conversion&lt;/em> or &lt;em>type promotion&lt;/em>)[^1].&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Result:&lt;/strong>
&lt;ul>
&lt;li>The result of &lt;code>5 + 2.0&lt;/code> is &lt;code>7.0&lt;/code>&lt;/li>
&lt;li>The type of the result is &lt;strong>float&lt;/strong>[^1].&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>Try It Yourself! 🧑‍💻&lt;span class="hx-absolute -hx-mt-20" id="try-it-yourself-">&lt;/span>
&lt;a href="#try-it-yourself-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">2.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Output: 7.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># Output: &amp;lt;class &amp;#39;float&amp;#39;&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Why Not Other Types? 🤔&lt;span class="hx-absolute -hx-mt-20" id="why-not-other-types-">&lt;/span>
&lt;a href="#why-not-other-types-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>float&lt;/strong>&lt;/td>
&lt;td style="text-align: left">✅ Correct! Mixing &lt;code>int&lt;/code> and &lt;code>float&lt;/code> gives a &lt;code>float&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">int&lt;/td>
&lt;td style="text-align: left">❌ Only if both operands were integers.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">str&lt;/td>
&lt;td style="text-align: left">❌ Only if you use strings, like &lt;code>'5' + '2.0'&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">bool&lt;/td>
&lt;td style="text-align: left">❌ Only if you use Boolean values, like &lt;code>True + False&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">Invalid/Error&lt;/td>
&lt;td style="text-align: left">❌ This is a valid expression; no error is raised.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Practice Question 📝&lt;span class="hx-absolute -hx-mt-20" id="practice-question-">&lt;/span>
&lt;a href="#practice-question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Q:&lt;/strong> What will be the type of the result for &lt;code>3.5 + 2&lt;/code>?&lt;/p>
&lt;p>A) int&lt;/p>
&lt;p>B) float&lt;/p>
&lt;p>C) str&lt;/p>
&lt;p>D) bool&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>B) float&lt;/p>
&lt;p>&lt;em>Explanation: Adding a float and an int always results in a float in Python.&lt;/em>&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Summary:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>5 + 2.0&lt;/code> results in a value of type &lt;strong>float&lt;/strong> (&lt;code>7.0&lt;/code>) in Python[^1].&lt;/li>
&lt;li>Python always promotes to the more &amp;ldquo;complex&amp;rdquo; type when mixing numbers: &lt;code>int&lt;/code> → &lt;code>float&lt;/code> → &lt;code>complex&lt;/code>[^1].&lt;/li>
&lt;/ul>
&lt;p>Keep experimenting in the Python shell to see how types change! 🐍✨&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>3&lt;/strong>) What will be the output type of the expression &lt;code>'5' + &amp;quot;2&amp;quot;&lt;/code>?&lt;/p>
&lt;p>int&lt;/p>
&lt;p>float&lt;/p>
&lt;p>str&lt;/p>
&lt;p>bool&lt;/p>
&lt;p>Invalid Expression (raises an error)&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>🎉 &lt;strong>The output type of the expression &lt;code>'5' + &amp;quot;2&amp;quot;&lt;/code> in Python is &lt;code>str&lt;/code> (string)!&lt;/strong>&lt;/p>
&lt;p>Let&amp;rsquo;s see why, step by step! 🚦&lt;/p>
&lt;h3>Step-by-Step Explanation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-explanation">&lt;/span>
&lt;a href="#step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Operands:&lt;/strong>
&lt;ul>
&lt;li>&lt;code>'5'&lt;/code> is a string (because it&amp;rsquo;s inside single quotes).&lt;/li>
&lt;li>&lt;code>&amp;quot;2&amp;quot;&lt;/code> is also a string (because it&amp;rsquo;s inside double quotes).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>The &lt;code>+&lt;/code> Operator with Strings:&lt;/strong>
&lt;ul>
&lt;li>In Python, the &lt;code>+&lt;/code> operator &lt;strong>concatenates&lt;/strong> (joins) two strings together, not adds them as numbers[^1][^2].&lt;/li>
&lt;li>So, &lt;code>'5' + &amp;quot;2&amp;quot;&lt;/code> results in the string &lt;code>'52'&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Result Type:&lt;/strong>
&lt;ul>
&lt;li>The result is a new string: &lt;code>'52'&lt;/code>&lt;/li>
&lt;li>Its type is &lt;strong>&lt;code>str&lt;/code>&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>Try It Yourself! 🧑‍💻&lt;span class="hx-absolute -hx-mt-20" id="try-it-yourself-">&lt;/span>
&lt;a href="#try-it-yourself-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;5&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Output: 52&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># Output: &amp;lt;class &amp;#39;str&amp;#39;&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Why Not Other Types? 🤔&lt;span class="hx-absolute -hx-mt-20" id="why-not-other-types-">&lt;/span>
&lt;a href="#why-not-other-types-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>str&lt;/strong>&lt;/td>
&lt;td style="text-align: left">✅ Correct! Concatenating two strings gives a string.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">int&lt;/td>
&lt;td style="text-align: left">❌ Only if you add numbers, like &lt;code>5 + 2&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">float&lt;/td>
&lt;td style="text-align: left">❌ Not possible unless you use floats, like &lt;code>5.0 + 2.0&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">bool&lt;/td>
&lt;td style="text-align: left">❌ Only happens with Boolean values, like &lt;code>True + False&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">Invalid/Error&lt;/td>
&lt;td style="text-align: left">❌ This is valid in Python; no error is raised.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Practice Question 📝&lt;span class="hx-absolute -hx-mt-20" id="practice-question-">&lt;/span>
&lt;a href="#practice-question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Q:&lt;/strong> What will be the type of the result for &lt;code>&amp;quot;Hello&amp;quot; + 'World'&lt;/code>?&lt;/p>
&lt;p>A) int&lt;/p>
&lt;p>B) float&lt;/p>
&lt;p>C) str&lt;/p>
&lt;p>D) bool&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>C) str&lt;/p>
&lt;p>&lt;em>Explanation: Concatenating two strings always gives a string.&lt;/em>&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Summary:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>'5' + &amp;quot;2&amp;quot;&lt;/code> produces a string: &lt;code>'52'&lt;/code>&lt;/li>
&lt;li>&lt;strong>Type:&lt;/strong> &lt;code>str&lt;/code> (string)&lt;/li>
&lt;/ul>
&lt;p>Keep practicing and experimenting! 🚀&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>4&lt;/strong>) What will be the output type of the expression &lt;code>5 == 2&lt;/code>?&lt;/p>
&lt;p>int&lt;/p>
&lt;p>float&lt;/p>
&lt;p>str&lt;/p>
&lt;p>bool&lt;/p>
&lt;p>Invalid Expression (raises an error)&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>✅ &lt;strong>The output type of the expression &lt;code>5 == 2&lt;/code> in Python is &lt;code>bool&lt;/code> (Boolean type).&lt;/strong>&lt;/p>
&lt;p>Let&amp;rsquo;s understand step by step! 🐍&lt;/p>
&lt;h3>Step-by-Step Explanation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-explanation">&lt;/span>
&lt;a href="#step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>What does &lt;code>==&lt;/code> do?&lt;/strong>
&lt;ul>
&lt;li>The &lt;code>==&lt;/code> operator is a &lt;strong>relational (comparison) operator&lt;/strong> in Python.&lt;/li>
&lt;li>It checks if the value on the left (&lt;code>5&lt;/code>) is &lt;strong>equal&lt;/strong> to the value on the right (&lt;code>2&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What is the result of &lt;code>5 == 2&lt;/code>?&lt;/strong>
&lt;ul>
&lt;li>Since &lt;code>5&lt;/code> is &lt;strong>not equal&lt;/strong> to &lt;code>2&lt;/code>, the expression evaluates to &lt;code>False&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What is the type of the result?&lt;/strong>
&lt;ul>
&lt;li>The result of any comparison using relational operators (&lt;code>==&lt;/code>, &lt;code>!=&lt;/code>, &lt;code>&amp;lt;&lt;/code>, &lt;code>&amp;gt;&lt;/code>, &lt;code>&amp;lt;=&lt;/code>, &lt;code>&amp;gt;=&lt;/code>) is always of type &lt;strong>&lt;code>bool&lt;/code>&lt;/strong> in Python.&lt;/li>
&lt;li>The possible values are &lt;code>True&lt;/code> or &lt;code>False&lt;/code>[1].&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>Try It Yourself! 💻&lt;span class="hx-absolute -hx-mt-20" id="try-it-yourself-">&lt;/span>
&lt;a href="#try-it-yourself-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Output: False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># Output: &amp;lt;class &amp;#39;bool&amp;#39;&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Why Not Other Types? 🤔&lt;span class="hx-absolute -hx-mt-20" id="why-not-other-types-">&lt;/span>
&lt;a href="#why-not-other-types-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">int&lt;/td>
&lt;td style="text-align: left">❌ Only for integer arithmetic, not comparison.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">float&lt;/td>
&lt;td style="text-align: left">❌ Only for floating-point arithmetic, not comparison.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">str&lt;/td>
&lt;td style="text-align: left">❌ Only for string operations, not comparison.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>bool&lt;/strong>&lt;/td>
&lt;td style="text-align: left">✅ Correct! Comparison returns a Boolean (&lt;code>True&lt;/code> or &lt;code>False&lt;/code>).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">Invalid/Error&lt;/td>
&lt;td style="text-align: left">❌ This is a valid expression; no error is raised.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Practice Question 📝&lt;span class="hx-absolute -hx-mt-20" id="practice-question-">&lt;/span>
&lt;a href="#practice-question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Q:&lt;/strong> What will be the type of the result for &lt;code>&amp;quot;5&amp;quot; == 5&lt;/code>?&lt;/p>
&lt;p>A) int&lt;/p>
&lt;p>B) float&lt;/p>
&lt;p>C) str&lt;/p>
&lt;p>D) bool&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>D) bool&lt;/p>
&lt;p>&lt;em>Explanation: Even though the values are not equal (string vs integer), the result of the comparison is &lt;code>False&lt;/code>, and its type is &lt;code>bool&lt;/code>.&lt;/em>&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Summary:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>5 == 2&lt;/code> returns &lt;code>False&lt;/code>&lt;/li>
&lt;li>&lt;strong>Type:&lt;/strong> &lt;code>bool&lt;/code> (Boolean)&lt;/li>
&lt;/ul>
&lt;p>Keep practicing and try more comparisons! 🚦✨&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>5&lt;/strong>) What will be the output type of the expression &lt;code>'5 &amp;gt; 2'&lt;/code>?&lt;/p>
&lt;p>int&lt;/p>
&lt;p>float&lt;/p>
&lt;p>str&lt;/p>
&lt;p>bool&lt;/p>
&lt;p>Invalid Expression (raises an error)&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>🚦 &lt;strong>The output type of the expression &lt;code>'5 &amp;gt; 2'&lt;/code> is &lt;code>str&lt;/code> (string).&lt;/strong>&lt;/p>
&lt;p>Let&amp;rsquo;s break it down step by step! 👇&lt;/p>
&lt;h3>Step-by-Step Explanation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-explanation">&lt;/span>
&lt;a href="#step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Look at the quotes:&lt;/strong>
&lt;ul>
&lt;li>&lt;code>'5 &amp;gt; 2'&lt;/code> is surrounded by single quotes.&lt;/li>
&lt;li>In Python, anything inside quotes (single &lt;code>'&lt;/code> or double &lt;code>&amp;quot;&lt;/code>) is treated as a &lt;strong>string&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What is inside the string?&lt;/strong>
&lt;ul>
&lt;li>The content &lt;code>5 &amp;gt; 2&lt;/code> is just text here, &lt;strong>not an actual comparison&lt;/strong>.&lt;/li>
&lt;li>Python does &lt;strong>not&lt;/strong> evaluate the expression inside quotes. It just treats it as a sequence of characters.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>So, what is the type?&lt;/strong>
&lt;ul>
&lt;li>The type is &lt;strong>string&lt;/strong> (&lt;code>str&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>Try It Yourself! 🧑‍💻&lt;span class="hx-absolute -hx-mt-20" id="try-it-yourself-">&lt;/span>
&lt;a href="#try-it-yourself-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;5 &amp;gt; 2&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Output: 5 &amp;gt; 2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># Output: &amp;lt;class &amp;#39;str&amp;#39;&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Why Not Other Types? 🤔&lt;span class="hx-absolute -hx-mt-20" id="why-not-other-types-">&lt;/span>
&lt;a href="#why-not-other-types-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">int&lt;/td>
&lt;td style="text-align: left">❌ Only if you do arithmetic like &lt;code>5 + 2&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">float&lt;/td>
&lt;td style="text-align: left">❌ Only if you do floating-point arithmetic.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>str&lt;/strong>&lt;/td>
&lt;td style="text-align: left">✅ Correct! Quotes make it a string, no matter what&amp;rsquo;s inside.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">bool&lt;/td>
&lt;td style="text-align: left">❌ Only if you write &lt;code>5 &amp;gt; 2&lt;/code> (without quotes), which evaluates to &lt;code>True&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">Invalid/Error&lt;/td>
&lt;td style="text-align: left">❌ This is valid Python code; no error is raised.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Practice Question 📝&lt;span class="hx-absolute -hx-mt-20" id="practice-question-">&lt;/span>
&lt;a href="#practice-question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Q:&lt;/strong> What will be the type of the result for &lt;code>&amp;quot;Hello &amp;gt; World&amp;quot;&lt;/code>?&lt;/p>
&lt;p>A) int&lt;/p>
&lt;p>B) float&lt;/p>
&lt;p>C) str&lt;/p>
&lt;p>D) bool&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>C) str&lt;/p>
&lt;p>&lt;em>Explanation: Anything inside quotes is a string, even if it looks like a comparison!&lt;/em>&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Summary:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>'5 &amp;gt; 2'&lt;/code> is a &lt;strong>string&lt;/strong> (&lt;code>str&lt;/code>) because it&amp;rsquo;s inside quotes.&lt;/li>
&lt;li>If you want a comparison, write &lt;code>5 &amp;gt; 2&lt;/code> (without quotes), which gives a &lt;code>bool&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>Keep practicing and notice how quotes change the meaning in Python! 🐍✨&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>6&lt;/strong>) What will be the output type of the expression &lt;code>&amp;quot;5&amp;quot; &amp;gt; &amp;quot;2&amp;quot;&lt;/code>?&lt;/p>
&lt;p>int&lt;/p>
&lt;p>float&lt;/p>
&lt;p>str&lt;/p>
&lt;p>bool&lt;/p>
&lt;p>Invalid Expression (raises an error)&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>🌟 &lt;strong>The output type of the expression &lt;code>&amp;quot;5&amp;quot; &amp;gt; &amp;quot;2&amp;quot;&lt;/code> in Python is &lt;code>bool&lt;/code> (Boolean)!&lt;/strong>&lt;/p>
&lt;p>Let&amp;rsquo;s break it down step by step with clear explanation and a practice question! 👇&lt;/p>
&lt;h3>Step-by-Step Explanation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-explanation">&lt;/span>
&lt;a href="#step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Both operands are strings:&lt;/strong>
&lt;ul>
&lt;li>&lt;code>&amp;quot;5&amp;quot;&lt;/code> is a string (because it&amp;rsquo;s in double quotes)&lt;/li>
&lt;li>&lt;code>&amp;quot;2&amp;quot;&lt;/code> is also a string&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>The &lt;code>&amp;gt;&lt;/code> operator between strings:&lt;/strong>
&lt;ul>
&lt;li>In Python, you can compare strings using relational operators like &lt;code>&amp;gt;&lt;/code>, &lt;code>&amp;lt;&lt;/code>, &lt;code>==&lt;/code>, etc.&lt;/li>
&lt;li>The comparison is done &lt;strong>lexicographically&lt;/strong> (like in a dictionary), comparing Unicode values of characters one by one[^1].&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>How does &lt;code>&amp;quot;5&amp;quot; &amp;gt; &amp;quot;2&amp;quot;&lt;/code> work?&lt;/strong>
&lt;ul>
&lt;li>Python checks the Unicode value of &lt;code>'5'&lt;/code> and &lt;code>'2'&lt;/code>.&lt;/li>
&lt;li>Since &lt;code>'5'&lt;/code> comes after &lt;code>'2'&lt;/code> in Unicode order, &lt;code>&amp;quot;5&amp;quot; &amp;gt; &amp;quot;2&amp;quot;&lt;/code> evaluates to &lt;code>True&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What is the output type?&lt;/strong>
&lt;ul>
&lt;li>The result of any comparison operation is always of type &lt;strong>&lt;code>bool&lt;/code>&lt;/strong> (Boolean)[^1].&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>Try It Yourself! 🧑‍💻&lt;span class="hx-absolute -hx-mt-20" id="try-it-yourself-">&lt;/span>
&lt;a href="#try-it-yourself-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;5&amp;#34;&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Output: True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># Output: &amp;lt;class &amp;#39;bool&amp;#39;&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Why Not Other Types? 🤔&lt;span class="hx-absolute -hx-mt-20" id="why-not-other-types-">&lt;/span>
&lt;a href="#why-not-other-types-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">int&lt;/td>
&lt;td style="text-align: left">❌ Only for arithmetic, not comparison.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">float&lt;/td>
&lt;td style="text-align: left">❌ Only for arithmetic, not comparison.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">str&lt;/td>
&lt;td style="text-align: left">❌ Only if you put quotes around the whole expression, like &lt;code>&amp;quot;'5' &amp;gt; '2'&amp;quot;&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>bool&lt;/strong>&lt;/td>
&lt;td style="text-align: left">✅ Correct! Comparisons always return a Boolean (&lt;code>True&lt;/code> or &lt;code>False&lt;/code>).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">Invalid/Error&lt;/td>
&lt;td style="text-align: left">❌ This is a valid expression; no error is raised.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Practice Question 📝&lt;span class="hx-absolute -hx-mt-20" id="practice-question-">&lt;/span>
&lt;a href="#practice-question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Q:&lt;/strong> What will be the type of the result for &lt;code>&amp;quot;apple&amp;quot; &amp;lt; &amp;quot;banana&amp;quot;&lt;/code>?&lt;/p>
&lt;p>A) int&lt;/p>
&lt;p>B) float&lt;/p>
&lt;p>C) str&lt;/p>
&lt;p>D) bool&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>D) bool&lt;/p>
&lt;p>&lt;em>Explanation: String comparisons return a Boolean value (&lt;code>True&lt;/code> or &lt;code>False&lt;/code>).&lt;/em>&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Summary:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>&amp;quot;5&amp;quot; &amp;gt; &amp;quot;2&amp;quot;&lt;/code> results in a value of type &lt;strong>&lt;code>bool&lt;/code>&lt;/strong> (Boolean).&lt;/li>
&lt;li>The result is &lt;code>True&lt;/code> because &lt;code>'5'&lt;/code> is greater than &lt;code>'2'&lt;/code> lexicographically.&lt;/li>
&lt;/ul>
&lt;p>Keep experimenting with different string comparisons! 🐍💡&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>7&lt;/strong>) What will be the output type of the expression &lt;code>'True' or 'False'&lt;/code>?&lt;/p>
&lt;p>int&lt;/p>
&lt;p>float&lt;/p>
&lt;p>str&lt;/p>
&lt;p>bool&lt;/p>
&lt;p>Invalid Expression (raises an error)&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>✨ &lt;strong>The output type of the expression &lt;code>'True' or 'False'&lt;/code> in Python is &lt;code>str&lt;/code> (string).&lt;/strong>&lt;/p>
&lt;p>Let&amp;rsquo;s break it down step by step! 🐍👇&lt;/p>
&lt;h3>Step-by-Step Explanation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-explanation">&lt;/span>
&lt;a href="#step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Both operands are strings:&lt;/strong>
&lt;ul>
&lt;li>&lt;code>'True'&lt;/code> is a string (because it is inside single quotes).&lt;/li>
&lt;li>&lt;code>'False'&lt;/code> is also a string.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>The &lt;code>or&lt;/code> operator with strings:&lt;/strong>
&lt;ul>
&lt;li>In Python, the &lt;code>or&lt;/code> operator returns the &lt;strong>first operand if it is &amp;ldquo;truthy&amp;rdquo;&lt;/strong> (not empty or zero); otherwise, it returns the second operand[^1].&lt;/li>
&lt;li>Non-empty strings are always &amp;ldquo;truthy&amp;rdquo; in Python.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>How does &lt;code>'True' or 'False'&lt;/code> evaluate?&lt;/strong>
&lt;ul>
&lt;li>Since &lt;code>'True'&lt;/code> is a non-empty string (truthy), Python returns &lt;code>'True'&lt;/code> and &lt;strong>does not even evaluate the second operand&lt;/strong> (this is called short-circuit evaluation)[^1].&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Type of the result:&lt;/strong>
&lt;ul>
&lt;li>The result is &lt;code>'True'&lt;/code>, which is a string.&lt;/li>
&lt;li>So, the &lt;strong>output type is &lt;code>str&lt;/code>&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>Try It Yourself! 💻&lt;span class="hx-absolute -hx-mt-20" id="try-it-yourself-">&lt;/span>
&lt;a href="#try-it-yourself-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;True&amp;#39;&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="s1">&amp;#39;False&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Output: True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># Output: &amp;lt;class &amp;#39;str&amp;#39;&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Why Not Other Types? 🤔&lt;span class="hx-absolute -hx-mt-20" id="why-not-other-types-">&lt;/span>
&lt;a href="#why-not-other-types-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">int&lt;/td>
&lt;td style="text-align: left">❌ Only if you use numbers, not strings.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">float&lt;/td>
&lt;td style="text-align: left">❌ Only with floating-point numbers.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>str&lt;/strong>&lt;/td>
&lt;td style="text-align: left">✅ Correct! Both operands are strings; result is a string.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">bool&lt;/td>
&lt;td style="text-align: left">❌ Only if you use Boolean literals (without quotes), like &lt;code>True or False&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">Invalid/Error&lt;/td>
&lt;td style="text-align: left">❌ This is valid Python code; no error is raised.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Practice Question 📝&lt;span class="hx-absolute -hx-mt-20" id="practice-question-">&lt;/span>
&lt;a href="#practice-question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Q:&lt;/strong> What is the type of the result for &lt;code>'' or 'Python'&lt;/code>?&lt;/p>
&lt;p>A) int&lt;/p>
&lt;p>B) float&lt;/p>
&lt;p>C) str&lt;/p>
&lt;p>D) bool&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>C) str&lt;/p>
&lt;p>&lt;em>Explanation: The first operand is an empty string (falsy), so Python returns the second operand, which is a non-empty string. The type is &lt;code>str&lt;/code>.&lt;/em>&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Summary:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>'True' or 'False'&lt;/code> returns &lt;code>'True'&lt;/code> (a string).&lt;/li>
&lt;li>&lt;strong>Output type:&lt;/strong> &lt;code>str&lt;/code> (string).&lt;/li>
&lt;/ul>
&lt;p>Keep experimenting with different types and the &lt;code>or&lt;/code> operator! 🚀&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>8&lt;/strong>) What will be the output type of the expression &lt;code>&amp;quot;555&amp;quot;[2]&lt;/code>?&lt;/p>
&lt;p>int&lt;/p>
&lt;p>float&lt;/p>
&lt;p>str&lt;/p>
&lt;p>bool&lt;/p>
&lt;p>Invalid Expression (raises an error)&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>🎯 &lt;strong>The output type of the expression &lt;code>&amp;quot;555&amp;quot;[^1]&lt;/code> in Python is &lt;code>str&lt;/code> (string).&lt;/strong>&lt;/p>
&lt;p>Let&amp;rsquo;s understand why, step by step! 👇&lt;/p>
&lt;h3>Step-by-Step Explanation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-explanation">&lt;/span>
&lt;a href="#step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>What is &lt;code>&amp;quot;555&amp;quot;&lt;/code>?&lt;/strong>
&lt;ul>
&lt;li>It is a string containing three characters: &lt;code>'5'&lt;/code>, &lt;code>'5'&lt;/code>, &lt;code>'5'&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What does &lt;code>[^1]&lt;/code> mean?&lt;/strong>
&lt;ul>
&lt;li>In Python, you can access individual characters in a string using &lt;em>indexing&lt;/em>.&lt;/li>
&lt;li>&lt;strong>Indexing starts from 0&lt;/strong>, so:
&lt;ul>
&lt;li>&lt;code>&amp;quot;555&amp;quot;&lt;/code> → &lt;code>'5'&lt;/code>&lt;/li>
&lt;li>&lt;code>&amp;quot;555&amp;quot;[^2]&lt;/code> → &lt;code>'5'&lt;/code>&lt;/li>
&lt;li>&lt;code>&amp;quot;555&amp;quot;[^1]&lt;/code> → &lt;code>'5'&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What is the type of &lt;code>&amp;quot;555&amp;quot;[^1]&lt;/code>?&lt;/strong>
&lt;ul>
&lt;li>When you access a single character from a string, the result is also a &lt;strong>string&lt;/strong> of length 1, not an integer!&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>Try It Yourself! 💻&lt;span class="hx-absolute -hx-mt-20" id="try-it-yourself-">&lt;/span>
&lt;a href="#try-it-yourself-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;555&amp;#34;&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Output: 5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># Output: &amp;lt;class &amp;#39;str&amp;#39;&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Why Not Other Types? 🤔&lt;span class="hx-absolute -hx-mt-20" id="why-not-other-types-">&lt;/span>
&lt;a href="#why-not-other-types-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">int&lt;/td>
&lt;td style="text-align: left">❌ Even though the character is &lt;code>'5'&lt;/code>, it is still a string, not an integer.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">float&lt;/td>
&lt;td style="text-align: left">❌ Only if you convert it, which is not done here.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>str&lt;/strong>&lt;/td>
&lt;td style="text-align: left">✅ Correct! Indexing a string always returns a string of length 1.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">bool&lt;/td>
&lt;td style="text-align: left">❌ Only if you use Boolean expressions.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">Invalid/Error&lt;/td>
&lt;td style="text-align: left">❌ This is valid Python code; no error is raised.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Practice Question 📝&lt;span class="hx-absolute -hx-mt-20" id="practice-question-">&lt;/span>
&lt;a href="#practice-question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Q:&lt;/strong> What is the type of &lt;code>&amp;quot;hello&amp;quot;[^2]&lt;/code>?&lt;/p>
&lt;p>A) int&lt;/p>
&lt;p>B) float&lt;/p>
&lt;p>C) str&lt;/p>
&lt;p>D) bool&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>C) str&lt;/p>
&lt;p>&lt;em>Explanation: Indexing a string always returns a string of length 1.&lt;/em>&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Summary:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>&amp;quot;555&amp;quot;[^1]&lt;/code> returns &lt;code>'5'&lt;/code> (as a string).&lt;/li>
&lt;li>&lt;strong>Output type:&lt;/strong> &lt;code>str&lt;/code> (string)&lt;sup id="fnref1:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;sup id="fnref1:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>.&lt;/li>
&lt;/ul>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Python-Cheatsheet-2024.pdf (See: &amp;ldquo;String indexing starts from 0&amp;rdquo;, &amp;ldquo;s1 - H&amp;rdquo;, &amp;ldquo;s1[-1] - o&amp;rdquo;, &amp;ldquo;String slicing&amp;rdquo;, &amp;ldquo;Type method is used to get datatype of a variable or value&amp;rdquo;)&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&amp;#160;&lt;a href="#fnref1:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>Introduction_to_Python_Programming_-_WEB.pdf (See: &amp;ldquo;len(string) returns the length&amp;rdquo;, &amp;ldquo;type(value) returns the type or class of a value&amp;rdquo;, &amp;ldquo;Strings may be written using either kind of quote&amp;rdquo;, &amp;ldquo;String indexing&amp;rdquo;)&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&amp;#160;&lt;a href="#fnref1:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>9&lt;/strong>) What will be the output type of the expression &lt;code>555[::2]&lt;/code>?&lt;/p>
&lt;p>int&lt;/p>
&lt;p>float&lt;/p>
&lt;p>str&lt;/p>
&lt;p>bool&lt;/p>
&lt;p>Invalid Expression (raises an error)&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>🚨 &lt;strong>The output type of the expression &lt;code>555[::2]&lt;/code> is: Invalid Expression (raises an error).&lt;/strong>&lt;/p>
&lt;p>Let&amp;rsquo;s see why, step by step! 🐍&lt;/p>
&lt;h3>Step-by-Step Explanation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-explanation">&lt;/span>
&lt;a href="#step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>What is &lt;code>555&lt;/code>?&lt;/strong>
&lt;ul>
&lt;li>&lt;code>555&lt;/code> is an &lt;strong>integer&lt;/strong> (&lt;code>int&lt;/code>), not a string or a list.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What does &lt;code>[::2]&lt;/code> mean?&lt;/strong>
&lt;ul>
&lt;li>&lt;code>[::2]&lt;/code> is &lt;strong>slice notation&lt;/strong>, which is valid for &lt;em>sequences&lt;/em> like strings, lists, or tuples.&lt;/li>
&lt;li>You can use slicing on &lt;code>&amp;quot;555&amp;quot;[::2]&lt;/code> or &lt;code>[1][2][::2]&lt;/code>, but &lt;strong>not on integers&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What happens if you try &lt;code>555[::2]&lt;/code>?&lt;/strong>
&lt;ul>
&lt;li>Python will &lt;strong>raise a TypeError&lt;/strong> because integers do not support slicing or subscripting.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What is the error message?&lt;/strong>&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;code>'int' object is not subscriptable&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;h3>Try It Yourself! 💻&lt;span class="hx-absolute -hx-mt-20" id="try-it-yourself-">&lt;/span>
&lt;a href="#try-it-yourself-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">555&lt;/span>&lt;span class="p">[::&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Output: TypeError: &amp;#39;int&amp;#39; object is not subscriptable&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Why Not Other Types? 🤔&lt;span class="hx-absolute -hx-mt-20" id="why-not-other-types-">&lt;/span>
&lt;a href="#why-not-other-types-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">int&lt;/td>
&lt;td style="text-align: left">❌ Would only be if the expression returned an integer.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">float&lt;/td>
&lt;td style="text-align: left">❌ Would only be if the expression returned a float.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">str&lt;/td>
&lt;td style="text-align: left">❌ Only if you sliced a string, like &lt;code>&amp;quot;555&amp;quot;[::2]&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">bool&lt;/td>
&lt;td style="text-align: left">❌ Only if the expression returned a Boolean.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>Invalid/Error&lt;/strong>&lt;/td>
&lt;td style="text-align: left">✅ Correct! Slicing is not allowed on integers, so it raises an error.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Practice Question 📝&lt;span class="hx-absolute -hx-mt-20" id="practice-question-">&lt;/span>
&lt;a href="#practice-question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Q:&lt;/strong> What will be the output type of &lt;code>&amp;quot;555&amp;quot;[::2]&lt;/code>?&lt;/p>
&lt;ul>
&lt;li>A) int&lt;/li>
&lt;li>B) float&lt;/li>
&lt;li>C) str&lt;/li>
&lt;li>D) bool&lt;/li>
&lt;li>E) Invalid Expression (raises an error)&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>C) str&lt;/p>
&lt;p>&lt;em>Explanation: Slicing a string returns a new string!&lt;/em>&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Summary:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>555[::2]&lt;/code> &lt;strong>raises a TypeError&lt;/strong> because integers do not support slicing.&lt;/li>
&lt;li>&lt;strong>Output type:&lt;/strong> Invalid Expression (raises an error) 🚫&lt;/li>
&lt;/ul>
&lt;p>Keep practicing and always check the type of object you are working with before using slicing! 🐍✨&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>10&lt;/strong>) What will be the output type of the expression &lt;code>&amp;quot;555[&amp;quot;2&amp;quot;]&amp;quot;&lt;/code>?&lt;/p>
&lt;p>int&lt;/p>
&lt;p>float&lt;/p>
&lt;p>str&lt;/p>
&lt;p>bool&lt;/p>
&lt;p>Invalid Expression (raises an error)&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>🚨 &lt;strong>The output type of the expression &lt;code>&amp;quot;555[&amp;quot;2&amp;quot;]&amp;quot;&lt;/code> is: Invalid Expression (raises an error).&lt;/strong>&lt;/p>
&lt;p>Let&amp;rsquo;s see why, step by step! 👇&lt;/p>
&lt;h3>Step-by-Step Explanation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-explanation">&lt;/span>
&lt;a href="#step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>What is &lt;code>&amp;quot;555&amp;quot;&lt;/code>?&lt;/strong>
&lt;ul>
&lt;li>It is a &lt;strong>string&lt;/strong> containing three characters: &lt;code>'5'&lt;/code>, &lt;code>'5'&lt;/code>, &lt;code>'5'&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What does &lt;code>[&amp;quot;2&amp;quot;]&lt;/code> mean?&lt;/strong>
&lt;ul>
&lt;li>In Python, you can use square brackets to access an element by its &lt;strong>index&lt;/strong> in a string, like &lt;code>&amp;quot;555&amp;quot;[^1]&lt;/code> (which gives &lt;code>'5'&lt;/code>).&lt;/li>
&lt;li>The index must be an &lt;strong>integer&lt;/strong>, not a string.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What happens with &lt;code>&amp;quot;555[&amp;quot;2&amp;quot;]&amp;quot;&lt;/code>?&lt;/strong>
&lt;ul>
&lt;li>Here, you are trying to use a &lt;strong>string&lt;/strong> (&lt;code>&amp;quot;2&amp;quot;&lt;/code>) as the index, not an integer.&lt;/li>
&lt;li>Python does &lt;strong>not&lt;/strong> allow string indices for strings (unlike dictionaries, where keys can be strings).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What is the result?&lt;/strong>
&lt;ul>
&lt;li>Python raises a &lt;strong>TypeError&lt;/strong>:&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&amp;ldquo;string indices must be integers&amp;rdquo;
- So, &lt;strong>the expression is invalid and raises an error&lt;/strong>.&lt;/p>
&lt;/blockquote>
&lt;h3>Try It Yourself! 💻&lt;span class="hx-absolute -hx-mt-20" id="try-it-yourself-">&lt;/span>
&lt;a href="#try-it-yourself-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;555&amp;#34;&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Output: TypeError: string indices must be integers&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Why Not Other Types? 🤔&lt;span class="hx-absolute -hx-mt-20" id="why-not-other-types-">&lt;/span>
&lt;a href="#why-not-other-types-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">int&lt;/td>
&lt;td style="text-align: left">❌ Only if you use an integer index, like &lt;code>&amp;quot;555&amp;quot;[^1]&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">float&lt;/td>
&lt;td style="text-align: left">❌ Never valid as an index for strings.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">str&lt;/td>
&lt;td style="text-align: left">❌ Only if you use valid string operations, not this syntax.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">bool&lt;/td>
&lt;td style="text-align: left">❌ Not related to this operation.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>Invalid/Error&lt;/strong>&lt;/td>
&lt;td style="text-align: left">✅ Correct! Using a string as an index for a string raises a TypeError.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Practice Question 📝&lt;span class="hx-absolute -hx-mt-20" id="practice-question-">&lt;/span>
&lt;a href="#practice-question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Q:&lt;/strong> What is the output type of &lt;code>&amp;quot;hello&amp;quot;[^2]&lt;/code>?&lt;/p>
&lt;ul>
&lt;li>A) int&lt;/li>
&lt;li>B) float&lt;/li>
&lt;li>C) str&lt;/li>
&lt;li>D) bool&lt;/li>
&lt;li>E) Invalid Expression (raises an error)&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>C) str&lt;/p>
&lt;p>&lt;em>Explanation: Indexing a string with an integer returns a string of length 1.&lt;/em>&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Summary:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>&amp;quot;555[&amp;quot;2&amp;quot;]&amp;quot;&lt;/code> raises a &lt;strong>TypeError&lt;/strong> because string indices must be integers, not strings.&lt;/li>
&lt;li>&lt;strong>Output type:&lt;/strong> Invalid Expression (raises an error) 🚫&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>11&lt;/strong>) What will be the output type of the expression &lt;code>print('True')&lt;/code>?&lt;/p>
&lt;p>int&lt;/p>
&lt;p>float&lt;/p>
&lt;p>str&lt;/p>
&lt;p>bool&lt;/p>
&lt;p>NoneType&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>🌟 &lt;strong>The output type of the expression &lt;code>print('True')&lt;/code> is &lt;code>NoneType&lt;/code>.&lt;/strong>&lt;/p>
&lt;p>Let&amp;rsquo;s break it down step by step! 👇&lt;/p>
&lt;h3>Step-by-Step Explanation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-explanation">&lt;/span>
&lt;a href="#step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>What does &lt;code>print('True')&lt;/code> do?&lt;/strong>
&lt;ul>
&lt;li>The &lt;code>print()&lt;/code> function in Python &lt;strong>displays the given argument(s) to the console&lt;/strong>.&lt;/li>
&lt;li>In this case, it prints the string &lt;code>'True'&lt;/code> to the screen.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What does &lt;code>print()&lt;/code> return?&lt;/strong>
&lt;ul>
&lt;li>The &lt;code>print()&lt;/code> function &lt;strong>does not return any value&lt;/strong> that you can use in your code.&lt;/li>
&lt;li>Technically, it returns a special value called &lt;code>None&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What is the type of &lt;code>None&lt;/code>?&lt;/strong>
&lt;ul>
&lt;li>The type of &lt;code>None&lt;/code> is &lt;strong>&lt;code>NoneType&lt;/code>&lt;/strong> in Python.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Demonstration in Python:&lt;/strong>&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;True&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># This prints &amp;#39;True&amp;#39; to the console&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># This prints: None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># This prints: &amp;lt;class &amp;#39;NoneType&amp;#39;&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>When you assign the result of &lt;code>print('True')&lt;/code> to a variable, that variable will have the value &lt;code>None&lt;/code>, and its type will be &lt;code>NoneType&lt;/code>[^1].&lt;/li>
&lt;/ul>
&lt;h3>Why Not Other Types? 🤔&lt;span class="hx-absolute -hx-mt-20" id="why-not-other-types-">&lt;/span>
&lt;a href="#why-not-other-types-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">int&lt;/td>
&lt;td style="text-align: left">❌ Only if the function returns an integer (not the case here).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">float&lt;/td>
&lt;td style="text-align: left">❌ Only if the function returns a float.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">str&lt;/td>
&lt;td style="text-align: left">❌ Only if the function returns a string.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">bool&lt;/td>
&lt;td style="text-align: left">❌ Only if the function returns a boolean.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>NoneType&lt;/strong>&lt;/td>
&lt;td style="text-align: left">✅ Correct! &lt;code>print()&lt;/code> returns &lt;code>None&lt;/code>, which is of type &lt;code>NoneType&lt;/code>.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Practice Question 📝&lt;span class="hx-absolute -hx-mt-20" id="practice-question-">&lt;/span>
&lt;a href="#practice-question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Q:&lt;/strong> What will be the output type of the expression &lt;code>x = print(&amp;quot;Hello&amp;quot;)&lt;/code>?&lt;/p>
&lt;ul>
&lt;li>A) int&lt;/li>
&lt;li>B) float&lt;/li>
&lt;li>C) str&lt;/li>
&lt;li>D) bool&lt;/li>
&lt;li>E) NoneType&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>E) NoneType&lt;/p>
&lt;p>&lt;em>Explanation: The &lt;code>print()&lt;/code> function always returns &lt;code>None&lt;/code>, no matter what you print!&lt;/em>&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Summary:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>The output type of &lt;code>print('True')&lt;/code> is &lt;strong>&lt;code>NoneType&lt;/code>&lt;/strong> because &lt;code>print()&lt;/code> returns &lt;code>None&lt;/code>[^1].&lt;/li>
&lt;/ul>
&lt;p>Keep experimenting with functions and their return types in Python! 🐍✨&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>12&lt;/strong>) What will be the output type of the expression &lt;code>int(&amp;quot;5.0&amp;quot;) + float(2)&lt;/code>?&lt;/p>
&lt;p>int&lt;/p>
&lt;p>float&lt;/p>
&lt;p>str&lt;/p>
&lt;p>bool&lt;/p>
&lt;p>Raises an error&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>🚨 &lt;strong>The output type of the expression &lt;code>int(&amp;quot;5.0&amp;quot;) + float(2)&lt;/code> is: Raises an error.&lt;/strong>&lt;/p>
&lt;p>Let&amp;rsquo;s see why, step by step! 👇&lt;/p>
&lt;h3>Step-by-Step Explanation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-explanation">&lt;/span>
&lt;a href="#step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>&lt;code>int(&amp;quot;5.0&amp;quot;)&lt;/code>&lt;/strong>
&lt;ul>
&lt;li>The &lt;code>int()&lt;/code> function tries to convert its argument to an integer.&lt;/li>
&lt;li>&lt;strong>But:&lt;/strong> &lt;code>&amp;quot;5.0&amp;quot;&lt;/code> is a string representation of a float, not an integer.&lt;/li>
&lt;li>&lt;code>int(&amp;quot;5.0&amp;quot;)&lt;/code> will &lt;strong>raise a &lt;code>ValueError&lt;/code>&lt;/strong> because Python expects a string that looks like an integer (e.g., &lt;code>&amp;quot;5&amp;quot;&lt;/code>), not a float with a decimal point.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;code>ValueError: invalid literal for int() with base 10: '5.0'&lt;/code>[^1]&lt;/p>
&lt;/blockquote>
&lt;ol start="2">
&lt;li>&lt;strong>&lt;code>float(2)&lt;/code>&lt;/strong>
&lt;ul>
&lt;li>This part is fine: &lt;code>float(2)&lt;/code> gives &lt;code>2.0&lt;/code> (a float).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>The addition is never reached&lt;/strong>
&lt;ul>
&lt;li>Because the error happens at &lt;code>int(&amp;quot;5.0&amp;quot;)&lt;/code>, the addition is never performed.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>Try It Yourself! 💻&lt;span class="hx-absolute -hx-mt-20" id="try-it-yourself-">&lt;/span>
&lt;a href="#try-it-yourself-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;5.0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">float&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Output: ValueError: invalid literal for int() with base 10: &amp;#39;5.0&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Why Not Other Types? 🤔&lt;span class="hx-absolute -hx-mt-20" id="why-not-other-types-">&lt;/span>
&lt;a href="#why-not-other-types-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">int&lt;/td>
&lt;td style="text-align: left">❌ Would only happen if both conversions succeeded and result was int.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">float&lt;/td>
&lt;td style="text-align: left">❌ Would happen if both conversions succeeded and result was float.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">str&lt;/td>
&lt;td style="text-align: left">❌ Not a string operation.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">bool&lt;/td>
&lt;td style="text-align: left">❌ Not a boolean operation.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>Raises an error&lt;/strong>&lt;/td>
&lt;td style="text-align: left">✅ Correct! The expression raises a &lt;code>ValueError&lt;/code> at &lt;code>int(&amp;quot;5.0&amp;quot;)&lt;/code>.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Practice Question 📝&lt;span class="hx-absolute -hx-mt-20" id="practice-question-">&lt;/span>
&lt;a href="#practice-question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Q:&lt;/strong> What will be the output type of the expression &lt;code>int(&amp;quot;5&amp;quot;) + float(2)&lt;/code>?&lt;/p>
&lt;ul>
&lt;li>A) int&lt;/li>
&lt;li>B) float&lt;/li>
&lt;li>C) str&lt;/li>
&lt;li>D) bool&lt;/li>
&lt;li>E) Raises an error&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>B) float&lt;/p>
&lt;p>&lt;em>Explanation: &lt;code>int(&amp;quot;5&amp;quot;)&lt;/code> gives &lt;code>5&lt;/code>, &lt;code>float(2)&lt;/code> gives &lt;code>2.0&lt;/code>, and &lt;code>5 + 2.0&lt;/code> results in &lt;code>7.0&lt;/code> (a float).&lt;/em>&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Summary:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>int(&amp;quot;5.0&amp;quot;) + float(2)&lt;/code> &lt;strong>raises a &lt;code>ValueError&lt;/code>&lt;/strong> because &lt;code>&amp;quot;5.0&amp;quot;&lt;/code> is not a valid integer string for &lt;code>int()&lt;/code>[^1].&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>13&lt;/strong>) What will be the output type of the expression &lt;code>str(5) + str(2.0)&lt;/code>?&lt;/p>
&lt;p>int&lt;/p>
&lt;p>float&lt;/p>
&lt;p>str&lt;/p>
&lt;p>bool&lt;/p>
&lt;p>Raises an error&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>🎉 &lt;strong>The output type of the expression &lt;code>str(5) + str(2.0)&lt;/code> is &lt;code>str&lt;/code> (string)!&lt;/strong>&lt;/p>
&lt;p>Let&amp;rsquo;s understand this step by step with a simple explanation and practice! 👇&lt;/p>
&lt;h3>Step-by-Step Explanation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-explanation">&lt;/span>
&lt;a href="#step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>What does &lt;code>str(5)&lt;/code> do?&lt;/strong>
&lt;ul>
&lt;li>Converts the integer &lt;code>5&lt;/code> to the string &lt;code>&amp;quot;5&amp;quot;&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What does &lt;code>str(2.0)&lt;/code> do?&lt;/strong>
&lt;ul>
&lt;li>Converts the float &lt;code>2.0&lt;/code> to the string &lt;code>&amp;quot;2.0&amp;quot;&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What does the &lt;code>+&lt;/code> operator do with strings?&lt;/strong>
&lt;ul>
&lt;li>When used with strings, &lt;code>+&lt;/code> &lt;strong>concatenates&lt;/strong> (joins) them together, not adds them as numbers[^1].&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What is the result of &lt;code>str(5) + str(2.0)&lt;/code>?&lt;/strong>
&lt;ul>
&lt;li>It joins &lt;code>&amp;quot;5&amp;quot;&lt;/code> and &lt;code>&amp;quot;2.0&amp;quot;&lt;/code> to get &lt;code>&amp;quot;52.0&amp;quot;&lt;/code>, which is a string.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Type of the result:&lt;/strong>
&lt;ul>
&lt;li>The output is &lt;code>&amp;quot;52.0&amp;quot;&lt;/code>, and its type is &lt;strong>str&lt;/strong> (string)[^1].&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>Try It Yourself! 🧑‍💻&lt;span class="hx-absolute -hx-mt-20" id="try-it-yourself-">&lt;/span>
&lt;a href="#try-it-yourself-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">2.0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Output: 52.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># Output: &amp;lt;class &amp;#39;str&amp;#39;&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Why Not Other Types? 🤔&lt;span class="hx-absolute -hx-mt-20" id="why-not-other-types-">&lt;/span>
&lt;a href="#why-not-other-types-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">int&lt;/td>
&lt;td style="text-align: left">❌ Only if you add numbers, not strings.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">float&lt;/td>
&lt;td style="text-align: left">❌ Only if you add numbers and at least one is a float.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>str&lt;/strong>&lt;/td>
&lt;td style="text-align: left">✅ Correct! Concatenating two strings gives a string.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">bool&lt;/td>
&lt;td style="text-align: left">❌ Only for Boolean operations.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">Raises an error&lt;/td>
&lt;td style="text-align: left">❌ This is valid Python code; no error is raised.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Practice Question 📝&lt;span class="hx-absolute -hx-mt-20" id="practice-question-">&lt;/span>
&lt;a href="#practice-question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Q:&lt;/strong> What will be the result and type of &lt;code>str(3) + str(4.5)&lt;/code>?&lt;/p>
&lt;ul>
&lt;li>A) &lt;code>&amp;quot;34.5&amp;quot;&lt;/code>, str&lt;/li>
&lt;li>B) &lt;code>7.5&lt;/code>, float&lt;/li>
&lt;li>C) &lt;code>7&lt;/code>, int&lt;/li>
&lt;li>D) Raises an error&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>A) &lt;code>&amp;quot;34.5&amp;quot;&lt;/code>, str&lt;/p>
&lt;p>&lt;em>Explanation: Both are converted to strings and concatenated.&lt;/em>&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Summary:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>str(5) + str(2.0)&lt;/code> results in &lt;code>&amp;quot;52.0&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;strong>Output type:&lt;/strong> &lt;code>str&lt;/code> (string)[^1]&lt;/li>
&lt;/ul>
&lt;p>Keep practicing string conversions and concatenations! 🚀&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;ol start="14">
&lt;li>Select the expression(s) that are equivalent to the given expression.&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">5&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">6&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">1&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Options:&lt;/p>
&lt;p>&lt;code>5 * (6 + (3 / 1))&lt;/code>&lt;/p>
&lt;p>&lt;code>(5 + 6) * 3 / 1&lt;/code>&lt;/p>
&lt;p>&lt;code>(5 * 6 + 3) / 1&lt;/code>&lt;/p>
&lt;p>&lt;code>(5 * 6) + (3 / 1)&lt;/code>&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s analyze which expressions are &lt;strong>equivalent&lt;/strong> to the original:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">5&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">6&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">1&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Step-by-Step Calculation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-calculation">&lt;/span>
&lt;a href="#step-by-step-calculation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Multiplication and division&lt;/strong> have higher precedence than addition.&lt;/li>
&lt;li>So, Python evaluates as:
$ (5 \times 6) + (3 \div 1) = 30 + 3 = 33.0 $&lt;/li>
&lt;/ul>
&lt;h3>Let&amp;rsquo;s check each option:&lt;span class="hx-absolute -hx-mt-20" id="lets-check-each-option">&lt;/span>
&lt;a href="#lets-check-each-option" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Value&lt;/th>
&lt;th style="text-align: left">Equivalent?&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;code>5 * (6 + (3 / 1))&lt;/code>&lt;/td>
&lt;td style="text-align: left">5 * (6 + 3) = 5 * 9 = 45.0&lt;/td>
&lt;td style="text-align: left">❌ No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>(5 + 6) * 3 / 1&lt;/code>&lt;/td>
&lt;td style="text-align: left">(11) * 3 / 1 = 33.0&lt;/td>
&lt;td style="text-align: left">✅ Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>(5 * 6 + 3) / 1&lt;/code>&lt;/td>
&lt;td style="text-align: left">(30 + 3) / 1 = 33.0&lt;/td>
&lt;td style="text-align: left">✅ Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>(5 * 6) + (3 / 1)&lt;/code>&lt;/td>
&lt;td style="text-align: left">30 + 3 = 33.0&lt;/td>
&lt;td style="text-align: left">✅ Yes&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>&lt;strong>Final Answer&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="final-answer">&lt;/span>
&lt;a href="#final-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>The following expressions are equivalent to &lt;code>5 * 6 + 3 / 1&lt;/code>:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>(5 + 6) * 3 / 1&lt;/code>&lt;/li>
&lt;li>&lt;code>(5 * 6 + 3) / 1&lt;/code>&lt;/li>
&lt;li>&lt;code>(5 * 6) + (3 / 1)&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Only the first option, &lt;code>5 * (6 + (3 / 1))&lt;/code>, is &lt;strong>not equivalent&lt;/strong> because it changes the order of operations and gives a different result.&lt;/p>
&lt;h4>📝 &lt;strong>Practice Question&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-practice-question">&lt;/span>
&lt;a href="#-practice-question" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;strong>Q&lt;/strong>: Which of the following is equivalent to &lt;code>8 + 4 * 2&lt;/code>?&lt;/p>
&lt;ul>
&lt;li>A) &lt;code>(8 + 4) * 2&lt;/code>&lt;/li>
&lt;li>B) &lt;code>8 + (4 * 2)&lt;/code>&lt;/li>
&lt;li>C) &lt;code>(8 + 4 * 2)&lt;/code>&lt;/li>
&lt;li>D) Both B and C&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>D) Both B and C&lt;/p>
&lt;p>&lt;em>Explanation: Multiplication happens before addition, so both B and C give 8 + 8 = 16. Option A gives 24.&lt;/em>&lt;/p>
&lt;p>Keep practicing! If you want to see the step-by-step for any other expression, just ask! 😃&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>15&lt;/strong>) Select the expression(s) that are equivalent to the given expression.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Options:&lt;/p>
&lt;p>&lt;code>(1 + (2 * (3 + 4)))&lt;/code>&lt;/p>
&lt;p>&lt;code>(1 + 2) * 3 + 4&lt;/code>&lt;/p>
&lt;p>&lt;code>((1 + 2) * (3 + 4))&lt;/code>&lt;/p>
&lt;p>&lt;code>1 + (2 * 3) + 4&lt;/code>&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s evaluate which expressions are &lt;strong>equivalent&lt;/strong> to:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Step-by-Step Calculation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-calculation">&lt;/span>
&lt;a href="#step-by-step-calculation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>First, calculate inside the parentheses:
&lt;ul>
&lt;li>$1 + 2 = 3$&lt;/li>
&lt;li>$3 + 4 = 7$&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Then multiply:
&lt;ul>
&lt;li>$3 \times 7 = 21$&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>Let&amp;rsquo;s check each option using the actual values (from the code execution):&lt;span class="hx-absolute -hx-mt-20" id="lets-check-each-option-using-the-actual-values-from-the-code-execution">&lt;/span>
&lt;a href="#lets-check-each-option-using-the-actual-values-from-the-code-execution" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Value&lt;/th>
&lt;th style="text-align: left">Equivalent?&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;code>(1 + (2 * (3 + 4)))&lt;/code>&lt;/td>
&lt;td style="text-align: left">15&lt;/td>
&lt;td style="text-align: left">❌ No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>(1 + 2) * 3 + 4&lt;/code>&lt;/td>
&lt;td style="text-align: left">13&lt;/td>
&lt;td style="text-align: left">❌ No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>((1 + 2) * (3 + 4))&lt;/code>&lt;/td>
&lt;td style="text-align: left">21&lt;/td>
&lt;td style="text-align: left">✅ Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>1 + (2 * 3) + 4&lt;/code>&lt;/td>
&lt;td style="text-align: left">11&lt;/td>
&lt;td style="text-align: left">❌ No&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>&lt;strong>Correct Answer&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="correct-answer">&lt;/span>
&lt;a href="#correct-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Only this expression is equivalent:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>((1 + 2) * (3 + 4))&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4>📝 Practice Question&lt;span class="hx-absolute -hx-mt-20" id="-practice-question">&lt;/span>
&lt;a href="#-practice-question" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>What is equivalent to &lt;code>(2 + 3) * (4 + 1)&lt;/code>?&lt;/p>
&lt;ul>
&lt;li>A) &lt;code>2 + 3 * 4 + 1&lt;/code>&lt;/li>
&lt;li>B) &lt;code>(2 + 3) * (4 + 1)&lt;/code>&lt;/li>
&lt;li>C) &lt;code>2 + (3 * (4 + 1))&lt;/code>&lt;/li>
&lt;li>D) &lt;code>((2 + 3) * 4) + 1&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>B) &lt;code>(2 + 3) * (4 + 1)&lt;/code>&lt;/p>
&lt;p>&lt;em>Explanation: Only option B preserves the original grouping and order of operations.&lt;/em>&lt;/p>
&lt;p>Keep practicing! If you want to check more, just ask! 😃&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>16&lt;/strong>) Select the expression(s) that are equivalent to the given expression.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">a&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">c&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Options:&lt;/p>
&lt;p>&lt;code>(a == b) &amp;gt; c&lt;/code>&lt;/p>
&lt;p>&lt;code>a == (b &amp;gt; c)&lt;/code>&lt;/p>
&lt;p>&lt;code>(a == b) and (b &amp;gt; c)&lt;/code>&lt;/p>
&lt;p>&lt;code>(a == b) or (b &amp;gt; c)&lt;/code>&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s analyze the original expression:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">a&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">c&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>How Python Evaluates &lt;code>a == b &amp;gt; c&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="how-python-evaluates-a--b--c">&lt;/span>
&lt;a href="#how-python-evaluates-a--b--c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Chained comparisons:&lt;/strong>
Python allows chaining of comparison operators.
&lt;code>a == b &amp;gt; c&lt;/code> is equivalent to:&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;pre>&lt;code>- Both comparisons must be true for the whole expression to be true.
- This is **not** the same as evaluating `(a == b)` first and then comparing the result to `c`.
&lt;/code>&lt;/pre>
&lt;h4>Let&amp;rsquo;s check each option:&lt;span class="hx-absolute -hx-mt-20" id="lets-check-each-option">&lt;/span>
&lt;a href="#lets-check-each-option" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Equivalent?&lt;/th>
&lt;th style="text-align: left">Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;code>(a == b) &amp;gt; c&lt;/code>&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Evaluates &lt;code>(a == b)&lt;/code> first (which is &lt;code>True&lt;/code> or &lt;code>False&lt;/code>), then compares that Boolean to &lt;code>c&lt;/code>. Not the same as the original.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>a == (b &amp;gt; c)&lt;/code>&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Evaluates &lt;code>(b &amp;gt; c)&lt;/code> first (which is &lt;code>True&lt;/code> or &lt;code>False&lt;/code>), then compares &lt;code>a&lt;/code> to that Boolean. Not the same as the original.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>(a == b) and (b &amp;gt; c)&lt;/code>&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">&lt;strong>Correct!&lt;/strong> This matches Python&amp;rsquo;s chained comparison behavior.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>(a == b) or (b &amp;gt; c)&lt;/code>&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Uses &lt;code>or&lt;/code> instead of &lt;code>and&lt;/code>; not equivalent.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>&lt;strong>Correct Answer&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="correct-answer">&lt;/span>
&lt;a href="#correct-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>The only equivalent expression is:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>(a == b) and (b &amp;gt; c)&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3>📝 Practice Question&lt;span class="hx-absolute -hx-mt-20" id="-practice-question">&lt;/span>
&lt;a href="#-practice-question" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Which of the following is equivalent to &lt;code>x &amp;lt; y &amp;lt;= z&lt;/code>?&lt;/p>
&lt;ul>
&lt;li>A) &lt;code>(x &amp;lt; y) and (y &amp;lt;= z)&lt;/code>&lt;/li>
&lt;li>B) &lt;code>x &amp;lt; (y &amp;lt;= z)&lt;/code>&lt;/li>
&lt;li>C) &lt;code>(x &amp;lt; y) or (y &amp;lt;= z)&lt;/code>&lt;/li>
&lt;li>D) &lt;code>((x &amp;lt; y) &amp;lt;= z)&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>A) &lt;code>(x &amp;lt; y) and (y &amp;lt;= z)&lt;/code>&lt;/p>
&lt;p>&lt;em>Explanation: Python&amp;rsquo;s chained comparisons work like a logical &lt;code>and&lt;/code> of each pair in the chain.&lt;/em>&lt;/p>
&lt;p>Keep practicing! If you want to see how Python evaluates other chained comparisons, just ask! 🐍✨&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>17&lt;/strong>) Select the expression(s) that are equivalent to the given expression.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="ow">not&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">c&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Options:&lt;/p>
&lt;p>&lt;code>not a or b and c&lt;/code>&lt;/p>
&lt;p>&lt;code>not (a or (b and c))&lt;/code>&lt;/p>
&lt;p>&lt;code>(not a) or (b and c)&lt;/code>&lt;/p>
&lt;p>&lt;code>(not (a or b)) and c&lt;/code>&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s break down the original expression:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="ow">not&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">c&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Step-by-Step Evaluation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-evaluation">&lt;/span>
&lt;a href="#step-by-step-evaluation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Parentheses first:&lt;/strong>
Evaluate &lt;code>(a or b)&lt;/code>&lt;/li>
&lt;li>&lt;strong>Apply &lt;code>not&lt;/code>:&lt;/strong>
&lt;code>not (a or b)&lt;/code>&lt;/li>
&lt;li>&lt;strong>Apply &lt;code>and c&lt;/code>:&lt;/strong>
&lt;code>[result above] and c&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>This is &lt;strong>not&lt;/strong> the same as distributing &lt;code>not&lt;/code> or changing the order of operations.&lt;/p>
&lt;p>Now, let&amp;rsquo;s check each option:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Equivalent?&lt;/th>
&lt;th style="text-align: left">Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;code>not a or b and c&lt;/code>&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Operator precedence changes meaning: &lt;code>not a&lt;/code> is evaluated first, then &lt;code>or&lt;/code>, then &lt;code>and&lt;/code>. This is not the same as the original expression[^1].&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>not (a or (b and c))&lt;/code>&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">This changes grouping: inside parentheses, &lt;code>b and c&lt;/code> is evaluated first, then &lt;code>a or [result]&lt;/code>, then &lt;code>not&lt;/code>. Not the same as original.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>(not a) or (b and c)&lt;/code>&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">This is a different logic: &lt;code>not a&lt;/code>, then &lt;code>or&lt;/code>, then &lt;code>(b and c)&lt;/code>. Not equivalent.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>(not (a or b)) and c&lt;/code>&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">&lt;strong>This is exactly the same as the original!&lt;/strong> Parentheses and order are preserved.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>&lt;strong>Correct Answer&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="correct-answer">&lt;/span>
&lt;a href="#correct-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>The only equivalent expression is:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>(not (a or b)) and c&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3>📝 Practice Question&lt;span class="hx-absolute -hx-mt-20" id="-practice-question">&lt;/span>
&lt;a href="#-practice-question" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Which of the following is equivalent to &lt;code>not (x and y) or z&lt;/code>?&lt;/p>
&lt;ul>
&lt;li>A) &lt;code>not x and y or z&lt;/code>&lt;/li>
&lt;li>B) &lt;code>(not (x and y)) or z&lt;/code>&lt;/li>
&lt;li>C) &lt;code>not x and (y or z)&lt;/code>&lt;/li>
&lt;li>D) &lt;code>not (x and (y or z))&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>B) &lt;code>(not (x and y)) or z&lt;/code>&lt;/p>
&lt;p>&lt;em>Explanation: Parentheses ensure the correct order of evaluation and logic.&lt;/em>&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Tip:&lt;/strong>
Always use parentheses to make your logic clear and to avoid mistakes with operator precedence in Python![^1]&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>18&lt;/strong>) Select the expression(s) that are equivalent to the given expression.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="ow">not&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">c&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Options:&lt;/p>
&lt;p>&lt;code>(not a) or (not (b and c))&lt;/code>&lt;/p>
&lt;p>&lt;code>((not a) or (not b)) and c&lt;/code>&lt;/p>
&lt;p>&lt;code>(not a) or ((not b) and c)&lt;/code>&lt;/p>
&lt;p>&lt;code>not (a or (not b) and c)&lt;/code>&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s analyze the original expression:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="ow">not&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">c&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Step-by-Step Evaluation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-evaluation">&lt;/span>
&lt;a href="#step-by-step-evaluation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Operator precedence:&lt;/strong>
&lt;ul>
&lt;li>&lt;code>not&lt;/code> has higher precedence than &lt;code>and&lt;/code>, which has higher precedence than &lt;code>or&lt;/code>.&lt;/li>
&lt;li>So, Python evaluates as:
$ (not\ a) $ or $ ((not\ b)\ and\ c) $&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>This is not the same as distributing &lt;code>not&lt;/code> or changing grouping!&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>Let&amp;rsquo;s check each option:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Equivalent?&lt;/th>
&lt;th style="text-align: left">Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>(not a) or (not (b and c))&lt;/strong>&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">By De Morgan&amp;rsquo;s law, &lt;code>not (b and c)&lt;/code> is equivalent to &lt;code>(not b) or (not c)&lt;/code>, so this is not the same as the original expression.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>((not a) or (not b)) and c&lt;/strong>&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">This changes the grouping and logic; not equivalent.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>(not a) or ((not b) and c)&lt;/strong>&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">This matches the original expression&amp;rsquo;s operator precedence and grouping!&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>not (a or (not b) and c)&lt;/strong>&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Different grouping and logic; not equivalent.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>&lt;strong>Correct Answer&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="correct-answer">&lt;/span>
&lt;a href="#correct-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>The only equivalent expression is:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>(not a) or ((not b) and c)&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3>📝 Practice Question&lt;span class="hx-absolute -hx-mt-20" id="-practice-question">&lt;/span>
&lt;a href="#-practice-question" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Which of the following is equivalent to &lt;code>not x or not y and z&lt;/code>?&lt;/p>
&lt;ul>
&lt;li>A) &lt;code>(not x) or ((not y) and z)&lt;/code>&lt;/li>
&lt;li>B) &lt;code>not (x or (not y) and z)&lt;/code>&lt;/li>
&lt;li>C) &lt;code>(not x) or (not (y and z))&lt;/code>&lt;/li>
&lt;li>D) &lt;code>((not x) or (not y)) and z&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>A) &lt;code>(not x) or ((not y) and z)&lt;/code>&lt;/p>
&lt;p>&lt;em>Explanation: Operator precedence in Python means &lt;code>not&lt;/code> is applied first, then &lt;code>and&lt;/code>, then &lt;code>or&lt;/code>.&lt;/em>&lt;/p>
&lt;p>Keep practicing with logical expressions and try using parentheses to clarify precedence! 🐍✨&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>19&lt;/strong>) How does the Python interpreter parenthesize the following expression?&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="ow">not&lt;/span> &lt;span class="kc">False&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="kc">True&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="kc">False&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Options:&lt;/p>
&lt;p>&lt;code>not (False or (True and False))&lt;/code>&lt;/p>
&lt;p>&lt;code>(not False) or (True and False)&lt;/code>&lt;/p>
&lt;p>&lt;code>not ((False or True) and False)&lt;/code>&lt;/p>
&lt;p>&lt;code>((not False) or True) and False&lt;/code>&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s break down how Python &lt;strong>parenthesizes&lt;/strong> the expression:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="ow">not&lt;/span> &lt;span class="kc">False&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="kc">True&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="kc">False&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Step-by-Step: Python Operator Precedence&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-python-operator-precedence">&lt;/span>
&lt;a href="#step-by-step-python-operator-precedence" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Python&amp;rsquo;s logical operator precedence is:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>not&lt;/strong> (highest)&lt;/li>
&lt;li>&lt;strong>and&lt;/strong>&lt;/li>
&lt;li>&lt;strong>or&lt;/strong> (lowest)[^1][^2]&lt;/li>
&lt;/ol>
&lt;p>So, Python interprets the expression as:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>not False&lt;/strong> is evaluated first → &lt;code>True&lt;/code>&lt;/li>
&lt;li>&lt;strong>True and False&lt;/strong> is evaluated next → &lt;code>False&lt;/code>&lt;/li>
&lt;li>&lt;strong>not False or (True and False)&lt;/strong> → &lt;code>True or False&lt;/code>&lt;/li>
&lt;li>&lt;strong>True or False&lt;/strong> → &lt;code>True&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>So, the parenthesized version is:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="ow">not&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kc">True&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Let&amp;rsquo;s check the options:&lt;span class="hx-absolute -hx-mt-20" id="lets-check-the-options">&lt;/span>
&lt;a href="#lets-check-the-options" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Equivalent?&lt;/th>
&lt;th style="text-align: left">Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;code>not (False or (True and False))&lt;/code>&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Changes grouping, not matching Python&amp;rsquo;s precedence.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>&lt;code>(not False) or (True and False)&lt;/code>&lt;/strong>&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">&lt;strong>Correct! Matches Python&amp;rsquo;s precedence and evaluation order.&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>not ((False or True) and False)&lt;/code>&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Changes grouping, not matching Python&amp;rsquo;s precedence.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>((not False) or True) and False&lt;/code>&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Changes grouping, not matching Python&amp;rsquo;s precedence.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>📝 Practice Question&lt;span class="hx-absolute -hx-mt-20" id="-practice-question">&lt;/span>
&lt;a href="#-practice-question" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>How does Python parenthesize:
&lt;code>not True and False or True&lt;/code>?&lt;/p>
&lt;ul>
&lt;li>A) &lt;code>((not True) and False) or True&lt;/code>&lt;/li>
&lt;li>B) &lt;code>not (True and (False or True))&lt;/code>&lt;/li>
&lt;li>C) &lt;code>not (True and False) or True&lt;/code>&lt;/li>
&lt;li>D) &lt;code>(not True) and (False or True)&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>A) &lt;code>((not True) and False) or True&lt;/code>&lt;/p>
&lt;p>&lt;em>Explanation: &lt;code>not&lt;/code> first, then &lt;code>and&lt;/code>, then &lt;code>or&lt;/code>.&lt;/em>&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Summary:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Python parenthesizes &lt;code>not False or True and False&lt;/code> as &lt;strong>&lt;code>(not False) or (True and False)&lt;/code>&lt;/strong>[^1][^2].&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>20&lt;/strong>) Select the correct statement(s) about &lt;code>print&lt;/code> in python.&lt;/p>
&lt;p>&lt;code>print&lt;/code> is a built-in function.&lt;/p>
&lt;p>In a python REPL/Notebook &lt;code>print(&amp;quot;hi&amp;quot;)&lt;/code> will give same output as just &amp;ldquo;hi&amp;rdquo;.&lt;/p>
&lt;p>&lt;code>print&lt;/code> prints new line character at the end of the line.&lt;/p>
&lt;p>&lt;code>print&lt;/code> can be used to display any data type.&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s review each statement about &lt;code>print&lt;/code> in Python:&lt;/p>
&lt;h3>1️⃣ &lt;code>print&lt;/code> is a built-in function.&lt;span class="hx-absolute -hx-mt-20" id="1-print-is-a-built-in-function">&lt;/span>
&lt;a href="#1-print-is-a-built-in-function" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>✅ Correct!&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>In Python 3, &lt;code>print&lt;/code> is a built-in function, not a statement[^1].&lt;/li>
&lt;/ul>
&lt;h3>2️⃣ In a python REPL/Notebook &lt;code>print(&amp;quot;hi&amp;quot;)&lt;/code> will give same output as just &amp;ldquo;hi&amp;rdquo;.&lt;span class="hx-absolute -hx-mt-20" id="2-in-a-python-replnotebook-printhi-will-give-same-output-as-just-hi">&lt;/span>
&lt;a href="#2-in-a-python-replnotebook-printhi-will-give-same-output-as-just-hi" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>❌ Incorrect!&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>In the REPL or notebook, typing &lt;code>&amp;quot;hi&amp;quot;&lt;/code> (just the string) will display &lt;code>'hi'&lt;/code> as the output (the string representation), but &lt;code>print(&amp;quot;hi&amp;quot;)&lt;/code> will display &lt;code>hi&lt;/code> as plain text.&lt;/li>
&lt;li>Example:
&lt;ul>
&lt;li>Typing &lt;code>&amp;quot;hi&amp;quot;&lt;/code> ➡️ Output: &lt;code>'hi'&lt;/code>&lt;/li>
&lt;li>Typing &lt;code>print(&amp;quot;hi&amp;quot;)&lt;/code> ➡️ Output: &lt;code>hi&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>So, the outputs are not exactly the same[^2].&lt;/li>
&lt;/ul>
&lt;h3>3️⃣ &lt;code>print&lt;/code> prints new line character at the end of the line.&lt;span class="hx-absolute -hx-mt-20" id="3-print-prints-new-line-character-at-the-end-of-the-line">&lt;/span>
&lt;a href="#3-print-prints-new-line-character-at-the-end-of-the-line" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>✅ Correct!&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>By default, &lt;code>print&lt;/code> adds a newline character (&lt;code>\n&lt;/code>) at the end of its output unless you specify otherwise with the &lt;code>end&lt;/code> parameter[^1].&lt;/li>
&lt;/ul>
&lt;h3>4️⃣ &lt;code>print&lt;/code> can be used to display any data type.&lt;span class="hx-absolute -hx-mt-20" id="4-print-can-be-used-to-display-any-data-type">&lt;/span>
&lt;a href="#4-print-can-be-used-to-display-any-data-type" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>✅ Correct!&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>You can use &lt;code>print&lt;/code> to display strings, numbers, lists, dictionaries, and any other data type. Python will automatically convert the object to a string for display[^1].&lt;/li>
&lt;/ul>
&lt;h2>✔️ &lt;strong>Summary Table&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-summary-table">&lt;/span>
&lt;a href="#-summary-table" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Statement&lt;/th>
&lt;th style="text-align: left">Correct?&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;code>print&lt;/code> is a built-in function.&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">In REPL/Notebook &lt;code>print(&amp;quot;hi&amp;quot;)&lt;/code> is same as just &amp;ldquo;hi&amp;rdquo;.&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>print&lt;/code> prints new line character at the end of the line.&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>print&lt;/code> can be used to display any data type.&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>📝 Practice Question&lt;span class="hx-absolute -hx-mt-20" id="-practice-question">&lt;/span>
&lt;a href="#-practice-question" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Which of the following will print &lt;code>Hello&lt;/code> without quotes in a Python REPL?&lt;/p>
&lt;ul>
&lt;li>A) &lt;code>&amp;quot;Hello&amp;quot;&lt;/code>&lt;/li>
&lt;li>B) &lt;code>print(&amp;quot;Hello&amp;quot;)&lt;/code>&lt;/li>
&lt;li>C) &lt;code>'Hello'&lt;/code>&lt;/li>
&lt;li>D) Both A and C&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>B) &lt;code>print(&amp;quot;Hello&amp;quot;)&lt;/code>&lt;/p>
&lt;p>&lt;em>Explanation: Only &lt;code>print(&amp;quot;Hello&amp;quot;)&lt;/code> prints the string as plain text, the others show the string with quotes.&lt;/em>&lt;/p>
&lt;p>If you want more details or examples, let me know! 😊&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>21&lt;/strong>) Select the correct statement(s) about &lt;code>input&lt;/code> in python.&lt;/p>
&lt;p>&lt;code>input&lt;/code> accepts atmost one argument.&lt;/p>
&lt;p>Output type can be passed to &lt;code>input&lt;/code> as &lt;code>input(type)&lt;/code> to get output in the required type.&lt;/p>
&lt;p>&lt;code>input&lt;/code> can be only used in python scripts and not in REPL/Notebook.&lt;/p>
&lt;p>Output type of &lt;code>input&lt;/code> is always &lt;code>str&lt;/code>&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s analyze each statement about &lt;code>input&lt;/code> in Python:&lt;/p>
&lt;h3>1️⃣ &lt;code>input&lt;/code> accepts at most one argument.&lt;span class="hx-absolute -hx-mt-20" id="1-input-accepts-at-most-one-argument">&lt;/span>
&lt;a href="#1-input-accepts-at-most-one-argument" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>✅ Correct!&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>The &lt;code>input&lt;/code> function &lt;strong>can take zero or one argument&lt;/strong> (the prompt string).&lt;/li>
&lt;li>Example: &lt;code>input()&lt;/code> or &lt;code>input(&amp;quot;Enter your name: &amp;quot;)&lt;/code>&lt;/li>
&lt;li>Passing more than one argument will raise a &lt;code>TypeError&lt;/code>.[^1][^2]&lt;/li>
&lt;/ul>
&lt;h3>2️⃣ Output type can be passed to &lt;code>input&lt;/code> as &lt;code>input(type)&lt;/code> to get output in the required type.&lt;span class="hx-absolute -hx-mt-20" id="2-output-type-can-be-passed-to-input-as-inputtype-to-get-output-in-the-required-type">&lt;/span>
&lt;a href="#2-output-type-can-be-passed-to-input-as-inputtype-to-get-output-in-the-required-type" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>❌ Incorrect!&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>input(type)&lt;/code> will just display &lt;code>type&lt;/code> as the prompt, not convert the result.&lt;/li>
&lt;li>&lt;strong>&lt;code>input&lt;/code> always returns a string&lt;/strong>.&lt;/li>
&lt;li>To convert the input, you must use a constructor like &lt;code>int(input())&lt;/code> or &lt;code>float(input())&lt;/code> after calling &lt;code>input&lt;/code>.[^2][^3]&lt;/li>
&lt;/ul>
&lt;h3>3️⃣ &lt;code>input&lt;/code> can be only used in python scripts and not in REPL/Notebook.&lt;span class="hx-absolute -hx-mt-20" id="3-input-can-be-only-used-in-python-scripts-and-not-in-replnotebook">&lt;/span>
&lt;a href="#3-input-can-be-only-used-in-python-scripts-and-not-in-replnotebook" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>❌ Incorrect!&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>input&lt;/code> works in both Python scripts &lt;strong>and&lt;/strong> in the Python REPL or Notebook environments.[^1][^2]&lt;/li>
&lt;li>You can use &lt;code>input()&lt;/code> anywhere Python code is executed interactively.&lt;/li>
&lt;/ul>
&lt;h3>4️⃣ Output type of &lt;code>input&lt;/code> is always &lt;code>str&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="4-output-type-of-input-is-always-str">&lt;/span>
&lt;a href="#4-output-type-of-input-is-always-str" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>✅ Correct!&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>The return value of &lt;code>input()&lt;/code> is &lt;strong>always a string&lt;/strong> (&lt;code>str&lt;/code>), regardless of what the user types.[^2][^3]&lt;/li>
&lt;li>If you want a different type, you must convert the result.&lt;/li>
&lt;/ul>
&lt;h2>✔️ Summary Table&lt;span class="hx-absolute -hx-mt-20" id="-summary-table">&lt;/span>
&lt;a href="#-summary-table" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Statement&lt;/th>
&lt;th style="text-align: left">Correct?&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;code>input&lt;/code> accepts at most one argument.&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">Output type can be passed to &lt;code>input&lt;/code> as &lt;code>input(type)&lt;/code> to get required type.&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>input&lt;/code> can be only used in python scripts and not in REPL/Notebook.&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">Output type of &lt;code>input&lt;/code> is always &lt;code>str&lt;/code>&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>📝 Practice Question&lt;span class="hx-absolute -hx-mt-20" id="-practice-question">&lt;/span>
&lt;a href="#-practice-question" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>What is the output type of the following code?&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Enter a number: &amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">))&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>A) int&lt;/li>
&lt;li>B) float&lt;/li>
&lt;li>C) str&lt;/li>
&lt;li>D) bool&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>C) str&lt;/p>
&lt;p>&lt;em>Explanation: &lt;code>input()&lt;/code> always returns a string, even if the user types a number!&lt;/em>&lt;/p>
&lt;p>If you want to convert the input to a number, use &lt;code>int(input(...))&lt;/code> or &lt;code>float(input(...))&lt;/code> after getting the input! 🎉&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;h3>Common data for the next 3 questions 🔗&lt;span class="hx-absolute -hx-mt-20" id="common-data-for-the-next-3-questions-">&lt;/span>
&lt;a href="#common-data-for-the-next-3-questions-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>This set of questions is intended for you to practice python tutor and get used to it. Watch &lt;a href="https://www.youtube.com/watch?v=jr9wuxm9kfg" target="_blank" rel="noopener">this&lt;/a> tutorial on how to use python tutor before attempting this questions.&lt;/p>
&lt;p>Consider the code present in &lt;a href="https://livinnector.github.io/live-py-tutor/#mode=edit" target="_blank" rel="noopener">this&lt;/a> python tutor link.&lt;/p>
&lt;p>Answer the following questions by using the python tutor interface. Consider the below code.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>22&lt;/strong>) What is the value of &lt;code>a&lt;/code> after executing line 3, using the input already given❓&lt;/p>
&lt;hr>
&lt;p>&lt;strong>23&lt;/strong>) What is the value of &lt;code>a&lt;/code> after executing line 4, if input given changed to 4❓&lt;/p>
&lt;hr>
&lt;p>&lt;strong>24&lt;/strong>) What is the value of &lt;code>a&lt;/code> after executing line 5, if the input is changed to 3❓&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;h3>Common data for the next 3 questions 🔗&lt;span class="hx-absolute -hx-mt-20" id="common-data-for-the-next-3-questions-">&lt;/span>
&lt;a href="#common-data-for-the-next-3-questions-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>This set of questions is intended for you to practice python tutor and get used to it. Watch &lt;a href="https://www.youtube.com/watch?v=jr9wuxm9kfg" target="_blank" rel="noopener">this&lt;/a> tutorial on how to use python tutor before attempting this questions.&lt;/p>
&lt;p>Consider the code present in &lt;a href="https://livinnector.github.io/live-py-tutor/#mode=edit" target="_blank" rel="noopener">this&lt;/a> python tutor link.&lt;/p>
&lt;p>Answer the following questions by using the python tutor interface.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>25&lt;/strong>) What is the value of &lt;code>a&lt;/code> after executing line 3, using the input already given?&lt;/p>
&lt;hr>
&lt;p>&lt;strong>26&lt;/strong>) What is the value of &lt;code>a&lt;/code> after executing line 4, if input given changed to 14?&lt;/p>
&lt;hr>
&lt;p>&lt;strong>27&lt;/strong>) What is the value of &lt;code>a&lt;/code> after executing line 5, if the input is changed to 23?&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>28&lt;/strong>) We need to write a program that accepts two names (strings) as input and prints &lt;code>True&lt;/code> if the first name comes before the second in alphabetical order, and &lt;code>False&lt;/code> otherwise.&lt;/p>
&lt;p>Sample test cases:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Input&lt;/th>
&lt;th>Output&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>sachin rohit&lt;/td>
&lt;td>False&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>saina sindhu&lt;/td>
&lt;td>True&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>For example, &lt;code>sachin&lt;/code> comes after &lt;code>rohit&lt;/code>, so the expected output is &lt;code>False&lt;/code>. Select all correct implementations of this program.&lt;/p>
&lt;p>Options:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">name1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">name2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name1&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">name2&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">name1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">name2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name1&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">name2&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">name1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">name2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">name1&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">name2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">name1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">name2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">name1&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">name2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s break down the task and options:&lt;/p>
&lt;h3>&lt;strong>Task Recap&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="task-recap">&lt;/span>
&lt;a href="#task-recap" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Input:&lt;/strong> Two names (strings), one per line.&lt;/li>
&lt;li>&lt;strong>Output:&lt;/strong> Print &lt;code>True&lt;/code> if the first name comes before the second in alphabetical order, else &lt;code>False&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>How Python compares strings:&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="how-python-compares-strings">&lt;/span>
&lt;a href="#how-python-compares-strings" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>The &lt;code>&amp;lt;&lt;/code> operator checks if the first string comes before the second in dictionary (lexicographical) order[^1].&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>Test Example&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="test-example">&lt;/span>
&lt;a href="#test-example" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>Input:&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>sachin
rohit&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Output:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>False&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Because &amp;ldquo;sachin&amp;rdquo; comes after &amp;ldquo;rohit&amp;rdquo;.&lt;/p>
&lt;h3>&lt;strong>Let&amp;rsquo;s check each option:&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="let">&lt;/span>
&lt;a href="#let" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Code&lt;/th>
&lt;th style="text-align: left">Output for (&lt;code>sachin&lt;/code>, &lt;code>rohit&lt;/code>)&lt;/th>
&lt;th style="text-align: left">Output for (&lt;code>saina&lt;/code>, &lt;code>sindhu&lt;/code>)&lt;/th>
&lt;th style="text-align: left">Correct?&lt;/th>
&lt;th style="text-align: left">Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">1&lt;/td>
&lt;td style="text-align: left">name1 = input(); name2 = input(); print(name1 &amp;lt; name2)&lt;/td>
&lt;td style="text-align: left">False&lt;/td>
&lt;td style="text-align: left">True&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">Compares in correct order.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">2&lt;/td>
&lt;td style="text-align: left">name1 = input(); name2 = input(); print(name1 &amp;gt; name2)&lt;/td>
&lt;td style="text-align: left">True&lt;/td>
&lt;td style="text-align: left">False&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Reverses the comparison.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">3&lt;/td>
&lt;td style="text-align: left">print(input() &amp;lt; input())&lt;/td>
&lt;td style="text-align: left">False&lt;/td>
&lt;td style="text-align: left">True&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">Same as option 1, just shorter.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">4&lt;/td>
&lt;td style="text-align: left">print(input() &amp;gt; input())&lt;/td>
&lt;td style="text-align: left">True&lt;/td>
&lt;td style="text-align: left">False&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Same as option 2, reverses comparison.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">5&lt;/td>
&lt;td style="text-align: left">name1 = input(); name2 = input(); result = name1 &amp;lt; name2; print(result)&lt;/td>
&lt;td style="text-align: left">False&lt;/td>
&lt;td style="text-align: left">True&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">Same as option 1, just with a variable.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">6&lt;/td>
&lt;td style="text-align: left">name1 = input(); name2 = input(); result = name1 &amp;gt; name2; print(result)&lt;/td>
&lt;td style="text-align: left">True&lt;/td>
&lt;td style="text-align: left">False&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Reverses the comparison.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>&lt;strong>Correct Implementations&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="correct-implementations">&lt;/span>
&lt;a href="#correct-implementations" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Option 1&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Option 3&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Option 5&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>All these use &lt;code>&amp;lt;&lt;/code> to compare the first input with the second, which matches the required logic.&lt;/p>
&lt;h3>📝 &lt;strong>Practice Question&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-practice-question">&lt;/span>
&lt;a href="#-practice-question" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Write a program to check if the first city name comes before the second city name alphabetically.
&lt;strong>Sample Input:&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>Mumbai
Delhi&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>Sample Output:&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>False&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>Solution:&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">city1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">city2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">city1&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">city2&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>Summary:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Correct options:&lt;/strong>
&lt;ul>
&lt;li>&lt;code>name1 = input(); name2 = input(); print(name1 &amp;lt; name2)&lt;/code>&lt;/li>
&lt;li>&lt;code>print(input() &amp;lt; input())&lt;/code>&lt;/li>
&lt;li>&lt;code>name1 = input(); name2 = input(); result = name1 &amp;lt; name2; print(result)&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Keep practicing string comparisons! 🚀&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>29&lt;/strong>) What is the type of the following expression?&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Options:&lt;/p>
&lt;p>str&lt;/p>
&lt;p>bool&lt;/p>
&lt;p>True&lt;/p>
&lt;p>False&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>The type of the expression&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>is &lt;strong>bool&lt;/strong>.&lt;/p>
&lt;h3>Step-by-Step Explanation 🐍&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-explanation-">&lt;/span>
&lt;a href="#step-by-step-explanation-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;code>1 &amp;gt; 0&lt;/code> evaluates to &lt;code>True&lt;/code> (bool)&lt;/li>
&lt;li>&lt;code>-1 &amp;lt; 0&lt;/code> evaluates to &lt;code>True&lt;/code> (bool)&lt;/li>
&lt;li>&lt;code>1 == 1&lt;/code> evaluates to &lt;code>True&lt;/code> (bool)&lt;/li>
&lt;li>All three are combined with the &lt;code>and&lt;/code> operator, which returns a Boolean value (&lt;code>True&lt;/code> or &lt;code>False&lt;/code>).&lt;/li>
&lt;li>The type of the entire expression is &lt;strong>bool&lt;/strong> (Boolean), not the value &lt;code>True&lt;/code> or &lt;code>False&lt;/code>, and not a string.&lt;/li>
&lt;/ul>
&lt;p>You can confirm this in Python:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># Output: &amp;lt;class &amp;#39;bool&amp;#39;&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Practice Question 🎯&lt;span class="hx-absolute -hx-mt-20" id="practice-question-">&lt;/span>
&lt;a href="#practice-question-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>What is the type of the expression &lt;code>(5 != 3) or (2 &amp;gt; 7)&lt;/code>?&lt;/p>
&lt;ul>
&lt;li>A) int&lt;/li>
&lt;li>B) bool&lt;/li>
&lt;li>C) str&lt;/li>
&lt;li>D) True&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;strong>Answer:&lt;/strong>&lt;/p>
&lt;p>B) bool&lt;/p>
&lt;p>&lt;em>Explanation: Logical operations always return a Boolean value (&lt;code>True&lt;/code> or &lt;code>False&lt;/code>), and its type is &lt;code>bool&lt;/code>.&lt;/em>&lt;/p>
&lt;p>So, the correct answer is:
&lt;strong>bool&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style></description></item><item><title>Python Week 2</title><link>/exercises/graded-assignments/python/graded-assignment-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/exercises/graded-assignments/python/graded-assignment-2/</guid><description>
&lt;hr>
&lt;h2>Multiple Choice Questions 🧠&lt;span class="hx-absolute -hx-mt-20" id="multiple-choice-questions-">&lt;/span>
&lt;a href="#multiple-choice-questions-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;h3>Common data for the next 4 questions 🔗&lt;span class="hx-absolute -hx-mt-20" id="common-data-for-the-next-4-questions-">&lt;/span>
&lt;a href="#common-data-for-the-next-4-questions-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Consider the below code.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;hello&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">e&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">e&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">f&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">e&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">d&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">c&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">e&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">del&lt;/span> &lt;span class="n">c&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Try playing around in &lt;a href="https://livinnector.github.io/live-py-tutor/#mode=edit" target="_blank" rel="noopener">this&lt;/a> python tutor link for answering the questions.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>1&lt;/strong>) What is the total number of objects that were referenced by the variables in the given code during the execution?&lt;/p>
&lt;hr>
&lt;p>&lt;strong>2&lt;/strong>) What is the total number of objects that were referenced by the variables in the given code at the end of the execution?&lt;/p>
&lt;hr>
&lt;p>&lt;strong>3&lt;/strong>) What is the total number of variables refering to the same object as variable &lt;code>b&lt;/code> (including &lt;code>b&lt;/code>) at the end of the execution of the given code?&lt;/p>
&lt;hr>
&lt;p>&lt;strong>4&lt;/strong>) Select the variable(s) that are refering to the same object as &lt;code>a&lt;/code> at some point of time during the execution of the above code.&lt;/p>
&lt;p>b&lt;/p>
&lt;p>c&lt;/p>
&lt;p>d&lt;/p>
&lt;p>e&lt;/p>
&lt;p>f&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>5&lt;/strong>) Assume &lt;code>s&lt;/code> is a &lt;code>str&lt;/code>, if the output of &lt;code>print(s)&lt;/code> is The next line char is &lt;code>\\n&lt;/code>, then select the possible the value(s) of &lt;code>s&lt;/code>.&lt;/p>
&lt;p>&lt;code>&amp;quot;&amp;quot;&amp;quot;The next line char is \\n&amp;quot;&amp;quot;&amp;quot;&lt;/code>&lt;/p>
&lt;p>&lt;code>&amp;quot;The next line char is \\\\n&amp;quot;&lt;/code>&lt;/p>
&lt;p>&lt;code>'The next line char is \\n'&lt;/code>&lt;/p>
&lt;p>&lt;code>'The next line char is \\\\n'&lt;/code>&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s break down the question step by step, using clear explanations, emojis, and practice!&lt;/p>
&lt;h2>🎯 &lt;strong>Question Recap&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-question-recap">&lt;/span>
&lt;a href="#-question-recap" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>If the output of &lt;code>print(s)&lt;/code> is:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>The next line char is \n&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Which of the following values could &lt;code>s&lt;/code> be?&lt;/p>
&lt;ol>
&lt;li>&lt;code>&amp;quot;&amp;quot;&amp;quot;The next line char is \\n&amp;quot;&amp;quot;&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>&amp;quot;The next line char is \\\\n&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>'The next line char is \\n'&lt;/code>&lt;/li>
&lt;li>&lt;code>'The next line char is \\\\n'&lt;/code>&lt;/li>
&lt;/ol>
&lt;h2>🧐 &lt;strong>Understanding the Problem&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-understanding-the-problem">&lt;/span>
&lt;a href="#-understanding-the-problem" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;strong>Goal:&lt;/strong> Find which value(s) of &lt;code>s&lt;/code> will make &lt;code>print(s)&lt;/code> show &lt;code>The next line char is \n&lt;/code> (with a literal backslash and n, not a newline!).&lt;/li>
&lt;li>&lt;strong>Key:&lt;/strong> In Python, &lt;code>\n&lt;/code> inside a string is a newline, but &lt;code>\\n&lt;/code> is a backslash and an n.&lt;/li>
&lt;/ul>
&lt;h2>🔍 &lt;strong>Step-by-Step Analysis&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-step-by-step-analysis">&lt;/span>
&lt;a href="#-step-by-step-analysis" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Let&amp;rsquo;s see what each string literal actually contains:&lt;/p>
&lt;h3>1️⃣ &lt;code>&amp;quot;&amp;quot;&amp;quot;The next line char is \\n&amp;quot;&amp;quot;&amp;quot;&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="1-the-next-line-char-is-n">&lt;/span>
&lt;a href="#1-the-next-line-char-is-n" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;code>\\&lt;/code> → a single backslash (&lt;code>\&lt;/code>)&lt;/li>
&lt;li>&lt;code>n&lt;/code> → the character &lt;code>n&lt;/code>&lt;/li>
&lt;li>So, the string is: &lt;code>The next line char is \n&lt;/code>&lt;/li>
&lt;li>&lt;strong>When printed:&lt;/strong> &lt;code>The next line char is \n&lt;/code> ✅&lt;/li>
&lt;/ul>
&lt;h3>2️⃣ &lt;code>&amp;quot;The next line char is \\\\n&amp;quot;&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="2-the-next-line-char-is-n">&lt;/span>
&lt;a href="#2-the-next-line-char-is-n" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;code>\\\\&lt;/code> → two backslashes (&lt;code>\\&lt;/code>)&lt;/li>
&lt;li>&lt;code>n&lt;/code> → the character &lt;code>n&lt;/code>&lt;/li>
&lt;li>So, the string is: &lt;code>The next line char is \\n&lt;/code>&lt;/li>
&lt;li>&lt;strong>When printed:&lt;/strong> &lt;code>The next line char is \\n&lt;/code> ❌ (too many backslashes!)&lt;/li>
&lt;/ul>
&lt;h3>3️⃣ &lt;code>'The next line char is \\n'&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="3-the-next-line-char-is-n">&lt;/span>
&lt;a href="#3-the-next-line-char-is-n" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Same as option 1, just with single quotes.&lt;/li>
&lt;li>&lt;code>\\&lt;/code> → a single backslash (&lt;code>\&lt;/code>)&lt;/li>
&lt;li>&lt;code>n&lt;/code> → the character &lt;code>n&lt;/code>&lt;/li>
&lt;li>So, the string is: &lt;code>The next line char is \n&lt;/code>&lt;/li>
&lt;li>&lt;strong>When printed:&lt;/strong> &lt;code>The next line char is \n&lt;/code> ✅&lt;/li>
&lt;/ul>
&lt;h3>4️⃣ &lt;code>'The next line char is \\\\n'&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="4-the-next-line-char-is-n">&lt;/span>
&lt;a href="#4-the-next-line-char-is-n" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Same as option 2, just with single quotes.&lt;/li>
&lt;li>&lt;code>\\\\&lt;/code> → two backslashes (&lt;code>\\&lt;/code>)&lt;/li>
&lt;li>&lt;code>n&lt;/code> → the character &lt;code>n&lt;/code>&lt;/li>
&lt;li>So, the string is: &lt;code>The next line char is \\n&lt;/code>&lt;/li>
&lt;li>&lt;strong>When printed:&lt;/strong> &lt;code>The next line char is \\n&lt;/code> ❌&lt;/li>
&lt;/ul>
&lt;h2>✅ &lt;strong>Final Answer&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-final-answer">&lt;/span>
&lt;a href="#-final-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;strong>Possible values for &lt;code>s&lt;/code> are:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>&amp;quot;&amp;quot;&amp;quot;The next line char is \\n&amp;quot;&amp;quot;&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>'The next line char is \\n'&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Both will print:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>The next line char is \n&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>📝 &lt;strong>Practice Questions&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>Q1. What will &lt;code>print(&amp;quot;Hello\\tWorld&amp;quot;)&lt;/code> output?&lt;span class="hx-absolute -hx-mt-20" id="q1-what-will-printhellotworld-output">&lt;/span>
&lt;a href="#q1-what-will-printhellotworld-output" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>Hello\tWorld&lt;/code> (shows a backslash and t)&lt;/li>
&lt;/ul>
&lt;h3>Q2. What will &lt;code>print(&amp;quot;Hello\nWorld&amp;quot;)&lt;/code> output?&lt;span class="hx-absolute -hx-mt-20" id="q2-what-will-printhellonworld-output">&lt;/span>
&lt;a href="#q2-what-will-printhellonworld-output" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>Hello
World&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>(the &lt;code>\n&lt;/code> makes a new line!)&lt;/p>
&lt;h2>🧑‍💻 &lt;strong>Try it Yourself!&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-try-it-yourself">&lt;/span>
&lt;a href="#-try-it-yourself" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;The next line char is &lt;/span>&lt;span class="se">\\&lt;/span>&lt;span class="s2">n&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">s2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;The next line char is &lt;/span>&lt;span class="se">\\\\&lt;/span>&lt;span class="s2">n&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">s3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;The next line char is &lt;/span>&lt;span class="se">\\&lt;/span>&lt;span class="s1">n&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">s4&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;The next line char is &lt;/span>&lt;span class="se">\\\\&lt;/span>&lt;span class="s1">n&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;s1:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;s2:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;s3:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;s4:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s4&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>Expected Output:&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>s1: The next line char is \n
s2: The next line char is \\n
s3: The next line char is \n
s4: The next line char is \\n&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>⭐️ &lt;strong>Summary Table&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-summary-table">&lt;/span>
&lt;a href="#-summary-table" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Value of &lt;code>s&lt;/code>&lt;/th>
&lt;th style="text-align: left">Output of &lt;code>print(s)&lt;/code>&lt;/th>
&lt;th style="text-align: left">Is it correct?&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">1&lt;/td>
&lt;td style="text-align: left">&lt;code>&amp;quot;&amp;quot;&amp;quot;The next line char is \\n&amp;quot;&amp;quot;&amp;quot;&lt;/code>&lt;/td>
&lt;td style="text-align: left">The next line char is \n&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">2&lt;/td>
&lt;td style="text-align: left">&lt;code>&amp;quot;The next line char is \\\\n&amp;quot;&lt;/code>&lt;/td>
&lt;td style="text-align: left">The next line char is \n&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">3&lt;/td>
&lt;td style="text-align: left">&lt;code>'The next line char is \\n'&lt;/code>&lt;/td>
&lt;td style="text-align: left">The next line char is \n&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">4&lt;/td>
&lt;td style="text-align: left">&lt;code>'The next line char is \\\\n'&lt;/code>&lt;/td>
&lt;td style="text-align: left">The next line char is \n&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>🎉 That&amp;rsquo;s it! Now you know how Python string escapes work!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>6&lt;/strong>) Assume &lt;code>s&lt;/code> is a &lt;code>str&lt;/code>, if the output of &lt;code>print(s)&lt;/code> is given below.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">The&lt;/span> &lt;span class="n">first&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">The&lt;/span> &lt;span class="n">second&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="o">.&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Select the possible the value(s) of &lt;code>s&lt;/code>.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;The first line.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1"> The second line.&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;The first line.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1">The second line.&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">The first line.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">The second line.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;The first line.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">The second line.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;The first line.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> The second line.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> &amp;#39;&amp;#39;&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;The first line.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;The second line.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;The first line.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;The second line.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s solve this step by step with clear explanations, emojis, and a table for clarity!&lt;/p>
&lt;h2>🎯 &lt;strong>Question Recap&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-question-recap">&lt;/span>
&lt;a href="#-question-recap" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>You want to know &lt;strong>which value(s) of &lt;code>s&lt;/code> will make&lt;/strong> this output when you run &lt;code>print(s)&lt;/code>:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>The first line.
The second line.&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;em>(Exactly two lines, no extra spaces!)&lt;/em>&lt;/p>
&lt;h2>🧐 &lt;strong>Step-by-Step Analysis&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-step-by-step-analysis">&lt;/span>
&lt;a href="#-step-by-step-analysis" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Let&amp;rsquo;s check each option:&lt;/p>
&lt;h3>1️⃣&lt;span class="hx-absolute -hx-mt-20" id="1">&lt;/span>
&lt;a href="#1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;The first line.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1"> The second line.&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>\n&lt;/code> = new line&lt;/li>
&lt;li>But notice the &lt;strong>space at the start&lt;/strong> of the second line!&lt;/li>
&lt;li>Output:&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>The first line.
The second line.&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>❌ Not a match!&lt;/strong> (Extra space)&lt;/li>
&lt;/ul>
&lt;h3>2️⃣&lt;span class="hx-absolute -hx-mt-20" id="2">&lt;/span>
&lt;a href="#2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;The first line.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1">The second line.&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>\n&lt;/code> = new line&lt;/li>
&lt;li>Output:&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>The first line.
The second line.&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>✅ Match!&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>3️⃣&lt;span class="hx-absolute -hx-mt-20" id="3">&lt;/span>
&lt;a href="#3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">The first line.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">The second line.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Triple quotes preserve line breaks and spaces.&lt;/li>
&lt;li>But this starts with a &lt;strong>newline&lt;/strong> and may have leading spaces, depending on indentation.&lt;/li>
&lt;li>Output:&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>&amp;lt;blank line&amp;gt;
The first line.
The second line.
&amp;lt;blank line&amp;gt;&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>❌ Not a match!&lt;/strong> (Extra blank lines)&lt;/li>
&lt;/ul>
&lt;h3>4️⃣&lt;span class="hx-absolute -hx-mt-20" id="4">&lt;/span>
&lt;a href="#4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;The first line.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">The second line.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Starts immediately, so no leading blank line.&lt;/li>
&lt;li>But &lt;strong>ends with a newline&lt;/strong> because of the closing triple quotes on a new line.&lt;/li>
&lt;li>Output:&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>The first line.
The second line.
&amp;lt;blank line&amp;gt;&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>❌ Not a match!&lt;/strong> (Extra blank line at end)&lt;/li>
&lt;/ul>
&lt;h3>5️⃣&lt;span class="hx-absolute -hx-mt-20" id="5">&lt;/span>
&lt;a href="#5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;The first line.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> The second line.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> &amp;#39;&amp;#39;&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>The second line has &lt;strong>leading spaces&lt;/strong>.&lt;/li>
&lt;li>Output:&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>The first line.
The second line.
&amp;lt;blank line&amp;gt;&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>❌ Not a match!&lt;/strong> (Extra spaces and blank line)&lt;/li>
&lt;/ul>
&lt;h3>6️⃣&lt;span class="hx-absolute -hx-mt-20" id="6">&lt;/span>
&lt;a href="#6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;The first line.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;The second line.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Parentheses allow implicit string concatenation.&lt;/li>
&lt;li>Equivalent to &lt;code>&amp;quot;The first line.\nThe second line.&amp;quot;&lt;/code>&lt;/li>
&lt;li>Output:&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>The first line.
The second line.&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>✅ Match!&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>7️⃣&lt;span class="hx-absolute -hx-mt-20" id="7">&lt;/span>
&lt;a href="#7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;The first line.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;The second line.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Concatenation with &lt;code>+&lt;/code> is the same as above.&lt;/li>
&lt;li>Output:&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>The first line.
The second line.&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>✅ Match!&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2>✅ &lt;strong>Summary Table&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-summary-table">&lt;/span>
&lt;a href="#-summary-table" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Output (print)&lt;/th>
&lt;th style="text-align: left">Match?&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">1&lt;/td>
&lt;td style="text-align: left">The first line.&lt;br> The second line.&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">2&lt;/td>
&lt;td style="text-align: left">The first line.&lt;br>The second line.&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">3&lt;/td>
&lt;td style="text-align: left">&lt;blank line>&lt;br>The first line.&lt;br>The second line.&lt;br>&lt;blank line>&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">4&lt;/td>
&lt;td style="text-align: left">The first line.&lt;br>The second line.&lt;br>&lt;blank line>&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">5&lt;/td>
&lt;td style="text-align: left">The first line.&lt;br> The second line.&lt;br>&lt;blank line>&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">6&lt;/td>
&lt;td style="text-align: left">The first line.&lt;br>The second line.&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">7&lt;/td>
&lt;td style="text-align: left">The first line.&lt;br>The second line.&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2>⭐️ &lt;strong>Correct Answers&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-correct-answers">&lt;/span>
&lt;a href="#-correct-answers" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;strong>Option 2&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Option 6&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Option 7&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2>🧑‍💻 &lt;strong>Try It Yourself!&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-try-it-yourself">&lt;/span>
&lt;a href="#-try-it-yourself" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;The first line.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1">The second line.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;The first line.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;The second line.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;The first line.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;The second line.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;em>All three will print:&lt;/em>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>The first line.
The second line.&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>💡 &lt;strong>Practice Questions&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;strong>What does &lt;code>print(&amp;quot;Hello\nWorld&amp;quot;)&lt;/code> output?&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>Hello
World&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>&lt;strong>What does &lt;code>print(&amp;quot;Line1\nLine2\nLine3&amp;quot;)&lt;/code> output?&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>Line1
Line2
Line3&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>🎉 Well done! Now you know how to create multi-line strings in Python and predict their output!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>7&lt;/strong>) Select the string(s) that are equal to &lt;code>&amp;quot;000500&amp;quot;&lt;/code>.&lt;/p>
&lt;p>&lt;code>f&amp;quot;{500:06}&amp;quot;&lt;/code>&lt;/p>
&lt;p>&lt;code>f&amp;quot;{500:03}&amp;quot;&lt;/code>&lt;/p>
&lt;p>&lt;code>&amp;quot;0&amp;quot;*3+500&lt;/code>&lt;/p>
&lt;p>&lt;code>0*3+&amp;quot;500&amp;quot;&lt;/code>&lt;/p>
&lt;p>&lt;code>&amp;quot;0&amp;quot;*3+&amp;quot;500&amp;quot;&lt;/code>&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s break down each option to see which expressions produce the &lt;strong>string &lt;code>&amp;quot;000500&amp;quot;&lt;/code>&lt;/strong> in Python! 🐍&lt;/p>
&lt;h2>🔍 &lt;strong>Step-by-Step Explanation&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-step-by-step-explanation">&lt;/span>
&lt;a href="#-step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>1️⃣ &lt;code>f&amp;quot;{500:06}&amp;quot;&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="1-f50006">&lt;/span>
&lt;a href="#1-f50006" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>What it does:&lt;/strong>
Formats the integer &lt;code>500&lt;/code> as a string with at least 6 digits, padding with zeros on the left.&lt;/li>
&lt;li>&lt;strong>Result:&lt;/strong>
&lt;code>&amp;quot;000500&amp;quot;&lt;/code> ✅&lt;/li>
&lt;/ul>
&lt;h3>2️⃣ &lt;code>f&amp;quot;{500:03}&amp;quot;&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="2-f50003">&lt;/span>
&lt;a href="#2-f50003" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>What it does:&lt;/strong>
Formats &lt;code>500&lt;/code> as a string with at least 3 digits, padding with zeros if needed.&lt;/li>
&lt;li>&lt;strong>Result:&lt;/strong>
&lt;code>&amp;quot;500&amp;quot;&lt;/code> (no extra zeros) ❌&lt;/li>
&lt;/ul>
&lt;h3>3️⃣ &lt;code>&amp;quot;0&amp;quot;*3+500&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="3-03500">&lt;/span>
&lt;a href="#3-03500" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>What it does:&lt;/strong>
&lt;code>&amp;quot;0&amp;quot;*3&lt;/code> gives &lt;code>&amp;quot;000&amp;quot;&lt;/code>, but &lt;code>500&lt;/code> is an integer, so &lt;code>&amp;quot;000&amp;quot; + 500&lt;/code> causes a &lt;strong>TypeError&lt;/strong> (can&amp;rsquo;t add string and int) ❌&lt;/li>
&lt;/ul>
&lt;h3>4️⃣ &lt;code>0*3+&amp;quot;500&amp;quot;&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="4-03500">&lt;/span>
&lt;a href="#4-03500" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>What it does:&lt;/strong>
&lt;code>0*3&lt;/code> is &lt;code>0&lt;/code>, and &lt;code>&amp;quot;500&amp;quot;&lt;/code> is a string, so &lt;code>0 + &amp;quot;500&amp;quot;&lt;/code> causes a &lt;strong>TypeError&lt;/strong> (can&amp;rsquo;t add int and string) ❌&lt;/li>
&lt;/ul>
&lt;h3>5️⃣ &lt;code>&amp;quot;0&amp;quot;*3+&amp;quot;500&amp;quot;&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="5-03500">&lt;/span>
&lt;a href="#5-03500" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>What it does:&lt;/strong>
&lt;code>&amp;quot;0&amp;quot;*3&lt;/code> gives &lt;code>&amp;quot;000&amp;quot;&lt;/code>, and &lt;code>&amp;quot;500&amp;quot;&lt;/code> is a string, so concatenation gives &lt;code>&amp;quot;000500&amp;quot;&lt;/code> ✅&lt;/li>
&lt;/ul>
&lt;h2>✅ &lt;strong>Final Answers&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-final-answers">&lt;/span>
&lt;a href="#-final-answers" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: center">Is it &lt;code>&amp;quot;000500&amp;quot;&lt;/code>?&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;code>f&amp;quot;{500:06}&amp;quot;&lt;/code>&lt;/td>
&lt;td style="text-align: center">✅ YES&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>f&amp;quot;{500:03}&amp;quot;&lt;/code>&lt;/td>
&lt;td style="text-align: center">❌ NO&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>&amp;quot;0&amp;quot;*3+500&lt;/code>&lt;/td>
&lt;td style="text-align: center">❌ NO&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>0*3+&amp;quot;500&amp;quot;&lt;/code>&lt;/td>
&lt;td style="text-align: center">❌ NO&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>&amp;quot;0&amp;quot;*3+&amp;quot;500&amp;quot;&lt;/code>&lt;/td>
&lt;td style="text-align: center">✅ YES&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>So, the correct answers are:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>f&amp;quot;{500:06}&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>&amp;quot;0&amp;quot;*3+&amp;quot;500&amp;quot;&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2>🧑‍💻 &lt;strong>Try it Yourself!&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-try-it-yourself">&lt;/span>
&lt;a href="#-try-it-yourself" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="mi">500&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">06&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Output: 000500&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="mi">500&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">03&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Output: 500&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">3&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;500&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Output: 000500&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>📝 &lt;strong>Practice Questions&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;strong>What will &lt;code>f&amp;quot;{42:05}&amp;quot;&lt;/code> output?&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>&amp;quot;00042&amp;quot;&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What is the result of &lt;code>&amp;quot;A&amp;quot;*4 + &amp;quot;B&amp;quot;&lt;/code>?&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>&amp;quot;AAAAB&amp;quot;&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What happens if you try &lt;code>&amp;quot;0&amp;quot;*2 + 99&lt;/code>?&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> TypeError (can&amp;rsquo;t add str and int)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>🎉 Great job! Now you know how to format numbers as zero-padded strings in Python!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>8&lt;/strong>) Consider the below code block.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n_apples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">apple_price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">5.7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>If the output of the code is 5 kgs of apple cost ₹ 28.50, select the possible expression(s) that can be used for `s``.&lt;/p>
&lt;p>Options:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>s = f&amp;quot;{n_apples} kgs of apple cost ₹ {n_apples*apple_price}&amp;quot;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>s = f&amp;quot;{n_apples} kgs of apple cost ₹ {n_apples*apple_price:0.2f}&amp;quot;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>s = f&amp;quot;{n_apples} kgs of apple cost ₹ {n_apples*apple_price:.2f}&amp;quot;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>s = n_apples+&amp;quot; kgs of apple cost ₹ &amp;quot;+n_apples*apple_price&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>s = str(n_apples)+&amp;quot; kgs of apple cost ₹ &amp;quot;+str(n_apples*apple_price)&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>s = str(n_apples)+&amp;quot; kgs of apple cost ₹ &amp;quot;+str(n_apples*apple_price)+&amp;quot;0&amp;quot;&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s break down each option to see which can produce the output:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>5 kgs of apple cost ₹ 28.50&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>when used as the value of &lt;code>s&lt;/code> in the code:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n_apples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">apple_price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">5.7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>🧐 &lt;strong>Option-by-Option Analysis&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-option-by-option-analysis">&lt;/span>
&lt;a href="#-option-by-option-analysis" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>1️⃣ &lt;code>s = f&amp;quot;{n_apples} kgs of apple cost ₹ {n_apples*apple_price}&amp;quot;&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="1-s--fn_apples-kgs-of-apple-cost--n_applesapple_price">&lt;/span>
&lt;a href="#1-s--fn_apples-kgs-of-apple-cost--n_applesapple_price" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>What it does:&lt;/strong>
&lt;ul>
&lt;li>Uses f-strings, but &lt;code>{n_apples*apple_price}&lt;/code> will be &lt;code>28.5&lt;/code> (not &lt;code>28.50&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Output:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>5 kgs of apple cost ₹ 28.5&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>❌ Not a match&lt;/strong> (missing trailing zero).&lt;/li>
&lt;/ul>
&lt;h3>2️⃣ &lt;code>s = f&amp;quot;{n_apples} kgs of apple cost ₹ {n_apples*apple_price:0.2f}&amp;quot;&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="2-s--fn_apples-kgs-of-apple-cost--n_applesapple_price02f">&lt;/span>
&lt;a href="#2-s--fn_apples-kgs-of-apple-cost--n_applesapple_price02f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>What it does:&lt;/strong>
&lt;ul>
&lt;li>The &lt;code>:0.2f&lt;/code> formats the number to &lt;strong>two decimal places&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Output:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>5 kgs of apple cost ₹ 28.50&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>✅ Match!&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>3️⃣ &lt;code>s = f&amp;quot;{n_apples} kgs of apple cost ₹ {n_apples*apple_price:.2f}&amp;quot;&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="3-s--fn_apples-kgs-of-apple-cost--n_applesapple_price2f">&lt;/span>
&lt;a href="#3-s--fn_apples-kgs-of-apple-cost--n_applesapple_price2f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>What it does:&lt;/strong>
&lt;ul>
&lt;li>The &lt;code>:.2f&lt;/code> also formats the number to &lt;strong>two decimal places&lt;/strong>[^1][^2].&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Output:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>5 kgs of apple cost ₹ 28.50&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>✅ Match!&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>4️⃣ &lt;code>s = n_apples+&amp;quot; kgs of apple cost ₹ &amp;quot;+n_apples*apple_price&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="4-s--n_apples-kgs-of-apple-cost--n_applesapple_price">&lt;/span>
&lt;a href="#4-s--n_apples-kgs-of-apple-cost--n_applesapple_price" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>What it does:&lt;/strong>
&lt;ul>
&lt;li>Tries to add &lt;code>int&lt;/code> + &lt;code>str&lt;/code> + &lt;code>float&lt;/code> → &lt;strong>TypeError&lt;/strong> (can&amp;rsquo;t add int/float to str)[^2].&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>❌ Not valid Python&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h3>5️⃣ &lt;code>s = str(n_apples)+&amp;quot; kgs of apple cost ₹ &amp;quot;+str(n_apples*apple_price)&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="5-s--strn_apples-kgs-of-apple-cost--strn_applesapple_price">&lt;/span>
&lt;a href="#5-s--strn_apples-kgs-of-apple-cost--strn_applesapple_price" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>What it does:&lt;/strong>
&lt;ul>
&lt;li>Converts both values to strings, but &lt;code>str(n_apples*apple_price)&lt;/code> will be &lt;code>'28.5'&lt;/code> (not &lt;code>'28.50'&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Output:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>5 kgs of apple cost ₹ 28.5&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>❌ Not a match&lt;/strong> (missing trailing zero).&lt;/li>
&lt;/ul>
&lt;h3>6️⃣ &lt;code>s = str(n_apples)+&amp;quot; kgs of apple cost ₹ &amp;quot;+str(n_apples*apple_price)+&amp;quot;0&amp;quot;&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="6-s--strn_apples-kgs-of-apple-cost--strn_applesapple_price0">&lt;/span>
&lt;a href="#6-s--strn_apples-kgs-of-apple-cost--strn_applesapple_price0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>What it does:&lt;/strong>
&lt;ul>
&lt;li>&lt;code>str(n_apples*apple_price)&lt;/code> gives &lt;code>'28.5'&lt;/code>, then adds &lt;code>'0'&lt;/code> at the end: &lt;code>'28.50'&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Output:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>5 kgs of apple cost ₹ 28.50&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>✅ Match!&lt;/strong> (works, but is a hacky way)&lt;/li>
&lt;/ul>
&lt;h2>✅ &lt;strong>Summary Table&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-summary-table">&lt;/span>
&lt;a href="#-summary-table" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Output (print)&lt;/th>
&lt;th style="text-align: left">Match?&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">1&lt;/td>
&lt;td style="text-align: left">5 kgs of apple cost ₹ 28.5&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">2&lt;/td>
&lt;td style="text-align: left">5 kgs of apple cost ₹ 28.50&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">3&lt;/td>
&lt;td style="text-align: left">5 kgs of apple cost ₹ 28.50&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">4&lt;/td>
&lt;td style="text-align: left">TypeError&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">5&lt;/td>
&lt;td style="text-align: left">5 kgs of apple cost ₹ 28.5&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">6&lt;/td>
&lt;td style="text-align: left">5 kgs of apple cost ₹ 28.50&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2>⭐️ &lt;strong>Correct Answers&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-correct-answers">&lt;/span>
&lt;a href="#-correct-answers" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;strong>Option 2&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Option 3&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Option 6&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2>🧑‍💻 &lt;strong>Try It Yourself!&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-try-it-yourself">&lt;/span>
&lt;a href="#-try-it-yourself" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n_apples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">apple_price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">5.7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Option 2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">s2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">n_apples&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> kgs of apple cost ₹ &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">n_apples&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">apple_price&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">0.2f&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 5 kgs of apple cost ₹ 28.50&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Option 3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">s3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">n_apples&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> kgs of apple cost ₹ &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">n_apples&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">apple_price&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">.2f&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 5 kgs of apple cost ₹ 28.50&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Option 6&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">s6&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n_apples&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s2">&amp;#34; kgs of apple cost ₹ &amp;#34;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n_apples&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">apple_price&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s6&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 5 kgs of apple cost ₹ 28.50&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>📝 &lt;strong>Practice Questions&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;strong>How do you format 123.4 as &lt;code>123.40&lt;/code> in an f-string?&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>f&amp;quot;{123.4:.2f}&amp;quot;&lt;/code> → &lt;code>&amp;quot;123.40&amp;quot;&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What will &lt;code>print(f&amp;quot;Total: ₹ {99.999:.2f}&amp;quot;)&lt;/code> output?&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>Total: ₹ 100.00&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What is the output of &lt;code>str(45.2) + &amp;quot;0&amp;quot;&lt;/code>?&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>&amp;quot;45.20&amp;quot;&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>🎉 Now you know how to format numbers for currency in Python!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>9&lt;/strong>) Consider the below code block.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n_apples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">apple_price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">1.75&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>If the output of the code is &lt;code>5 kgs of apple cost ₹ 08.75&lt;/code>, select the possible expression(s) that can be used for `s``.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>s = f&amp;quot;{n_apples} kgs of apple cost ₹ {n_apples*apple_price:0.2f}&amp;quot;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>s = f&amp;quot;{n_apples} kgs of apple cost ₹ {n_apples*apple_price}&amp;quot;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>s = f&amp;quot;{n_apples} kgs of apple cost ₹ {n_apples*apple_price:.2f}&amp;quot;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>s = n_apples+&amp;quot; kgs of apple cost ₹ &amp;quot;+n_apples*apple_price&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>s = str(n_apples)+&amp;quot; kgs of apple cost ₹ 0&amp;quot;+str(n_apples*apple_price)&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>s = str(n_apples)+&amp;quot; kgs of apple cost ₹ &amp;quot;+str(n_apples*apple_price)&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s check which options can produce this &lt;strong>exact output&lt;/strong>:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>5 kgs of apple cost ₹ 08.75&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Given:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n_apples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">apple_price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">1.75&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>🧐 &lt;strong>Option-by-Option Analysis&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-option-by-option-analysis">&lt;/span>
&lt;a href="#-option-by-option-analysis" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>1️⃣ &lt;code>s = f&amp;quot;{n_apples} kgs of apple cost ₹ {n_apples*apple_price:0.2f}&amp;quot;&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="1-s--fn_apples-kgs-of-apple-cost--n_applesapple_price02f">&lt;/span>
&lt;a href="#1-s--fn_apples-kgs-of-apple-cost--n_applesapple_price02f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;code>n_apples*apple_price&lt;/code> = &lt;code>5*1.75&lt;/code> = &lt;code>8.75&lt;/code>&lt;/li>
&lt;li>&lt;code>:0.2f&lt;/code> means: minimum width 0, 2 decimal places, &lt;strong>but does NOT pad with a leading zero&lt;/strong> for numbers less than 10.&lt;/li>
&lt;li>&lt;strong>Result:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>5 kgs of apple cost ₹ 8.75&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>❌ Not a match&lt;/strong> (no leading zero).&lt;/li>
&lt;/ul>
&lt;h3>2️⃣ &lt;code>s = f&amp;quot;{n_apples} kgs of apple cost ₹ {n_apples*apple_price}&amp;quot;&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="2-s--fn_apples-kgs-of-apple-cost--n_applesapple_price">&lt;/span>
&lt;a href="#2-s--fn_apples-kgs-of-apple-cost--n_applesapple_price" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>No formatting, so just &lt;code>8.75&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Result:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>5 kgs of apple cost ₹ 8.75&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>❌ Not a match&lt;/strong> (no leading zero, may show more decimals if not exactly 2).&lt;/li>
&lt;/ul>
&lt;h3>3️⃣ &lt;code>s = f&amp;quot;{n_apples} kgs of apple cost ₹ {n_apples*apple_price:.2f}&amp;quot;&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="3-s--fn_apples-kgs-of-apple-cost--n_applesapple_price2f">&lt;/span>
&lt;a href="#3-s--fn_apples-kgs-of-apple-cost--n_applesapple_price2f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;code>:.2f&lt;/code> means: 2 decimal places, &lt;strong>but no leading zero&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Result:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>5 kgs of apple cost ₹ 8.75&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>❌ Not a match&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h3>4️⃣ &lt;code>s = n_apples+&amp;quot; kgs of apple cost ₹ &amp;quot;+n_apples*apple_price&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="4-s--n_apples-kgs-of-apple-cost--n_applesapple_price">&lt;/span>
&lt;a href="#4-s--n_apples-kgs-of-apple-cost--n_applesapple_price" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>This tries to add &lt;code>int&lt;/code> + &lt;code>str&lt;/code> + &lt;code>float&lt;/code> → &lt;strong>TypeError&lt;/strong> (can&amp;rsquo;t add int/float to str).&lt;/li>
&lt;li>&lt;strong>❌ Not valid Python&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h3>5️⃣ &lt;code>s = str(n_apples)+&amp;quot; kgs of apple cost ₹ 0&amp;quot;+str(n_apples*apple_price)&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="5-s--strn_apples-kgs-of-apple-cost--0strn_applesapple_price">&lt;/span>
&lt;a href="#5-s--strn_apples-kgs-of-apple-cost--0strn_applesapple_price" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;code>str(n_apples)&lt;/code> → &lt;code>'5'&lt;/code>&lt;/li>
&lt;li>&lt;code>str(n_apples*apple_price)&lt;/code> → &lt;code>'8.75'&lt;/code>&lt;/li>
&lt;li>Adds an &lt;strong>extra &amp;lsquo;0&amp;rsquo;&lt;/strong> in front of the cost.&lt;/li>
&lt;li>&lt;strong>Result:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>5 kgs of apple cost ₹ 08.75&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>✅ Match!&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>6️⃣ &lt;code>s = str(n_apples)+&amp;quot; kgs of apple cost ₹ &amp;quot;+str(n_apples*apple_price)&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="6-s--strn_apples-kgs-of-apple-cost--strn_applesapple_price">&lt;/span>
&lt;a href="#6-s--strn_apples-kgs-of-apple-cost--strn_applesapple_price" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;code>str(n_apples*apple_price)&lt;/code> → &lt;code>'8.75'&lt;/code>&lt;/li>
&lt;li>&lt;strong>Result:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>5 kgs of apple cost ₹ 8.75&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>❌ Not a match&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2>✅ &lt;strong>Summary Table&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-summary-table">&lt;/span>
&lt;a href="#-summary-table" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Output (print)&lt;/th>
&lt;th style="text-align: left">Match?&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">1&lt;/td>
&lt;td style="text-align: left">5 kgs of apple cost ₹ 8.75&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">2&lt;/td>
&lt;td style="text-align: left">5 kgs of apple cost ₹ 8.75&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">3&lt;/td>
&lt;td style="text-align: left">5 kgs of apple cost ₹ 8.75&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">4&lt;/td>
&lt;td style="text-align: left">TypeError&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">5&lt;/td>
&lt;td style="text-align: left">5 kgs of apple cost ₹ 08.75&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">6&lt;/td>
&lt;td style="text-align: left">5 kgs of apple cost ₹ 8.75&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2>⭐️ &lt;strong>Correct Answer&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-correct-answer">&lt;/span>
&lt;a href="#-correct-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;strong>Option 5&lt;/strong>: &lt;code>s = str(n_apples)+&amp;quot; kgs of apple cost ₹ 0&amp;quot;+str(n_apples*apple_price)&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2>🧑‍💻 &lt;strong>Try It Yourself!&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-try-it-yourself">&lt;/span>
&lt;a href="#-try-it-yourself" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n_apples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">apple_price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">1.75&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n_apples&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34; kgs of apple cost ₹ 0&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n_apples&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">apple_price&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Output: 5 kgs of apple cost ₹ 08.75&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>📝 &lt;strong>Practice Questions&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;strong>How do you print &lt;code>₹ 05.00&lt;/code> for 5 rupees using f-string?&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>f&amp;quot;₹ {5:05.2f}&amp;quot;&lt;/code> → &lt;code>₹ 05.00&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What does &lt;code>str(7.2).zfill(5)&lt;/code> output?&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>'07.2'&lt;/code> (but doesn&amp;rsquo;t pad after decimal)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What will &lt;code>f&amp;quot;{9.5:06.2f}&amp;quot;&lt;/code> output?&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>'009.50'&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>🎉 Now you know how to control number formatting and string concatenation in Python!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>10&lt;/strong>) Consider the below code block.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;56&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s1">7&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">|&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s1">^6&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">|&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s1">&amp;gt;3&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>What is the value of the variable &lt;code>s&lt;/code>? Enter the answer as a single quoted string.&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Given the code:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;56&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s1">7&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">|&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s1">^6&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">|&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s1">&amp;gt;3&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Let&amp;rsquo;s break it down:&lt;/p>
&lt;ul>
&lt;li>&lt;code>a, b = &amp;quot;56&amp;quot;&lt;/code> assigns &lt;code>a = &amp;quot;5&amp;quot;&lt;/code>, &lt;code>b = &amp;quot;6&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>a*3&lt;/code> → &lt;code>&amp;quot;5&amp;quot;*3&lt;/code> → &lt;code>&amp;quot;555&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>b*2&lt;/code> → &lt;code>&amp;quot;6&amp;quot;*2&lt;/code> → &lt;code>&amp;quot;66&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>a*8&lt;/code> → &lt;code>&amp;quot;5&amp;quot;*8&lt;/code> → &lt;code>&amp;quot;55555555&amp;quot;&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Now, formatting:&lt;/p>
&lt;ul>
&lt;li>&lt;code>{a*3:7}&lt;/code> → &lt;code>&amp;quot;555&amp;quot;&lt;/code> right-aligned in width 7: &lt;code>' 555'&lt;/code>&lt;/li>
&lt;li>&lt;code>{b*2:^6}&lt;/code> → &lt;code>&amp;quot;66&amp;quot;&lt;/code> centered in width 6: &lt;code>' 66 '&lt;/code>&lt;/li>
&lt;li>&lt;code>{a*8:&amp;gt;3}&lt;/code> → &lt;code>&amp;quot;55555555&amp;quot;&lt;/code> right-aligned in width 3 (but string is longer than 3, so no effect): &lt;code>'55555555'&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>So, the value of &lt;code>s&lt;/code> is:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39; 555| 66 |55555555&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>Final answer:&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39; 555| 66 |55555555&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>11&lt;/strong>) Assume &lt;code>s&lt;/code> is a &lt;code>str&lt;/code> variable. What is the type of the expression &lt;code>str(len(s.upper().split())).isdigit()&lt;/code>?&lt;/p>
&lt;p>&lt;code>int&lt;/code>&lt;/p>
&lt;p>&lt;code>str&lt;/code>&lt;/p>
&lt;p>&lt;code>float&lt;/code>&lt;/p>
&lt;p>&lt;code>list&lt;/code>&lt;/p>
&lt;p>&lt;code>bool&lt;/code>&lt;/p>
&lt;p>&lt;code>NoneType&lt;/code>&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>The type of the expression&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">upper&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">()))&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">isdigit&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>is &lt;strong>&lt;code>bool&lt;/code>&lt;/strong>.&lt;/p>
&lt;h3>🧐 &lt;strong>Step-by-Step Explanation&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-step-by-step-explanation">&lt;/span>
&lt;a href="#-step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>&lt;code>s.upper()&lt;/code>&lt;/strong>
&lt;ul>
&lt;li>Converts all characters in &lt;code>s&lt;/code> to uppercase.&lt;/li>
&lt;li>Result: a string.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>&lt;code>.split()&lt;/code>&lt;/strong>
&lt;ul>
&lt;li>Splits the string into a list of words.&lt;/li>
&lt;li>Result: a list.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>&lt;code>len(...)&lt;/code>&lt;/strong>
&lt;ul>
&lt;li>Returns the number of elements in the list.&lt;/li>
&lt;li>Result: an integer.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>&lt;code>str(...)&lt;/code>&lt;/strong>
&lt;ul>
&lt;li>Converts the integer to a string.&lt;/li>
&lt;li>Result: a string containing digits (e.g., &lt;code>&amp;quot;2&amp;quot;&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>&lt;code>.isdigit()&lt;/code>&lt;/strong>
&lt;ul>
&lt;li>Checks if the string contains only digits.&lt;/li>
&lt;li>Result: &lt;strong>&lt;code>True&lt;/code>&lt;/strong> if all characters are digits, &lt;strong>&lt;code>False&lt;/code>&lt;/strong> otherwise.&lt;/li>
&lt;li>The return value is of type &lt;strong>&lt;code>bool&lt;/code>&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>✅ **Final Answer&lt;span class="hx-absolute -hx-mt-20" id="-final-answer">&lt;/span>
&lt;a href="#-final-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>&lt;strong>bool&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Practice Time!&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>What is the type of &lt;code>&amp;quot;123&amp;quot;.isdigit()&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>bool&lt;/code> (returns &lt;code>True&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the type of &lt;code>len([^1][^2])&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>int&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the type of &lt;code>str(5.5)&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>str&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>🎉 Great job!&lt;/strong> Now you know how to trace complex expressions and determine their types in Python!&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>12&lt;/strong>) Assume &lt;code>s&lt;/code> is a &lt;code>str&lt;/code> variable. What is the type of the expression &lt;code>s[:3].upper().split()&lt;/code>?&lt;/p>
&lt;p>&lt;code>int&lt;/code>&lt;/p>
&lt;p>&lt;code>str&lt;/code>&lt;/p>
&lt;p>&lt;code>float&lt;/code>&lt;/p>
&lt;p>&lt;code>list&lt;/code>&lt;/p>
&lt;p>&lt;code>bool&lt;/code>&lt;/p>
&lt;p>Raises Error&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s break down the expression step by step! 🐍&lt;/p>
&lt;h3>Expression:&lt;span class="hx-absolute -hx-mt-20" id="expression">&lt;/span>
&lt;a href="#expression" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">upper&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Step-by-Step Explanation:&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-explanation">&lt;/span>
&lt;a href="#step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>&lt;code>s[:3]&lt;/code>&lt;/strong>
&lt;ul>
&lt;li>Slices the string &lt;code>s&lt;/code> to get the first 3 characters.&lt;/li>
&lt;li>Result: a &lt;strong>string&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>&lt;code>.upper()&lt;/code>&lt;/strong>
&lt;ul>
&lt;li>Converts those 3 characters to uppercase.&lt;/li>
&lt;li>Result: a &lt;strong>string&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>&lt;code>.split()&lt;/code>&lt;/strong>
&lt;ul>
&lt;li>Splits the string into a list of substrings (by default, splits on whitespace).&lt;/li>
&lt;li>Result: a &lt;strong>list&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>The &lt;code>split()&lt;/code> method always returns a &lt;strong>list&lt;/strong> (even if the list has only one item)[^1][^2].&lt;/p>
&lt;/blockquote>
&lt;h3>✅ &lt;strong>Final Answer&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-final-answer">&lt;/span>
&lt;a href="#-final-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>list&lt;/strong>&lt;/p>
&lt;h2>📝 Practice Questions&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>What is the type of &lt;code>&amp;quot;hello world&amp;quot;.split()&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>list&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the type of &lt;code>&amp;quot;abc&amp;quot;.upper()&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>str&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the type of &lt;code>len(&amp;quot;abc&amp;quot;)&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>int&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>🎉 &lt;strong>Great job! Now you know how to trace Python string method chains and their types!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;ol start="13">
&lt;li>Assume &lt;code>s&lt;/code> is a &lt;code>str&lt;/code> variable. What is the type of the expression &lt;code>s.title()&lt;/code>?&lt;/li>
&lt;/ol>
&lt;p>&lt;code>int&lt;/code>&lt;/p>
&lt;p>&lt;code>str&lt;/code>&lt;/p>
&lt;p>&lt;code>float&lt;/code>&lt;/p>
&lt;p>&lt;code>list&lt;/code>&lt;/p>
&lt;p>&lt;code>bool&lt;/code>&lt;/p>
&lt;p>&lt;code>NoneType&lt;/code>&lt;/p>
&lt;p>Raises Error&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>The type of the expression &lt;code>s.title()&lt;/code> is &lt;strong>&lt;code>str&lt;/code>&lt;/strong> (string).&lt;/p>
&lt;ul>
&lt;li>The &lt;code>title()&lt;/code> method is a built-in string method in Python that returns a new string where the first character of each word is uppercase and the rest are lowercase.&lt;/li>
&lt;li>Applying &lt;code>title()&lt;/code> to a string variable (&lt;code>s&lt;/code>) always returns another string, not any other type like int, float, list, bool, or NoneType[^1][^2].&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Final answer:&lt;/strong>
&lt;code>str&lt;/code>&lt;/p>
&lt;h3>📝 Practice Questions&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>What is the type of &lt;code>&amp;quot;hello&amp;quot;.upper()&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>str&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the type of &lt;code>len(&amp;quot;hello&amp;quot;)&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>int&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the type of &lt;code>&amp;quot;123&amp;quot;.isdigit()&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>bool&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>🎉 &lt;strong>Great job! Now you know how to check the type of string method results in Python!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;ol start="14">
&lt;li>Assume &lt;code>s&lt;/code> is a &lt;code>str&lt;/code> variable. What is the type of the expression &lt;code>list(s)&lt;/code>?&lt;/li>
&lt;/ol>
&lt;p>&lt;code>int&lt;/code>&lt;/p>
&lt;p>&lt;code>str&lt;/code>&lt;/p>
&lt;p>&lt;code>float&lt;/code>&lt;/p>
&lt;p>&lt;code>list&lt;/code>&lt;/p>
&lt;p>&lt;code>bool&lt;/code>&lt;/p>
&lt;p>&lt;code>NoneType&lt;/code>&lt;/p>
&lt;p>Raises Error&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>The type of the expression &lt;code>list(s)&lt;/code> is &lt;strong>list&lt;/strong>.&lt;/p>
&lt;ul>
&lt;li>When you use &lt;code>list(s)&lt;/code> in Python, it converts the string &lt;code>s&lt;/code> into a list of its characters[^1][^2].&lt;/li>
&lt;li>For example, if &lt;code>s = &amp;quot;word&amp;quot;&lt;/code>, then &lt;code>list(s)&lt;/code> will result in &lt;code>['w', 'o', 'r', 'd']&lt;/code>[^2].&lt;/li>
&lt;li>This works for any string, including the empty string (which will give an empty list).&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Final answer:&lt;/strong>
&lt;code>list&lt;/code>&lt;/p>
&lt;h3>📝 Practice Questions&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>What is the type of &lt;code>list(&amp;quot;abc&amp;quot;)&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>list&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the type of &lt;code>str([^1][^3][^2])&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>str&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the output of &lt;code>list(&amp;quot;&amp;quot;)&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>[]&lt;/code> (an empty list)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>🎉 &lt;strong>Great job! Now you know how to convert strings to lists in Python!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;ol start="15">
&lt;li>Assume &lt;code>s&lt;/code> is a &lt;code>str&lt;/code> variable. What is the type of the expression &lt;code>s.lower().alpha()&lt;/code>?&lt;/li>
&lt;/ol>
&lt;p>&lt;code>int&lt;/code>&lt;/p>
&lt;p>&lt;code>str&lt;/code>&lt;/p>
&lt;p>&lt;code>float&lt;/code>&lt;/p>
&lt;p>&lt;code>list&lt;/code>&lt;/p>
&lt;p>&lt;code>bool&lt;/code>&lt;/p>
&lt;p>Raises error&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>The type of the expression &lt;code>s.lower().alpha()&lt;/code> is &lt;strong>&amp;ldquo;Raises error&amp;rdquo;&lt;/strong>.&lt;/p>
&lt;h3>🧐 Step-by-Step Explanation&lt;span class="hx-absolute -hx-mt-20" id="-step-by-step-explanation">&lt;/span>
&lt;a href="#-step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;code>s&lt;/code> is a string.&lt;/li>
&lt;li>&lt;code>s.lower()&lt;/code> returns a string (all lowercase).&lt;/li>
&lt;li>&lt;strong>But:&lt;/strong> There is &lt;strong>no method called &lt;code>.alpha()&lt;/code>&lt;/strong> for strings in Python[1][2][3].
&lt;ul>
&lt;li>Common string methods include &lt;code>.isalpha()&lt;/code>, &lt;code>.isdigit()&lt;/code>, &lt;code>.lower()&lt;/code>, &lt;code>.upper()&lt;/code>, etc., but &lt;strong>not&lt;/strong> &lt;code>.alpha()&lt;/code>[1][2].&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Therefore:&lt;/strong>
Trying to call &lt;code>.alpha()&lt;/code> on a string will raise an &lt;strong>AttributeError&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h3>✅ Final Answer&lt;span class="hx-absolute -hx-mt-20" id="-final-answer">&lt;/span>
&lt;a href="#-final-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>&lt;strong>Raises error&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;h2>📝 Practice Questions&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>What is the type of &lt;code>s.lower().isalpha()&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>bool&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What happens if you call a non-existent method on a string, like &lt;code>s.foo()&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> Raises &lt;code>AttributeError&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the type of &lt;code>s.upper()&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>str&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>🎉 &lt;strong>Great job! Always check if a method exists before using it in Python!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;ol start="16">
&lt;li>Assume &lt;code>s&lt;/code> is a &lt;code>str&lt;/code> variable. What is the type of the expression &lt;code>s.lowercase().isalpha()&lt;/code>?&lt;/li>
&lt;/ol>
&lt;p>&lt;code>int&lt;/code>&lt;/p>
&lt;p>&lt;code>str&lt;/code>&lt;/p>
&lt;p>&lt;code>float&lt;/code>&lt;/p>
&lt;p>&lt;code>list&lt;/code>&lt;/p>
&lt;p>&lt;code>bool&lt;/code>&lt;/p>
&lt;p>Raises error&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>The type of the expression &lt;code>s.lowercase().isalpha()&lt;/code> is &lt;strong>Raises error&lt;/strong>.&lt;/p>
&lt;h3>🧐 Step-by-Step Explanation&lt;span class="hx-absolute -hx-mt-20" id="-step-by-step-explanation">&lt;/span>
&lt;a href="#-step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;code>s&lt;/code> is a string variable.&lt;/li>
&lt;li>&lt;code>s.lowercase()&lt;/code> tries to call a method named &lt;code>lowercase()&lt;/code> on a string.&lt;/li>
&lt;li>&lt;strong>But:&lt;/strong>
Python strings &lt;strong>do not have a &lt;code>lowercase()&lt;/code> method&lt;/strong>. The correct method to convert to lowercase is &lt;code>lower()&lt;/code>[1].&lt;/li>
&lt;li>Because &lt;code>lowercase()&lt;/code> does not exist, Python will raise an &lt;strong>AttributeError&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h3>✅ Final Answer&lt;span class="hx-absolute -hx-mt-20" id="-final-answer">&lt;/span>
&lt;a href="#-final-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>&lt;strong>Raises error&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;h2>📝 Practice Questions&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>What is the correct method to convert a string to lowercase in Python?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>.lower()&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the type of &lt;code>s.lower().isalpha()&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>bool&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What happens if you call a non-existent method like &lt;code>s.foo()&lt;/code> on a string?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> Raises &lt;code>AttributeError&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>🎉 &lt;strong>Great job! Always check method names carefully in Python!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;ol start="17">
&lt;li>Assume &lt;code>s&lt;/code> is a &lt;code>str&lt;/code> variable. What is the type of the expression &lt;code>s.title().strip&lt;/code>?&lt;/li>
&lt;/ol>
&lt;p>&lt;code>int&lt;/code>&lt;/p>
&lt;p>&lt;code>str&lt;/code>&lt;/p>
&lt;p>&lt;code>float&lt;/code>&lt;/p>
&lt;p>&lt;code>list&lt;/code>&lt;/p>
&lt;p>&lt;code>bool&lt;/code>&lt;/p>
&lt;p>None of the above&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s analyze the expression step by step! 🐍&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Step-by-Step Explanation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-explanation">&lt;/span>
&lt;a href="#step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;code>s&lt;/code> is a string.&lt;/li>
&lt;li>&lt;code>s.title()&lt;/code> returns a &lt;strong>string&lt;/strong> (with each word capitalized).&lt;/li>
&lt;li>&lt;code>s.title().strip&lt;/code> &lt;strong>does NOT have parentheses&lt;/strong>—so it refers to the &lt;code>strip&lt;/code> &lt;strong>method itself&lt;/strong>, not the result of calling it.&lt;/li>
&lt;li>In Python, referencing a method without calling it returns a &lt;strong>bound method object&lt;/strong>, &lt;strong>not&lt;/strong> a string, int, float, list, or bool[^1].&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>A bound method is a special object representing a function bound to an instance. Its type is neither &lt;code>str&lt;/code>, &lt;code>int&lt;/code>, &lt;code>float&lt;/code>, &lt;code>list&lt;/code>, nor &lt;code>bool&lt;/code>.&lt;/strong>&lt;/p>
&lt;h3>What is the type of &lt;code>s.title().strip&lt;/code>?&lt;span class="hx-absolute -hx-mt-20" id="what-is-the-type-of-stitlestrip">&lt;/span>
&lt;a href="#what-is-the-type-of-stitlestrip" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Its type is &lt;strong>not&lt;/strong> any of the listed types.&lt;/li>
&lt;li>More precisely, its type is &lt;code>&amp;lt;class 'builtin_function_or_method'&amp;gt;&lt;/code> (in Python 3.x, more specifically &lt;code>&amp;lt;class 'method'&amp;gt;&lt;/code> for user-defined classes, and &lt;code>&amp;lt;class 'builtin_function_or_method'&amp;gt;&lt;/code> for built-in types like &lt;code>str&lt;/code>).&lt;/li>
&lt;/ul>
&lt;h3>✅ Final Answer&lt;span class="hx-absolute -hx-mt-20" id="-final-answer">&lt;/span>
&lt;a href="#-final-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>&lt;strong>None of the above&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;h2>📝 Practice Questions&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>What is the type of &lt;code>s.strip&lt;/code> where &lt;code>s&lt;/code> is a string?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>&amp;lt;class 'builtin_function_or_method'&amp;gt;&lt;/code> (not &lt;code>str&lt;/code>!)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the type of &lt;code>s.strip()&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>str&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What happens if you try to print &lt;code>s.strip&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> You get something like &lt;code>&amp;lt;built-in method strip of str object at 0x...&amp;gt;&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>🎉 &lt;strong>Great job! Now you know the difference between referencing and calling a method in Python!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;ol start="18">
&lt;li>Assume &lt;code>s&lt;/code> is a &lt;code>str&lt;/code> variable. What is the type of the expression &lt;code>s.join(s[0],s[1],s[3])&lt;/code>?&lt;/li>
&lt;/ol>
&lt;p>&lt;code>int&lt;/code>&lt;/p>
&lt;p>&lt;code>str&lt;/code>&lt;/p>
&lt;p>&lt;code>float&lt;/code>&lt;/p>
&lt;p>&lt;code>list&lt;/code>&lt;/p>
&lt;p>&lt;code>bool&lt;/code>&lt;/p>
&lt;p>Raises Error&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s analyze the expression step by step! 🐍&lt;/p>
&lt;h3>Expression:&lt;span class="hx-absolute -hx-mt-20" id="expression">&lt;/span>
&lt;a href="#expression" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">])&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Step-by-Step Explanation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-explanation">&lt;/span>
&lt;a href="#step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>&lt;code>s&lt;/code> is a string variable.&lt;/strong>&lt;/li>
&lt;li>&lt;strong>The &lt;code>join()&lt;/code> method:&lt;/strong>
&lt;ul>
&lt;li>Syntax: &lt;code>separator.join(iterable)&lt;/code>&lt;/li>
&lt;li>It expects a &lt;strong>single iterable&lt;/strong> (like a list or tuple) of strings as its argument, not multiple arguments.&lt;/li>
&lt;li>Example: &lt;code>&amp;quot;,&amp;quot;.join([&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;])&lt;/code> → &lt;code>&amp;quot;a,b,c&amp;quot;&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What happens with &lt;code>s.join(s, s[^1], s[^2])&lt;/code>?&lt;/strong>
&lt;ul>
&lt;li>Here, three separate arguments are passed instead of a single iterable.&lt;/li>
&lt;li>This is &lt;strong>not valid usage&lt;/strong> of &lt;code>join()&lt;/code>.&lt;/li>
&lt;li>Python will raise a &lt;code>TypeError&lt;/code> because the method expects exactly one argument (an iterable), not three.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>✅ Final Answer&lt;span class="hx-absolute -hx-mt-20" id="-final-answer">&lt;/span>
&lt;a href="#-final-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>&lt;strong>Raises Error&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;h2>📝 Practice Questions&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>What is the correct way to join three characters &lt;code>a&lt;/code>, &lt;code>b&lt;/code>, &lt;code>c&lt;/code> with a dash using &lt;code>join&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>&amp;quot;-&amp;quot;.join([&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;])&lt;/code> → &lt;code>&amp;quot;a-b-c&amp;quot;&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What happens if you call &lt;code>&amp;quot;.&amp;quot;.join(&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;)&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> Raises &lt;code>TypeError&lt;/code> (expects one iterable argument)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the type of &lt;code>&amp;quot;&amp;quot;.join([&amp;quot;1&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;3&amp;quot;])&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>str&lt;/code> (the result is &lt;code>&amp;quot;123&amp;quot;&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>🎉 &lt;strong>Great job! Always remember: &lt;code>join()&lt;/code> needs a single iterable as its argument!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;ol start="19">
&lt;li>What is the value of the expression &lt;code>bool(False)&lt;/code>?&lt;/li>
&lt;/ol>
&lt;p>&lt;code>True&lt;/code>&lt;/p>
&lt;p>&lt;code>False&lt;/code>&lt;/p>
&lt;p>Raises Error&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>The value of the expression &lt;code>bool(False)&lt;/code> is &lt;strong>&lt;code>False&lt;/code>&lt;/strong>.&lt;/p>
&lt;ul>
&lt;li>The &lt;code>bool()&lt;/code> function in Python converts its argument to a Boolean value (&lt;code>True&lt;/code> or &lt;code>False&lt;/code>).&lt;/li>
&lt;li>Passing &lt;code>False&lt;/code> to &lt;code>bool()&lt;/code> returns &lt;code>False&lt;/code>, because &lt;code>False&lt;/code> is already the Boolean value representing falsehood in Python[^1][^2].&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Final answer:&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>False&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>📝 Practice Questions&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>What is the value of &lt;code>bool(0)&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>False&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the value of &lt;code>bool(1)&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>True&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the value of &lt;code>bool('')&lt;/code> (empty string)?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>False&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>🎉 &lt;strong>Great job! Now you know how &lt;code>bool()&lt;/code> works in Python!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;ol start="20">
&lt;li>What is the value of the expression &lt;code>bool(1 and 2 and 0)&lt;/code>?&lt;/li>
&lt;/ol>
&lt;p>&lt;code>True&lt;/code>&lt;/p>
&lt;p>&lt;code>False&lt;/code>&lt;/p>
&lt;p>Raises Error&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s break down the expression step by step! 🐍&lt;/p>
&lt;h2>Expression:&lt;span class="hx-absolute -hx-mt-20" id="expression">&lt;/span>
&lt;a href="#expression" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">bool&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Step-by-Step Explanation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-explanation">&lt;/span>
&lt;a href="#step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Evaluate &lt;code>1 and 2 and 0&lt;/code>:&lt;/strong>
&lt;ul>
&lt;li>In Python, the &lt;code>and&lt;/code> operator returns the &lt;strong>first falsy value&lt;/strong> it encounters, or the last value if all are truthy.&lt;/li>
&lt;li>&lt;code>1&lt;/code> is truthy, so check &lt;code>2&lt;/code> (also truthy), then check &lt;code>0&lt;/code> (which is falsy).&lt;/li>
&lt;li>So, &lt;code>1 and 2 and 0&lt;/code> evaluates to &lt;code>0&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Apply &lt;code>bool()&lt;/code> to the result:&lt;/strong>
&lt;ul>
&lt;li>&lt;code>bool(0)&lt;/code> is &lt;code>False&lt;/code> in Python[^1].&lt;/li>
&lt;li>So, the final result is &lt;code>False&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>✅ Final Answer&lt;span class="hx-absolute -hx-mt-20" id="-final-answer">&lt;/span>
&lt;a href="#-final-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>False&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>📝 Practice Questions&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>What is the value of &lt;code>bool(1 and 2 and 3)&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>True&lt;/code> (all are truthy, so returns last value, which is 3, and &lt;code>bool(3)&lt;/code> is &lt;code>True&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the value of &lt;code>bool(0 or 5)&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>True&lt;/code> (&lt;code>0 or 5&lt;/code> is &lt;code>5&lt;/code>, and &lt;code>bool(5)&lt;/code> is &lt;code>True&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the value of &lt;code>bool(0 and 5)&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>False&lt;/code> (&lt;code>0 and 5&lt;/code> is &lt;code>0&lt;/code>, and &lt;code>bool(0)&lt;/code> is &lt;code>False&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>🎉 &lt;strong>Great job! Now you know how logical operators and &lt;code>bool()&lt;/code> work in Python!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;ol start="21">
&lt;li>What is the value of the expression &lt;code>bool(0 or &amp;quot;2&amp;quot; and 0)&lt;/code>?&lt;/li>
&lt;/ol>
&lt;p>&lt;code>True&lt;/code>&lt;/p>
&lt;p>&lt;code>False&lt;/code>&lt;/p>
&lt;p>Raises Error&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s evaluate the expression step by step! 🐍&lt;/p>
&lt;h2>Expression:&lt;span class="hx-absolute -hx-mt-20" id="expression">&lt;/span>
&lt;a href="#expression" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">bool&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="s2">&amp;#34;2&amp;#34;&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Step-by-Step Explanation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-explanation">&lt;/span>
&lt;a href="#step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Evaluate &lt;code>&amp;quot;2&amp;quot; and 0&lt;/code>:&lt;/strong>
&lt;ul>
&lt;li>The &lt;code>and&lt;/code> operator returns the first falsy value or the last value if all are truthy.&lt;/li>
&lt;li>&lt;code>&amp;quot;2&amp;quot;&lt;/code> is truthy, &lt;code>0&lt;/code> is falsy.&lt;/li>
&lt;li>So, &lt;code>&amp;quot;2&amp;quot; and 0&lt;/code> → &lt;code>0&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Now evaluate &lt;code>0 or 0&lt;/code>:&lt;/strong>
&lt;ul>
&lt;li>The &lt;code>or&lt;/code> operator returns the first truthy value or the last value if all are falsy.&lt;/li>
&lt;li>Both operands are &lt;code>0&lt;/code> (falsy).&lt;/li>
&lt;li>So, &lt;code>0 or 0&lt;/code> → &lt;code>0&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Apply &lt;code>bool()&lt;/code> to the result:&lt;/strong>
&lt;ul>
&lt;li>&lt;code>bool(0)&lt;/code> → &lt;code>False&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>✅ Final Answer&lt;span class="hx-absolute -hx-mt-20" id="-final-answer">&lt;/span>
&lt;a href="#-final-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>False&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>📝 Practice Questions&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>What is the value of &lt;code>bool(0 or &amp;quot;2&amp;quot;)&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>True&lt;/code> (&lt;code>0 or &amp;quot;2&amp;quot;&lt;/code> → &lt;code>&amp;quot;2&amp;quot;&lt;/code>, which is truthy)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the value of &lt;code>bool(&amp;quot;&amp;quot; and 1)&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>False&lt;/code> (&lt;code>&amp;quot;&amp;quot; and 1&lt;/code> → &lt;code>&amp;quot;&amp;quot;&lt;/code>, which is falsy)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the value of &lt;code>bool(&amp;quot;0&amp;quot; and 1)&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>True&lt;/code> (&lt;code>&amp;quot;0&amp;quot;&lt;/code> is a non-empty string, so truthy; &lt;code>1&lt;/code> is truthy; &lt;code>&amp;quot;0&amp;quot; and 1&lt;/code> → &lt;code>1&lt;/code>; &lt;code>bool(1)&lt;/code> → &lt;code>True&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>🎉 &lt;strong>Great job! Now you know how to evaluate complex boolean expressions in Python!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;ol start="22">
&lt;li>What is the value of the expression &lt;code>0.0 or &amp;quot;2&amp;quot; or 4&lt;/code>?&lt;/li>
&lt;/ol>
&lt;p>&lt;code>True&lt;/code>&lt;/p>
&lt;p>&lt;code>False&lt;/code>&lt;/p>
&lt;p>&lt;code>&amp;quot;2&amp;quot;&lt;/code>&lt;/p>
&lt;p>&lt;code>0.0&lt;/code>&lt;/p>
&lt;p>&lt;code>4&lt;/code>&lt;/p>
&lt;p>Raises Error&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s evaluate the expression step by step! 🐍&lt;/p>
&lt;h2>Expression:&lt;span class="hx-absolute -hx-mt-20" id="expression">&lt;/span>
&lt;a href="#expression" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="mf">0.0&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="s2">&amp;#34;2&amp;#34;&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="mi">4&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Step-by-Step Explanation&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-explanation">&lt;/span>
&lt;a href="#step-by-step-explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>The &lt;code>or&lt;/code> operator in Python returns the &lt;strong>first truthy value&lt;/strong> it finds, or the last value if all are falsy.&lt;/li>
&lt;li>&lt;code>0.0&lt;/code> is &lt;strong>falsy&lt;/strong> (in Python, &lt;code>0.0&lt;/code> is considered False in a boolean context).&lt;/li>
&lt;li>&lt;code>&amp;quot;2&amp;quot;&lt;/code> is a &lt;strong>non-empty string&lt;/strong>, which is &lt;strong>truthy&lt;/strong>.&lt;/li>
&lt;li>Since &lt;code>&amp;quot;2&amp;quot;&lt;/code> is truthy, Python stops evaluating and returns &lt;code>&amp;quot;2&amp;quot;&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h3>✅ Final Answer&lt;span class="hx-absolute -hx-mt-20" id="-final-answer">&lt;/span>
&lt;a href="#-final-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>&amp;#34;2&amp;#34;&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>📝 Practice Questions&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>What is the value of &lt;code>0 or &amp;quot;&amp;quot; or 5&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>5&lt;/code> (since 0 and &amp;quot;&amp;quot; are falsy, 5 is returned)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the value of &lt;code>&amp;quot;&amp;quot; or 0.0 or [] or False or &amp;quot;done&amp;quot;&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>&amp;quot;done&amp;quot;&lt;/code> (all before are falsy, so the last value is returned)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the value of &lt;code>&amp;quot;hello&amp;quot; or 0 or 5&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>&amp;quot;hello&amp;quot;&lt;/code> (first value is truthy)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>🎉 &lt;strong>Great job! Now you know how the &lt;code>or&lt;/code> operator works in Python expressions!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;ol start="23">
&lt;li>What is the value of the expression &lt;code>not None or &amp;quot;2&amp;quot; or 4&lt;/code>?&lt;/li>
&lt;/ol>
&lt;p>&lt;code>True&lt;/code>&lt;/p>
&lt;p>&lt;code>False&lt;/code>&lt;/p>
&lt;p>&lt;code>None&lt;/code>&lt;/p>
&lt;p>&lt;code>&amp;quot;2&amp;quot;&lt;/code>&lt;/p>
&lt;p>&lt;code>4&lt;/code>&lt;/p>
&lt;p>Raises Error&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s break down the expression step by step:&lt;/p>
&lt;h2>Expression:&lt;span class="hx-absolute -hx-mt-20" id="expression">&lt;/span>
&lt;a href="#expression" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="ow">not&lt;/span> &lt;span class="kc">None&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="s2">&amp;#34;2&amp;#34;&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="mi">4&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Step 1: Evaluate &lt;code>not None&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="step-1-evaluate-not-none">&lt;/span>
&lt;a href="#step-1-evaluate-not-none" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>In Python, &lt;code>None&lt;/code> is considered &lt;strong>falsy&lt;/strong>[^1][^2].&lt;/li>
&lt;li>&lt;code>not None&lt;/code> → &lt;code>True&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3>Step 2: Evaluate &lt;code>True or &amp;quot;2&amp;quot; or 4&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="step-2-evaluate-true-or-2-or-4">&lt;/span>
&lt;a href="#step-2-evaluate-true-or-2-or-4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>The &lt;code>or&lt;/code> operator returns the &lt;strong>first truthy value&lt;/strong> it encounters[^2].&lt;/li>
&lt;li>&lt;code>True&lt;/code> is truthy, so the expression stops evaluating further and returns &lt;code>True&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h3>✅ Final Answer&lt;span class="hx-absolute -hx-mt-20" id="-final-answer">&lt;/span>
&lt;a href="#-final-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>True&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>📝 Practice Questions&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>What is the value of &lt;code>not 0 or &amp;quot;&amp;quot; or 5&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>True&lt;/code> (because &lt;code>not 0&lt;/code> is &lt;code>True&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the value of &lt;code>None or 0 or False or &amp;quot;done&amp;quot;&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>&amp;quot;done&amp;quot;&lt;/code> (the first truthy value)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the value of &lt;code>not &amp;quot;&amp;quot;&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>True&lt;/code> (because empty string is falsy)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>🎉 &lt;strong>Great job! Now you know how logical operators and truthy/falsy values work in Python!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>24&lt;/strong>) Consider the below code&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;c&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Select the possible output(s) of the given code, assuming any possible values for &lt;code>a&lt;/code>, &lt;code>b&lt;/code> and &lt;code>c&lt;/code>.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">a&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">b&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">b&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">c&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">c&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s analyze the code logic step by step! 🐍&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;c&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>How does this code work?&lt;span class="hx-absolute -hx-mt-20" id="how-does-this-code-work">&lt;/span>
&lt;a href="#how-does-this-code-work" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>The &lt;strong>first &lt;code>if&lt;/code>&lt;/strong> checks &lt;code>a&lt;/code>. If &lt;code>a&lt;/code> is truthy, it prints &lt;code>'a'&lt;/code>.&lt;/li>
&lt;li>The &lt;strong>second block&lt;/strong> is an &lt;code>if-elif&lt;/code>:
&lt;ul>
&lt;li>If &lt;code>b&lt;/code> is truthy, it prints &lt;code>'b'&lt;/code>.&lt;/li>
&lt;li>If &lt;code>b&lt;/code> is falsy but &lt;code>c&lt;/code> is truthy, it prints &lt;code>'c'&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> The two &lt;code>if&lt;/code> blocks are &lt;strong>independent&lt;/strong>. The &lt;code>elif&lt;/code> is tied only to the second &lt;code>if&lt;/code>.&lt;/p>
&lt;h2>Possible Output Scenarios&lt;span class="hx-absolute -hx-mt-20" id="possible-output-scenarios">&lt;/span>
&lt;a href="#possible-output-scenarios" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Let&amp;rsquo;s consider all combinations for &lt;code>a&lt;/code>, &lt;code>b&lt;/code>, &lt;code>c&lt;/code>:&lt;/p>
&lt;h3>1️⃣ Only &lt;code>a&lt;/code> is truthy&lt;span class="hx-absolute -hx-mt-20" id="1-only-a-is-truthy">&lt;/span>
&lt;a href="#1-only-a-is-truthy" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Output:&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>a&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>(if &lt;code>b&lt;/code> is falsy, so no &lt;code>b&lt;/code>/&lt;code>c&lt;/code>)&lt;/p>
&lt;h3>2️⃣ Only &lt;code>b&lt;/code> is truthy&lt;span class="hx-absolute -hx-mt-20" id="2-only-b-is-truthy">&lt;/span>
&lt;a href="#2-only-b-is-truthy" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Output:&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>b&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>(if &lt;code>a&lt;/code> is falsy, &lt;code>b&lt;/code> is truthy, so only &lt;code>b&lt;/code> prints)&lt;/p>
&lt;h3>3️⃣ Both &lt;code>a&lt;/code> and &lt;code>b&lt;/code> are truthy&lt;span class="hx-absolute -hx-mt-20" id="3-both-a-and-b-are-truthy">&lt;/span>
&lt;a href="#3-both-a-and-b-are-truthy" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Output:&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>a
b&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>(&lt;code>a&lt;/code> is truthy, prints &lt;code>'a'&lt;/code>; &lt;code>b&lt;/code> is truthy, prints &lt;code>'b'&lt;/code>)&lt;/p>
&lt;h3>4️⃣ &lt;code>a&lt;/code> is truthy, &lt;code>b&lt;/code> is falsy, &lt;code>c&lt;/code> is truthy&lt;span class="hx-absolute -hx-mt-20" id="4-a-is-truthy-b-is-falsy-c-is-truthy">&lt;/span>
&lt;a href="#4-a-is-truthy-b-is-falsy-c-is-truthy" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Output:&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>a
c&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>(&lt;code>a&lt;/code> is truthy, prints &lt;code>'a'&lt;/code>; &lt;code>b&lt;/code> is falsy, so check &lt;code>c&lt;/code>; if &lt;code>c&lt;/code> is truthy, prints &lt;code>'c'&lt;/code>)&lt;/p>
&lt;h3>5️⃣ &lt;code>b&lt;/code> is falsy, &lt;code>c&lt;/code> is truthy, but &lt;code>a&lt;/code> is falsy&lt;span class="hx-absolute -hx-mt-20" id="5-b-is-falsy-c-is-truthy-but-a-is-falsy">&lt;/span>
&lt;a href="#5-b-is-falsy-c-is-truthy-but-a-is-falsy" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Output:&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>c&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>(But this is NOT in the provided options.)&lt;/p>
&lt;h3>6️⃣ Both &lt;code>b&lt;/code> and &lt;code>c&lt;/code> are truthy, &lt;code>a&lt;/code> is falsy&lt;span class="hx-absolute -hx-mt-20" id="6-both-b-and-c-are-truthy-a-is-falsy">&lt;/span>
&lt;a href="#6-both-b-and-c-are-truthy-a-is-falsy" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Output:&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>b&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>(If &lt;code>b&lt;/code> is truthy, &lt;code>elif c&lt;/code> is skipped, so &lt;code>'c'&lt;/code> is not printed.)&lt;/p>
&lt;h3>7️⃣ Both &lt;code>b&lt;/code> and &lt;code>c&lt;/code> are truthy, &lt;code>a&lt;/code> is truthy&lt;span class="hx-absolute -hx-mt-20" id="7-both-b-and-c-are-truthy-a-is-truthy">&lt;/span>
&lt;a href="#7-both-b-and-c-are-truthy-a-is-truthy" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Output:&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>a
b&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>(Same as above, &lt;code>'c'&lt;/code> is not printed.)&lt;/p>
&lt;h3>8️⃣ Both &lt;code>a&lt;/code>, &lt;code>b&lt;/code>, and &lt;code>c&lt;/code> are falsy&lt;span class="hx-absolute -hx-mt-20" id="8-both-a-b-and-c-are-falsy">&lt;/span>
&lt;a href="#8-both-a-b-and-c-are-falsy" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Output: (nothing is printed, not in options)&lt;/li>
&lt;/ul>
&lt;h2>Which outputs are possible from the provided options?&lt;span class="hx-absolute -hx-mt-20" id="which-outputs-are-possible-from-the-provided-options">&lt;/span>
&lt;a href="#which-outputs-are-possible-from-the-provided-options" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Possible?&lt;/th>
&lt;th style="text-align: left">Why?&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;code>a&lt;/code>&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">&lt;code>a&lt;/code> truthy, &lt;code>b&lt;/code> falsy, &lt;code>c&lt;/code> falsy&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>b&lt;/code>&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">&lt;code>a&lt;/code> falsy, &lt;code>b&lt;/code> truthy&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>a\nb&lt;/code>&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">&lt;code>a&lt;/code> truthy, &lt;code>b&lt;/code> truthy&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>a\nc&lt;/code>&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">&lt;code>a&lt;/code> truthy, &lt;code>b&lt;/code> falsy, &lt;code>c&lt;/code> truthy&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;code>b\nc&lt;/code>&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">If &lt;code>b&lt;/code> is truthy, &lt;code>elif c&lt;/code> is not checked, so &lt;code>'c'&lt;/code> can&amp;rsquo;t be printed with &lt;code>'b'&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>✅ &lt;strong>Final Answers&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-final-answers">&lt;/span>
&lt;a href="#-final-answers" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;code>a&lt;/code>&lt;/li>
&lt;li>&lt;code>b&lt;/code>&lt;/li>
&lt;li>&lt;code>a\nb&lt;/code>&lt;/li>
&lt;li>&lt;code>a\nc&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;code>b\nc&lt;/code> is NOT possible.&lt;/strong>&lt;/p>
&lt;h2>📝 Practice Questions&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>What is the output if &lt;code>a = True&lt;/code>, &lt;code>b = False&lt;/code>, &lt;code>c = True&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>a
c&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>What is the output if &lt;code>a = False&lt;/code>, &lt;code>b = True&lt;/code>, &lt;code>c = True&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>b&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="3">
&lt;li>What is the output if &lt;code>a = True&lt;/code>, &lt;code>b = True&lt;/code>, &lt;code>c = False&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>a
b&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>🎉 &lt;strong>Great job! Now you know how independent and dependent conditionals work in Python!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>25&lt;/strong>) Consider the below code&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;c&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Select the possible output(s) of the given code, assuming any possible values for &lt;code>a&lt;/code>, &lt;code>b&lt;/code> and &lt;code>c&lt;/code>.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">a&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">b&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">b&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">a&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">c&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">b&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">c&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">a&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s analyze the code logic step by step! 🐍&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;c&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>How does this code execute?&lt;span class="hx-absolute -hx-mt-20" id="how-does-this-code-execute">&lt;/span>
&lt;a href="#how-does-this-code-execute" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>The outermost &lt;code>if a:&lt;/code> must be &lt;strong>True&lt;/strong> for any output to happen.&lt;/li>
&lt;li>Inside &lt;code>if a&lt;/code>, there&amp;rsquo;s &lt;code>if b:&lt;/code>
&lt;ul>
&lt;li>Inside &lt;code>if b&lt;/code>, there&amp;rsquo;s &lt;code>if c:&lt;/code>
&lt;ul>
&lt;li>If &lt;code>c&lt;/code> is True, print &lt;code>'c'&lt;/code>.&lt;/li>
&lt;li>After checking &lt;code>c&lt;/code>, always print &lt;code>'b'&lt;/code> (if &lt;code>b&lt;/code> is True).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>After the &lt;code>if b:&lt;/code> block (regardless of &lt;code>b&lt;/code>), print &lt;code>'a'&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>Let&amp;rsquo;s check all possible outputs from the options:&lt;span class="hx-absolute -hx-mt-20" id="lets-check-all-possible-outputs-from-the-options">&lt;/span>
&lt;a href="#lets-check-all-possible-outputs-from-the-options" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>1️⃣ &lt;code>a&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="1-a">&lt;/span>
&lt;a href="#1-a" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>Possible if &lt;code>a&lt;/code> is True, &lt;code>b&lt;/code> is False.&lt;/li>
&lt;li>Only the last &lt;code>print('a')&lt;/code> runs.&lt;/li>
&lt;/ul>
&lt;h4>2️⃣ &lt;code>b&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="2-b">&lt;/span>
&lt;a href="#2-b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;strong>Not possible by itself.&lt;/strong>&lt;/li>
&lt;li>If &lt;code>b&lt;/code> is True, &lt;code>a&lt;/code> must also be True (since &lt;code>if b&lt;/code> is nested inside &lt;code>if a&lt;/code>), and &lt;code>'a'&lt;/code> will always be printed after &lt;code>'b'&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h4>3️⃣ &lt;code>a\nb&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="3-anb">&lt;/span>
&lt;a href="#3-anb" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>Possible if &lt;code>a&lt;/code> is True, &lt;code>b&lt;/code> is True, &lt;code>c&lt;/code> is False.&lt;/li>
&lt;li>Prints &lt;code>'b'&lt;/code> (since &lt;code>b&lt;/code> is True, but &lt;code>c&lt;/code> is False), then &lt;code>'a'&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h4>4️⃣ &lt;code>b\na&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="4-bna">&lt;/span>
&lt;a href="#4-bna" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>Possible if &lt;code>a&lt;/code> is True, &lt;code>b&lt;/code> is True, &lt;code>c&lt;/code> is False.&lt;/li>
&lt;li>&lt;code>'b'&lt;/code> is printed, then &lt;code>'a'&lt;/code> is printed.&lt;/li>
&lt;li>But the code prints &lt;code>'b'&lt;/code> first, then &lt;code>'a'&lt;/code>, so this is the correct order.&lt;/li>
&lt;/ul>
&lt;h4>5️⃣ &lt;code>c\nb&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="5-cnb">&lt;/span>
&lt;a href="#5-cnb" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;strong>Not possible by itself.&lt;/strong>&lt;/li>
&lt;li>If &lt;code>'c'&lt;/code> is printed, then &lt;code>'b'&lt;/code> is printed immediately after, but &lt;code>'a'&lt;/code> will always be printed last if &lt;code>a&lt;/code> is True.&lt;/li>
&lt;/ul>
&lt;h4>6️⃣ &lt;code>c\nb\na&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="6-cnbna">&lt;/span>
&lt;a href="#6-cnbna" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>Possible if &lt;code>a&lt;/code> is True, &lt;code>b&lt;/code> is True, &lt;code>c&lt;/code> is True.&lt;/li>
&lt;li>Prints &lt;code>'c'&lt;/code>, then &lt;code>'b'&lt;/code>, then &lt;code>'a'&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h2>✅ &lt;strong>Possible Outputs from the Options&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-possible-outputs-from-the-options">&lt;/span>
&lt;a href="#-possible-outputs-from-the-options" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Output&lt;/th>
&lt;th style="text-align: left">Possible?&lt;/th>
&lt;th style="text-align: left">Why?&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">a&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">&lt;code>a=True, b=False&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">b&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">&lt;code>'a'&lt;/code> always printed after &lt;code>'b'&lt;/code> if &lt;code>a&lt;/code> is True&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">a\nb&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">&lt;code>'b'&lt;/code> is printed before &lt;code>'a'&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">b\na&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">&lt;code>a=True, b=True, c=False&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">c\nb&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">&lt;code>'a'&lt;/code> always printed after &lt;code>'b'&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">c\nb\na&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">&lt;code>a=True, b=True, c=True&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>&lt;strong>Correct Answers:&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="correct-answers">&lt;/span>
&lt;a href="#correct-answers" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;code>a&lt;/code>&lt;/li>
&lt;li>&lt;code>b\na&lt;/code>&lt;/li>
&lt;li>&lt;code>c\nb\na&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2>📝 Practice Questions&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>What is the output if &lt;code>a=True, b=False, c=True&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>a&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is the output if &lt;code>a=True, b=True, c=False&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>b
a&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="3">
&lt;li>What is the output if &lt;code>a=True, b=True, c=True&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>c
b
a&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>🎉 &lt;strong>Great job! Now you know how nested conditionals affect output order in Python!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style></description></item><item><title>Python Week 3</title><link>/exercises/graded-assignments/python/graded-assignment-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/exercises/graded-assignments/python/graded-assignment-3/</guid><description>
&lt;hr>
&lt;h2>Multiple Choice Questions 🧠&lt;span class="hx-absolute -hx-mt-20" id="multiple-choice-questions-">&lt;/span>
&lt;a href="#multiple-choice-questions-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>1&lt;/strong>) Select the correct implementation of a program that accepts a positive integer &lt;em>x&lt;/em> as input and prints the maximum value of the integer &lt;em>y&lt;/em> such that $2^y ≤ x$.&lt;/p>
&lt;p>&lt;u>Sample Test Cases&lt;/u>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Input&lt;/th>
&lt;th style="text-align: left">Output&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">100&lt;/td>
&lt;td style="text-align: left">6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">256&lt;/td>
&lt;td style="text-align: left">8&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Select all correct implementations of the program. (MSQ)&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s analyze each option to see which programs correctly print the &lt;strong>maximum value of the integer $ y $ such that $ 2^y \leq x $&lt;/strong> for a given positive integer $ x $:&lt;/p>
&lt;h3>Sample Test Cases&lt;span class="hx-absolute -hx-mt-20" id="sample-test-cases">&lt;/span>
&lt;a href="#sample-test-cases" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Input&lt;/th>
&lt;th style="text-align: left">Output&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">100&lt;/td>
&lt;td style="text-align: left">6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">256&lt;/td>
&lt;td style="text-align: left">8&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2>1️⃣&lt;span class="hx-absolute -hx-mt-20" id="1">&lt;/span>
&lt;a href="#1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>How it works:&lt;/strong>
&lt;ul>
&lt;li>Each loop divides &lt;code>x&lt;/code> by 2 (floor division) and increments &lt;code>y&lt;/code>.&lt;/li>
&lt;li>Loop stops when &lt;code>x&lt;/code> becomes 1 or less.&lt;/li>
&lt;li>&lt;strong>For &lt;code>x=100&lt;/code>:&lt;/strong>
&lt;ul>
&lt;li>100→50→25→12→6→3→1 (6 steps, so y=6)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>For &lt;code>x=256&lt;/code>:&lt;/strong>
&lt;ul>
&lt;li>256→128→64→32→16→8→4→2→1 (8 steps, so y=8)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>✅ This matches the sample outputs.&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2>2️⃣&lt;span class="hx-absolute -hx-mt-20" id="2">&lt;/span>
&lt;a href="#2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>How it works:&lt;/strong>
&lt;ul>
&lt;li>Loop continues &lt;strong>while x &amp;gt;= 1&lt;/strong>, so it also runs when &lt;code>x&lt;/code> is 1.&lt;/li>
&lt;li>&lt;strong>For &lt;code>x=100&lt;/code>:&lt;/strong>
&lt;ul>
&lt;li>100→50→25→12→6→3→1→0 (7 steps, so y=7)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>For &lt;code>x=256&lt;/code>:&lt;/strong>
&lt;ul>
&lt;li>256→128→64→32→16→8→4→2→1→0 (9 steps, so y=9)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>❌ This gives one more than the correct answer.&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2>3️⃣&lt;span class="hx-absolute -hx-mt-20" id="3">&lt;/span>
&lt;a href="#3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>How it works:&lt;/strong>
&lt;ul>
&lt;li>Uses &lt;code>/&lt;/code> (true division), so &lt;code>x&lt;/code> becomes a float after the first division.&lt;/li>
&lt;li>&lt;strong>For &lt;code>x=100&lt;/code>:&lt;/strong>
&lt;ul>
&lt;li>100→50.0→25.0→12.5→6.25→3.125→1.5625→0.78125 (7 steps, so y=7)&lt;/li>
&lt;li>But the loop runs until &lt;code>x &amp;gt; 1&lt;/code>, so it counts one extra step after dropping below 1.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>For &lt;code>x=256&lt;/code>:&lt;/strong>
&lt;ul>
&lt;li>256→128.0→64.0→32.0→16.0→8.0→4.0→2.0→1.0 (9 steps, so y=8)&lt;/li>
&lt;li>Actually, for 256, after 8 divisions, x=1.0, so the loop stops (y=8). For 100, it stops after x=0.78125 (y=7).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>For &lt;code>x=100&lt;/code>:&lt;/strong>
&lt;ul>
&lt;li>100→50.0→25.0→12.5→6.25→3.125→1.5625→0.78125 (loop stops here, y=7)&lt;/li>
&lt;li>&lt;strong>This does NOT match the sample output (should be 6).&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>❌ Does not match sample output for all cases.&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2>4️⃣&lt;span class="hx-absolute -hx-mt-20" id="4">&lt;/span>
&lt;a href="#4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>How it works:&lt;/strong>
&lt;ul>
&lt;li>&lt;code>x&lt;/code> is a string (from &lt;code>input()&lt;/code>), so &lt;code>x &amp;gt; 1&lt;/code> and &lt;code>x // 2&lt;/code> will raise a TypeError.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>❌ This raises an error and does not work.&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2>✅ &lt;strong>Correct Implementations&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-correct-implementations">&lt;/span>
&lt;a href="#-correct-implementations" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Correct?&lt;/th>
&lt;th style="text-align: left">Reason&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">1&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">Matches sample outputs exactly&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">2&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Gives y one too large&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">3&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Gives incorrect y for some cases (due to float division)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">4&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Raises error (wrong type for x)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2>⭐️ &lt;strong>Final Answer&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-final-answer">&lt;/span>
&lt;a href="#-final-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;strong>Only the first implementation is correct:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>📝 Practice Questions&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;strong>What does the following code print for input &lt;code>x = 15&lt;/code>?&lt;/strong>&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;pre>&lt;code>- **A:** 3 (since 2³=8 ≤ 15 &amp;lt; 16)
&lt;/code>&lt;/pre>
&lt;ol start="2">
&lt;li>&lt;strong>How would you write a one-liner to compute this using math?&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>import math; print(int(math.log2(int(input()))))&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What happens if you use &lt;code>/&lt;/code> instead of &lt;code>//&lt;/code> in the loop?&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>x&lt;/code> becomes a float, and the loop may run too many times for non-powers of 2.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>🎉 &lt;strong>Great job! You now know how to find the largest y such that $2^y \leq x$ in Python!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>2&lt;/strong>) There is a collection of boxes, each box containing certain number of coins. This information is represented as a string such as this: &lt;code>'|1|4|1|5|9|'&lt;/code>. Here, there are five boxes. The first box has one coin, second has four coins and so on. Assume that each box has at least one coin and at most nine coins. Select the correct implementation of a snippet of code that computes the average number of coins across the boxes and stores it in a variable named avg. Assume that the string &lt;code>boxes&lt;/code> is already given to you and that there is at least one box in the collection.&lt;/p>
&lt;p>Sample initialization of boxes: &lt;code>'|1|4|1|5|9|'&lt;/code>&lt;/p>
&lt;p>Assume that &lt;code>boxes&lt;/code> is initialized before.&lt;/p>
&lt;p>Select all correct implementations of the program. (MSQ)&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">boxes&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">coins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">boxes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">coins&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">avg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">total&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">num&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">boxes&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">coins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">boxes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">coins&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">avg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">total&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">num&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">coins&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">boxes&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">coins&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">avg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">total&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">num&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">boxes&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">coins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">boxes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">coins&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">avg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">total&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">num&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s analyze each code snippet to see which correctly computes the &lt;strong>average number of coins per box&lt;/strong> from a string like &lt;code>'|1|4|1|5|9|'&lt;/code> and stores it in &lt;code>avg&lt;/code>.&lt;/p>
&lt;h2>🔍 Step-by-Step Analysis&lt;span class="hx-absolute -hx-mt-20" id="-step-by-step-analysis">&lt;/span>
&lt;a href="#-step-by-step-analysis" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>How is the data structured?&lt;span class="hx-absolute -hx-mt-20" id="how-is-the-data-structured">&lt;/span>
&lt;a href="#how-is-the-data-structured" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>The string: &lt;code>|1|4|1|5|9|&lt;/code>&lt;/li>
&lt;li>Each coin count is between &lt;code>|&lt;/code> characters.&lt;/li>
&lt;li>Odd indices (1, 3, 5, &amp;hellip;) are the digits; even indices (0, 2, 4, &amp;hellip;) are the &lt;code>|&lt;/code> characters.&lt;/li>
&lt;/ul>
&lt;h3>1️⃣&lt;span class="hx-absolute -hx-mt-20" id="1">&lt;/span>
&lt;a href="#1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">boxes&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">coins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">boxes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">coins&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">avg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">total&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">num&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Problem:&lt;/strong> &lt;code>coins = boxes[i]&lt;/code> gives a string digit, but &lt;code>total += coins&lt;/code> tries to add a string to an integer (&lt;code>total&lt;/code>). This will cause a &lt;strong>TypeError&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Result:&lt;/strong> ❌ &lt;strong>Incorrect&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>2️⃣&lt;span class="hx-absolute -hx-mt-20" id="2">&lt;/span>
&lt;a href="#2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">boxes&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">coins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">boxes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">coins&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">avg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">total&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">num&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Explanation:&lt;/strong> Only odd indices are used (the digits). Each digit is converted to an integer before adding to &lt;code>total&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Result:&lt;/strong> ✅ &lt;strong>Correct&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>3️⃣&lt;span class="hx-absolute -hx-mt-20" id="3">&lt;/span>
&lt;a href="#3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">coins&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">boxes&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">coins&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">avg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">total&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">num&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Problem:&lt;/strong> Iterates over every character (including &lt;code>|&lt;/code>). &lt;code>total += coins&lt;/code> tries to add a string to an integer, causing a &lt;strong>TypeError&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Result:&lt;/strong> ❌ &lt;strong>Incorrect&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>4️⃣&lt;span class="hx-absolute -hx-mt-20" id="4">&lt;/span>
&lt;a href="#4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">boxes&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">coins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">boxes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">coins&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">avg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">total&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">num&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Problem:&lt;/strong> The &lt;code>break&lt;/code> statement will exit the loop at the very first character (i=0), so the loop never processes any coins.&lt;/li>
&lt;li>&lt;strong>Result:&lt;/strong> ❌ &lt;strong>Incorrect&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2>✅ &lt;strong>Summary Table&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-summary-table">&lt;/span>
&lt;a href="#-summary-table" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Correct?&lt;/th>
&lt;th style="text-align: left">Why?&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">1&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Tries to add strings to integer (&lt;code>total += coins&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">2&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">Properly converts to int and processes only digits&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">3&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Tries to add strings to integer, includes `&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">4&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Loop breaks before processing any coins&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2>⭐️ &lt;strong>Final Answer&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-final-answer">&lt;/span>
&lt;a href="#-final-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;strong>Only the second implementation is correct:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">boxes&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">coins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">boxes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">coins&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">avg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">total&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">num&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>🧑‍💻 &lt;strong>Try It Yourself!&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-try-it-yourself">&lt;/span>
&lt;a href="#-try-it-yourself" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">boxes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;|1|4|1|5|9|&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">boxes&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">coins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">boxes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">coins&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">avg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">total&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">num&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">avg&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Output: 4.0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>📝 &lt;strong>Practice Questions&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;strong>How would you get the sum of coins if &lt;code>boxes = '|2|3|5|'&lt;/code>?&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> Loop through odd indices, convert to int, sum.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>What happens if you forget to use &lt;code>int()&lt;/code> when adding coin values?&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> You get a TypeError (can&amp;rsquo;t add string to int).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>How can you use list comprehension for this?&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">coins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">boxes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">boxes&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">avg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">coins&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">coins&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>🎉 &lt;strong>Great job! Now you know how to parse and process structured strings in Python!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>3&lt;/strong>) Consider the following snippet of code.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">nick&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span> &lt;span class="c1"># there is no space between the quotes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">space&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39; &amp;#39;&lt;/span> &lt;span class="c1"># there is one space between the quotes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">first_char&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">char&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">first_char&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">nick&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nick&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">char&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">first_char&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">char&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">space&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">first_char&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nick&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>What is the output for the following input?&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">Albus Percival Brian Wulfric Dumbledore&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Select all correct implementations of the program. (MSQ)&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Albus&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Dumbledore&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">AP&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">APBWD&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s analyze what the code does, step by step! 🐍&lt;/p>
&lt;h3>Code Recap&lt;span class="hx-absolute -hx-mt-20" id="code-recap">&lt;/span>
&lt;a href="#code-recap" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">nick&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span> &lt;span class="c1"># empty string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">space&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39; &amp;#39;&lt;/span> &lt;span class="c1"># a single space&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">first_char&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">char&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">first_char&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">nick&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nick&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">char&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">first_char&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">char&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">space&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">first_char&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nick&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>What does this code do?&lt;span class="hx-absolute -hx-mt-20" id="what-does-this-code-do">&lt;/span>
&lt;a href="#what-does-this-code-do" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>It loops through every character in the input string.&lt;/li>
&lt;li>If &lt;code>first_char&lt;/code> is &lt;code>True&lt;/code>, it adds the current character to &lt;code>nick&lt;/code> and sets &lt;code>first_char&lt;/code> to &lt;code>False&lt;/code>.&lt;/li>
&lt;li>If the current character is a space, it sets &lt;code>first_char&lt;/code> to &lt;code>True&lt;/code> for the next character.&lt;/li>
&lt;li>&lt;strong>So:&lt;/strong> It collects the first character of the string, and the first character after every space (i.e., the initials of each word).&lt;/li>
&lt;/ul>
&lt;h3>Input:&lt;span class="hx-absolute -hx-mt-20" id="input">&lt;/span>
&lt;a href="#input" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>Albus Percival Brian Wulfric Dumbledore&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Words: Albus, Percival, Brian, Wulfric, Dumbledore&lt;/li>
&lt;/ul>
&lt;h3>Let&amp;rsquo;s trace the code:&lt;span class="hx-absolute -hx-mt-20" id="lets-trace-the-code">&lt;/span>
&lt;a href="#lets-trace-the-code" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&amp;lsquo;A&amp;rsquo; (first letter) → nick = &amp;lsquo;A&amp;rsquo;&lt;/li>
&lt;li>&amp;rsquo;l&amp;rsquo;, &amp;lsquo;b&amp;rsquo;, &amp;lsquo;u&amp;rsquo;, &amp;rsquo;s&amp;rsquo; → nothing added&lt;/li>
&lt;li>&amp;rsquo; &amp;rsquo; (space) → first_char = True&lt;/li>
&lt;li>&amp;lsquo;P&amp;rsquo; → nick = &amp;lsquo;AP&amp;rsquo;&lt;/li>
&lt;li>&amp;rsquo;e&amp;rsquo;, &amp;lsquo;r&amp;rsquo;, &amp;lsquo;c&amp;rsquo;, &amp;lsquo;i&amp;rsquo;, &amp;lsquo;v&amp;rsquo;, &amp;lsquo;a&amp;rsquo;, &amp;rsquo;l&amp;rsquo; → nothing added&lt;/li>
&lt;li>&amp;rsquo; &amp;rsquo; (space) → first_char = True&lt;/li>
&lt;li>&amp;lsquo;B&amp;rsquo; → nick = &amp;lsquo;APB&amp;rsquo;&lt;/li>
&lt;li>&amp;lsquo;r&amp;rsquo;, &amp;lsquo;i&amp;rsquo;, &amp;lsquo;a&amp;rsquo;, &amp;rsquo;n&amp;rsquo; → nothing added&lt;/li>
&lt;li>&amp;rsquo; &amp;rsquo; (space) → first_char = True&lt;/li>
&lt;li>&amp;lsquo;W&amp;rsquo; → nick = &amp;lsquo;APBW&amp;rsquo;&lt;/li>
&lt;li>&amp;lsquo;u&amp;rsquo;, &amp;rsquo;l&amp;rsquo;, &amp;lsquo;f&amp;rsquo;, &amp;lsquo;r&amp;rsquo;, &amp;lsquo;i&amp;rsquo;, &amp;lsquo;c&amp;rsquo; → nothing added&lt;/li>
&lt;li>&amp;rsquo; &amp;rsquo; (space) → first_char = True&lt;/li>
&lt;li>&amp;lsquo;D&amp;rsquo; → nick = &amp;lsquo;APBWD&amp;rsquo;&lt;/li>
&lt;li>&amp;hellip;rest of &amp;ldquo;umbledore&amp;rdquo; → nothing added&lt;/li>
&lt;/ul>
&lt;h3>So the output is:&lt;span class="hx-absolute -hx-mt-20" id="so-the-output-is">&lt;/span>
&lt;a href="#so-the-output-is" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>APBWD&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>✅ &lt;strong>Correct Output&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-correct-output">&lt;/span>
&lt;a href="#-correct-output" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;code>APBWD&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2>❌ &lt;strong>Incorrect Options&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-incorrect-options">&lt;/span>
&lt;a href="#-incorrect-options" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;code>Albus&lt;/code> (would require only the first word)&lt;/li>
&lt;li>&lt;code>Dumbledore&lt;/code> (would require only the last word)&lt;/li>
&lt;li>&lt;code>AP&lt;/code> (would require only the first two words)&lt;/li>
&lt;/ul>
&lt;h2>📝 Practice Questions&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>What would the output be for &lt;code>Hermione Jean Granger&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>HJG&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What would the output be for &lt;code>Severus Snape&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>SS&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What would the output be for &lt;code>Minerva&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>M&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>🎉 &lt;strong>Great job! Now you know how to extract initials from a full name using Python!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>4&lt;/strong>) The first five terms of the Fibonacci sequence is given below:&lt;/p>
&lt;ul>
&lt;li>F₁ = 1 F₂ = 1 F₃ = 2&lt;/li>
&lt;li>F₄ = 3 F₅ = 5&lt;/li>
&lt;/ul>
&lt;p>We wish to write a program that accepts a positive integer &lt;em>n&lt;/em> as input and prints F_n as the output.&lt;/p>
&lt;p>Select all correct implementations of this program. (MSQ)&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">F_prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">F_curr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">F_prev&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">F_curr&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">F_prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">F_curr&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">F_curr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">temp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">F_curr&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">F_prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">F_curr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">F_prev&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">F_curr&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">F_prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">F_curr&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">F_curr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">temp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">F_curr&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">F_prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">F_curr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">F_prev&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">F_curr&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">F_prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">F_curr&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">F_curr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">temp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">F_curr&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">F_prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">F_curr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">F_prev&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">F_curr&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">F_prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">F_curr&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">F_curr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">temp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">F_curr&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s analyze each implementation to see which correctly computes the &lt;strong>nth Fibonacci number&lt;/strong> (with F₁ = 1, F₂ = 1, F₃ = 2, &amp;hellip;):&lt;/p>
&lt;h3>1️⃣&lt;span class="hx-absolute -hx-mt-20" id="1">&lt;/span>
&lt;a href="#1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">F_prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">F_curr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">F_prev&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">F_curr&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">F_prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">F_curr&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">F_curr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">temp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">F_curr&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>How it works:&lt;/strong>
&lt;ul>
&lt;li>For n = 1 or 2, F_curr is 1.&lt;/li>
&lt;li>For n &amp;gt; 2, loop runs (n-2) times, updating F_prev and F_curr.&lt;/li>
&lt;li>For n = 5:
&lt;ul>
&lt;li>count = 2, loop runs while count &amp;lt; 5 (i.e., for count = 2, 3, 4: 3 times).&lt;/li>
&lt;li>F₃ = 2, F₄ = 3, F₅ = 5.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Correct output for all n ≥ 1.&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>✅ Correct&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>2️⃣&lt;span class="hx-absolute -hx-mt-20" id="2">&lt;/span>
&lt;a href="#2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">F_prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">F_curr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">F_prev&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">F_curr&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">F_prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">F_curr&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">F_curr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">temp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">F_curr&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>How it works:&lt;/strong>
&lt;ul>
&lt;li>For n = 1 or 2, prints 1.&lt;/li>
&lt;li>For n &amp;gt; 2, same logic as Implementation 1.&lt;/li>
&lt;li>&lt;strong>Correct output for all n ≥ 1.&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>✅ Correct&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>3️⃣&lt;span class="hx-absolute -hx-mt-20" id="3">&lt;/span>
&lt;a href="#3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">F_prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">F_curr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">F_prev&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">F_curr&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">F_prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">F_curr&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">F_curr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">temp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">F_curr&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>How it works:&lt;/strong>
&lt;ul>
&lt;li>Loop runs n times, which is &lt;strong>too many&lt;/strong>.&lt;/li>
&lt;li>For n = 1: F_curr = 2 (incorrect, should be 1).&lt;/li>
&lt;li>For n = 5: F_curr = 13 (incorrect, should be 5).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>❌ Incorrect&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>4️⃣&lt;span class="hx-absolute -hx-mt-20" id="4">&lt;/span>
&lt;a href="#4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">F_prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">F_curr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">F_prev&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">F_curr&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">F_prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">F_curr&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">F_curr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">temp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">F_curr&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>How it works:&lt;/strong>
&lt;ul>
&lt;li>For n = 1 or 2, range(n-2) is range(-1) or range(0), so loop does not run, F_curr = 1.&lt;/li>
&lt;li>For n = 5: loop runs 3 times (i=0,1,2), F_curr = 5.&lt;/li>
&lt;li>&lt;strong>Correct output for all n ≥ 1.&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>✅ Correct&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2>✅ &lt;strong>Summary Table&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-summary-table">&lt;/span>
&lt;a href="#-summary-table" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Correct?&lt;/th>
&lt;th style="text-align: left">Reason&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">1&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">Correct iteration logic&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">2&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">Handles n&amp;lt;=2 and correct iteration&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">3&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Too many iterations, wrong result&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">4&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">Correct for all n ≥ 1&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2>⭐️ &lt;strong>Final Answer&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-final-answer">&lt;/span>
&lt;a href="#-final-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;strong>The correct implementations are:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>1️⃣&lt;/li>
&lt;li>2️⃣&lt;/li>
&lt;li>4️⃣&lt;/li>
&lt;/ul>
&lt;h2>📝 Practice Questions&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>What is the output for n = 7 in the correct implementations?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> 13&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What happens if you use &lt;code>for i in range(n)&lt;/code> instead of &lt;code>range(n-2)&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> You get the wrong Fibonacci number (too many steps).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>How would you write a recursive version for the nth Fibonacci number?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">fib&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">fib&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">fib&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fib&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())))&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>🎉 &lt;strong>Great job! Now you know how to code the Fibonacci sequence in Python!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>5&lt;/strong>) What is the output of the following snippet of code?&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">char&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="s1">&amp;#39;a1b2c3d4e5&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">char&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="s1">&amp;#39;abcde&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;|&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># there is no space between the quotes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">char&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># there is no space between the quotes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;|&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>Options&lt;/strong>:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">12345&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="o">|||||&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="o">|&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="mi">5&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">1&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="o">|&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="o">|&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="o">|&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s trace the code step by step! 🐍&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">char&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="s1">&amp;#39;a1b2c3d4e5&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">char&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="s1">&amp;#39;abcde&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;|&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">char&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;|&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Step-by-Step Execution&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-execution">&lt;/span>
&lt;a href="#step-by-step-execution" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>The string is &lt;code>'a1b2c3d4e5'&lt;/code>.&lt;/li>
&lt;li>For each character:
&lt;ul>
&lt;li>If it&amp;rsquo;s in &lt;code>'abcde'&lt;/code> (i.e., a, b, c, d, e), print &lt;code>'|'&lt;/code> (no newline), and &lt;strong>continue&lt;/strong> (skip the rest).&lt;/li>
&lt;li>Otherwise, print the character (no newline).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>Let&amp;rsquo;s walk through each character:&lt;span class="hx-absolute -hx-mt-20" id="lets-walk-through-each-character">&lt;/span>
&lt;a href="#lets-walk-through-each-character" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">char&lt;/th>
&lt;th style="text-align: left">in &amp;lsquo;abcde&amp;rsquo;?&lt;/th>
&lt;th style="text-align: left">Output so far&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">a&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;td style="text-align: left">`&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">1&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;td style="text-align: left">`&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">b&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;td style="text-align: left">`&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">2&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;td style="text-align: left">`&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">c&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;td style="text-align: left">`&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">3&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;td style="text-align: left">`&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">d&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;td style="text-align: left">`&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">4&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;td style="text-align: left">`&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">e&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;td style="text-align: left">`&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">5&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;td style="text-align: left">`&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>After the loop, &lt;code>print('|')&lt;/code> adds one more &lt;code>|&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Final output:&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>|1|2|3|4|5|&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>✅ Correct Option&lt;span class="hx-absolute -hx-mt-20" id="-correct-option">&lt;/span>
&lt;a href="#-correct-option" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="o">|&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="o">|&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>📝 Practice Questions&lt;span class="hx-absolute -hx-mt-20" id="-practice-questions">&lt;/span>
&lt;a href="#-practice-questions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>What would the output be if the input string was &lt;code>'x1y2z3'&lt;/code>?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> &lt;code>1|2|3|&lt;/code> (since only &amp;lsquo;y&amp;rsquo; and &amp;lsquo;z&amp;rsquo; are in &amp;lsquo;xyz&amp;rsquo;, so those get replaced by &amp;lsquo;|&amp;rsquo;)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What if you removed the &lt;code>continue&lt;/code> statement?
&lt;ul>
&lt;li>&lt;strong>A:&lt;/strong> It would print both &lt;code>|&lt;/code> and the letter (e.g., &lt;code>|a|b|c|d|e|12345|&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>🎉 &lt;strong>Great job! Now you know how to trace conditional logic in a Python loop!&lt;/strong>&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>6&lt;/strong>) Code-1 and Code-2 will return the same value.&lt;/p>
&lt;p>&lt;em>Code-1&lt;/em>:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">x_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">x_&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;em>Code-2&lt;/em>:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">x_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x_&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">x_&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>Options&lt;/strong>:&lt;/p>
&lt;p>True&lt;/p>
&lt;p>False&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s break it down step by step! 🧐&lt;/p>
&lt;h2>🚀 Code-1 Analysis&lt;span class="hx-absolute -hx-mt-20" id="-code-1-analysis">&lt;/span>
&lt;a href="#-code-1-analysis" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">x_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">x_&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>This code uses &lt;strong>tuple unpacking&lt;/strong>. In each loop:
&lt;ul>
&lt;li>&lt;code>x&lt;/code> becomes the old &lt;code>x_&lt;/code>&lt;/li>
&lt;li>&lt;code>x_&lt;/code> becomes the sum of old &lt;code>x&lt;/code> and &lt;code>x_&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>This is the classic way to generate Fibonacci numbers!&lt;/li>
&lt;li>After 10 iterations, &lt;code>x&lt;/code> will be the 10th Fibonacci number.&lt;/li>
&lt;/ul>
&lt;h2>🚦 Code-2 Analysis&lt;span class="hx-absolute -hx-mt-20" id="-code-2-analysis">&lt;/span>
&lt;a href="#-code-2-analysis" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">x_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x_&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">x_&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Here, the assignments are sequential:
&lt;ul>
&lt;li>First, &lt;code>x&lt;/code> is set to the current &lt;code>x_&lt;/code>&lt;/li>
&lt;li>Then, &lt;code>x_&lt;/code> is set to the new &lt;code>x&lt;/code> + current &lt;code>x_&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>This does &lt;strong>not&lt;/strong> generate the Fibonacci sequence correctly, because &lt;code>x&lt;/code> is updated before &lt;code>x_&lt;/code>, so the values are not in sync as in Code-1.&lt;/li>
&lt;/ul>
&lt;h2>🔍 Do They Return the Same Value?&lt;span class="hx-absolute -hx-mt-20" id="-do-they-return-the-same-value">&lt;/span>
&lt;a href="#-do-they-return-the-same-value" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Let&amp;rsquo;s see the output for both codes:&lt;/p>
&lt;h3>Code-1 Output:&lt;span class="hx-absolute -hx-mt-20" id="code-1-output">&lt;/span>
&lt;a href="#code-1-output" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Generates Fibonacci: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55&lt;/li>
&lt;li>After 10 loops, &lt;code>x = 55&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3>Code-2 Output:&lt;span class="hx-absolute -hx-mt-20" id="code-2-output">&lt;/span>
&lt;a href="#code-2-output" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Let&amp;rsquo;s trace a few steps:
&lt;ul>
&lt;li>i=0: x=1, x_=2&lt;/li>
&lt;li>i=1: x=2, x_=4&lt;/li>
&lt;li>i=2: x=4, x_=8&lt;/li>
&lt;li>i=3: x=8, x_=16&lt;/li>
&lt;li>&amp;hellip; (keeps doubling)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>After 10 loops, &lt;code>x = 1024&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2>📝 Final Answer&lt;span class="hx-absolute -hx-mt-20" id="-final-answer">&lt;/span>
&lt;a href="#-final-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;strong>Do they return the same value?&lt;/strong>&lt;/p>
&lt;p>&lt;strong>False&lt;/strong> ❌&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Code-1&lt;/strong> returns &lt;code>55&lt;/code>&lt;/li>
&lt;li>&lt;strong>Code-2&lt;/strong> returns &lt;code>1024&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3>🌟 Summary Table&lt;span class="hx-absolute -hx-mt-20" id="-summary-table">&lt;/span>
&lt;a href="#-summary-table" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Code&lt;/th>
&lt;th style="text-align: left">Output&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">Code-1&lt;/td>
&lt;td style="text-align: left">55&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">Code-2&lt;/td>
&lt;td style="text-align: left">1024&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>So, the correct answer is:
&lt;strong>False&lt;/strong> 🚫&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>7&lt;/strong>) You are an analyst in a Finance company. You are given a job to print the daily transaction in below format.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">country_code, currency_code, exchange_rate&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Select the options that prints transaction records as in the sample output for input given in the table below. Multiple options can be correct (MSQ).&lt;/p>
&lt;p>&lt;strong>Input&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Variable&lt;/th>
&lt;th style="text-align: left">Value&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">country_code&lt;/td>
&lt;td style="text-align: left">&amp;lsquo;IN&amp;rsquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">currency_code&lt;/td>
&lt;td style="text-align: left">&amp;lsquo;RS&amp;rsquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">exchange_rate&lt;/td>
&lt;td style="text-align: left">73.2272&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>Output&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">country_code, currency_code, exchange_rate&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>Options&lt;/strong>&lt;/p>
&lt;p>&lt;code>print(country_code, currency_code, exchange_rate, sep = &amp;quot;, &amp;quot;)&lt;/code>&lt;/p>
&lt;p>&lt;code>print(f&amp;quot;{country_code}, {currency_code}, {exchange_rate:2.2f}&amp;quot;)&lt;/code>&lt;/p>
&lt;p>&lt;code>print(&amp;quot;{}, {}, {:2.2f}&amp;quot;.format(country_code, currency_code, exchange_rate))&lt;/code>&lt;/p>
&lt;p>&lt;code>print(&amp;quot;{0}, {1}, {2:2.2f}&amp;quot;.format(country_code, currency_code, exchange_rate))&lt;/code>&lt;/p>
&lt;p>&lt;code>print(&amp;quot;{a}, {b}, {c:2.2f}&amp;quot;.format(a = country_code, b = currency_code, c = exchange_rate))&lt;/code>&lt;/p>
&lt;p>&lt;code>print(&amp;quot;%s, %s, %2.2f&amp;quot;%(country_code, currency_code, exchange_rate))&lt;/code>&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Based on the analysis of the options to print transaction records in the specified format (&lt;code>country_code, currency_code, exchange_rate&lt;/code>), here&amp;rsquo;s the breakdown:&lt;/p>
&lt;h3>📊 Input Data&lt;span class="hx-absolute -hx-mt-20" id="-input-data">&lt;/span>
&lt;a href="#-input-data" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;code>country_code = 'IN'&lt;/code>&lt;/li>
&lt;li>&lt;code>currency_code = 'RS'&lt;/code>&lt;/li>
&lt;li>&lt;code>exchange_rate = 73.2272&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3>✅ Correct Options&lt;span class="hx-absolute -hx-mt-20" id="-correct-options">&lt;/span>
&lt;a href="#-correct-options" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The following options &lt;strong>correctly&lt;/strong> print the transaction in the required format &lt;strong>with exact values&lt;/strong> (including preserving the float precision of &lt;code>73.2272&lt;/code>):&lt;/p>
&lt;ol>
&lt;li>&lt;strong>&lt;code>print(country_code, currency_code, exchange_rate, sep = &amp;quot;, &amp;quot;)&lt;/code>&lt;/strong>
Output: &lt;code>IN, RS, 73.2272&lt;/code>
✅ Uses &lt;code>sep=&amp;quot;, &amp;quot;&lt;/code> to separate values. Preserves full float precision.&lt;/li>
&lt;/ol>
&lt;h3>❌ Incorrect Options&lt;span class="hx-absolute -hx-mt-20" id="-incorrect-options">&lt;/span>
&lt;a href="#-incorrect-options" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The following options &lt;strong>incorrectly round&lt;/strong> &lt;code>exchange_rate&lt;/code> to &lt;code>73.23&lt;/code> (2 decimal places), altering the original value:&lt;/p>
&lt;ul>
&lt;li>&lt;code>print(f&amp;quot;{country_code}, {currency_code}, {exchange_rate:2.2f}&amp;quot;)&lt;/code> → &lt;code>IN, RS, 73.23&lt;/code>&lt;/li>
&lt;li>&lt;code>print(&amp;quot;{}, {}, {:2.2f}&amp;quot;.format(country_code, currency_code, exchange_rate))&lt;/code> → &lt;code>IN, RS, 73.23&lt;/code>&lt;/li>
&lt;li>&lt;code>print(&amp;quot;{0}, {1}, {2:2.2f}&amp;quot;.format(country_code, currency_code, exchange_rate))&lt;/code> → &lt;code>IN, RS, 73.23&lt;/code>&lt;/li>
&lt;li>&lt;code>print(&amp;quot;{a}, {b}, {c:2.2f}&amp;quot;.format(a=country_code, b=currency_code, c=exchange_rate))&lt;/code> → &lt;code>IN, RS, 73.23&lt;/code>&lt;/li>
&lt;li>&lt;code>print(&amp;quot;%s, %s, %2.2f&amp;quot;%(country_code, currency_code, exchange_rate))&lt;/code> → &lt;code>IN, RS, 73.23&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3>🧠 Why This Matters&lt;span class="hx-absolute -hx-mt-20" id="-why-this-matters">&lt;/span>
&lt;a href="#-why-this-matters" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Finance contexts require precision&lt;/strong>: Rounding exchange rates (e.g., &lt;code>73.2272&lt;/code> → &lt;code>73.23&lt;/code>) can cause calculation errors in transactions.&lt;/li>
&lt;li>&lt;strong>Problem requirement&lt;/strong>: The output must match the sample format &lt;strong>exactly&lt;/strong> with the given input values. The sample output (header) does not specify rounding, so values should be printed as-is.&lt;/li>
&lt;/ul>
&lt;h3>💡 Final Answer&lt;span class="hx-absolute -hx-mt-20" id="-final-answer">&lt;/span>
&lt;a href="#-final-answer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Only the first option is correct&lt;/strong>:
&lt;code>print(country_code, currency_code, exchange_rate, sep = &amp;quot;, &amp;quot;)&lt;/code>&lt;/p>
&lt;p>Output: &lt;code>IN, RS, 73.2272&lt;/code> (preserves original precision).&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>8&lt;/strong>) What is the output of the following snippet of code?&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;abcdefghijklmnopqrstuvwxyz&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">shift&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">word&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;python&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">encoded_word&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span> &lt;span class="c1"># there is no space between quotes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">char&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">word&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">shifted_index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">alpha&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">char&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">shift&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">26&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">encoded_char&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">alpha&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">shifted_index&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">encoded_word&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">encoded_char&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">encoded_word&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Options:&lt;/p>
&lt;p>&lt;code>stmydu&lt;/code>&lt;/p>
&lt;p>&lt;code>tcxlsr&lt;/code>&lt;/p>
&lt;p>&lt;code>veznut&lt;/code>&lt;/p>
&lt;p>&lt;code>udymts&lt;/code>&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s decode this step-by-step! 🔍
The code performs a &lt;strong>Caesar cipher&lt;/strong> with a shift of 5 on the word &amp;ldquo;python&amp;rdquo;.
Here&amp;rsquo;s how each letter transforms:&lt;/p>
&lt;h3>🔠 Letter-by-Letter Encoding:&lt;span class="hx-absolute -hx-mt-20" id="-letter-by-letter-encoding">&lt;/span>
&lt;a href="#-letter-by-letter-encoding" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>&lt;code>p&lt;/code>&lt;/strong> → Index in &lt;code>alpha&lt;/code> is 15
&lt;code>(15 + 5) % 26 = 20&lt;/code> → &lt;code>alpha = 'u'&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>y&lt;/code>&lt;/strong> → Index 24
&lt;code>(24 + 5) % 26 = 29 % 26 = 3&lt;/code> → &lt;code>alpha = 'd'&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>t&lt;/code>&lt;/strong> → Index 19
&lt;code>(19 + 5) % 26 = 24&lt;/code> → &lt;code>alpha = 'y'&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>h&lt;/code>&lt;/strong> → Index 7
&lt;code>(7 + 5) % 26 = 12&lt;/code> → &lt;code>alpha = 'm'&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>o&lt;/code>&lt;/strong> → Index 14
&lt;code>(14 + 5) % 26 = 19&lt;/code> → &lt;code>alpha = 't'&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>n&lt;/code>&lt;/strong> → Index 13
&lt;code>(13 + 5) % 26 = 18&lt;/code> → &lt;code>alpha = 's'&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3>🔐 Final Output:&lt;span class="hx-absolute -hx-mt-20" id="-final-output">&lt;/span>
&lt;a href="#-final-output" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Combining these: &lt;code>'u' + 'd' + 'y' + 'm' + 't' + 's' = &amp;quot;udymts&amp;quot;&lt;/code>&lt;/p>
&lt;h3>✅ Matching Option:&lt;span class="hx-absolute -hx-mt-20" id="-matching-option">&lt;/span>
&lt;a href="#-matching-option" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;code>udymts&lt;/code> → &lt;strong>Correct!&lt;/strong>&lt;/p>
&lt;h3>💡 Why Others Fail:&lt;span class="hx-absolute -hx-mt-20" id="-why-others-fail">&lt;/span>
&lt;a href="#-why-others-fail" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;code>stmydu&lt;/code> → Wrong shift direction/calculation&lt;/li>
&lt;li>&lt;code>tcxlsr&lt;/code> → Incorrect modulo handling&lt;/li>
&lt;li>&lt;code>veznut&lt;/code> → Miscalculated indices&lt;/li>
&lt;/ul>
&lt;p>The output is &lt;strong>&lt;code>udymts&lt;/code>&lt;/strong>! 🐍✨&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>9&lt;/strong>) How many times do the break statements get executed? It is a Numerical Type Question (NAT).&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>The &lt;code>break&lt;/code> statements in the code are executed &lt;strong>twice&lt;/strong>:&lt;/p>
&lt;h3>🔍 Step-by-Step Execution:&lt;span class="hx-absolute -hx-mt-20" id="-step-by-step-execution">&lt;/span>
&lt;a href="#-step-by-step-execution" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Outer loop starts&lt;/strong> (&lt;code>i=0&lt;/code>):
&lt;ul>
&lt;li>Enters inner loop (&lt;code>j=0&lt;/code>)&lt;/li>
&lt;li>&lt;strong>First &lt;code>break&lt;/code>&lt;/strong> executes, exiting inner loop immediately&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Outer loop continues&lt;/strong>:
&lt;ul>
&lt;li>&lt;strong>Second &lt;code>break&lt;/code>&lt;/strong> executes, exiting outer loop immediately&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Loop terminates&lt;/strong> without further iterations&lt;/li>
&lt;/ol>
&lt;h3>❌ Why Not More?&lt;span class="hx-absolute -hx-mt-20" id="-why-not-more">&lt;/span>
&lt;a href="#-why-not-more" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>The &lt;code>break&lt;/code> in the inner loop runs &lt;strong>once&lt;/strong> (only for &lt;code>j=0&lt;/code>)&lt;/li>
&lt;li>The &lt;code>break&lt;/code> in the outer loop runs &lt;strong>once&lt;/strong> (only for &lt;code>i=0&lt;/code>)&lt;/li>
&lt;li>Total: &lt;strong>2 executions&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>💡 Key Insight:&lt;span class="hx-absolute -hx-mt-20" id="-key-insight">&lt;/span>
&lt;a href="#-key-insight" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;code>break&lt;/code> exits only the &lt;strong>innermost loop&lt;/strong> it&amp;rsquo;s in&lt;/li>
&lt;li>After inner &lt;code>break&lt;/code>, outer loop continues until it hits its own &lt;code>break&lt;/code>&lt;/li>
&lt;li>No other iterations occur because both loops terminate early&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Final answer: 2&lt;/strong> ✅&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>10&lt;/strong>) What will be output if a negative value is given as input ?&lt;/p>
&lt;p>Number of digits in &lt;code>x&lt;/code>&lt;/p>
&lt;p>Number of digits in &lt;code>x&lt;/code> -1&lt;/p>
&lt;p>Number of digits in &lt;code>x&lt;/code> +1&lt;/p>
&lt;p>Infinite loop&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>If a negative value is given as input, the number of digits in x plus 1 will be output.&lt;/p>
&lt;p>&lt;strong>Explanation&lt;/strong>:&lt;/p>
&lt;p>For a negative integer, str(x) includes the minus sign, so len(str(x)) counts the digits plus 1 (for the - sign).&lt;/p>
&lt;p>&lt;strong>Correct answer&lt;/strong>:&lt;/p>
&lt;p>Number of digits in x + 1 ✅&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;h3>Common data for the next 2 questions 🔗&lt;span class="hx-absolute -hx-mt-20" id="common-data-for-the-next-2-questions-">&lt;/span>
&lt;a href="#common-data-for-the-next-2-questions-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Consider the following snippet of code.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">word&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">valid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">word&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">char&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">word&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">char&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="s1">&amp;#39;aeiou&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">valid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">valid&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="11">
&lt;li>Select the inputs for which the output will be &lt;code>True&lt;/code>.&lt;/li>
&lt;/ol>
&lt;p>Options:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">abet&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">enamel&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">eatery&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">onetime&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;p>&lt;strong>12&lt;/strong>) Assume that a ten letter word is passed as input to the code. If the output is True, then which of the following statements about the input word are true?&lt;/p>
&lt;p>Options:&lt;/p>
&lt;p>The word has exactly five vowels.&lt;/p>
&lt;p>The word has have at least five vowels.&lt;/p>
&lt;p>The letters at even indices are vowels. Assume that we use zero-based indexing.&lt;/p>
&lt;p>Every vowel in the word appears only at even indices. Assume that we use zero-based indexing.&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;h3>📝 Answer for Question 11&lt;span class="hx-absolute -hx-mt-20" id="-answer-for-question-11">&lt;/span>
&lt;a href="#-answer-for-question-11" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The code checks if &lt;strong>all characters at even indices (0-based)&lt;/strong> are vowels (&lt;code>'aeiou'&lt;/code>). For &lt;code>valid=True&lt;/code>, every character at positions &lt;code>0, 2, 4, ...&lt;/code> must be a vowel.&lt;/p>
&lt;p>Based on testing the inputs:&lt;/p>
&lt;ul>
&lt;li>&lt;code>'abet'&lt;/code> → &lt;strong>True&lt;/strong> ✅
&lt;ul>
&lt;li>Positions: &lt;code>0='a' (vowel)&lt;/code>, &lt;code>2='e' (vowel)&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>'enamel'&lt;/code> → &lt;strong>True&lt;/strong> ✅
&lt;ul>
&lt;li>Positions: &lt;code>0='e' (vowel)&lt;/code>, &lt;code>2='a' (vowel)&lt;/code>, &lt;code>4='e' (vowel)&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>'eatery'&lt;/code> → &lt;strong>False&lt;/strong> ❌
&lt;ul>
&lt;li>Position &lt;code>4='r' (consonant)&lt;/code> violates the condition&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>'onetime'&lt;/code> → &lt;strong>True&lt;/strong> ✅
&lt;ul>
&lt;li>Positions: &lt;code>0='o' (vowel)&lt;/code>, &lt;code>2='e' (vowel)&lt;/code>, &lt;code>4='i' (vowel)&lt;/code>, &lt;code>6='e' (vowel)&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Correct inputs&lt;/strong>: &lt;code>abet&lt;/code>, &lt;code>enamel&lt;/code>, &lt;code>onetime&lt;/code>&lt;/p>
&lt;h3>📝 Answer for Question 12&lt;span class="hx-absolute -hx-mt-20" id="-answer-for-question-12">&lt;/span>
&lt;a href="#-answer-for-question-12" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>For a &lt;strong>10-letter word&lt;/strong> where &lt;code>valid=True&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>Even indices (0-based): &lt;code>0, 2, 4, 6, 8&lt;/code> must be vowels.&lt;/li>
&lt;li>Odd indices (&lt;code>1, 3, 5, 7, 9&lt;/code>) can be &lt;strong>any character&lt;/strong> (vowel/consonant).&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Analysis of options&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>❌ &lt;strong>Exactly five vowels&lt;/strong>
&lt;ul>
&lt;li>Incorrect: The word can have &lt;strong>&amp;gt;5 vowels&lt;/strong> (e.g., if odd indices are vowels too).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>✅ &lt;strong>At least five vowels&lt;/strong>
&lt;ul>
&lt;li>Correct: The 5 even-index positions &lt;strong>must be vowels&lt;/strong>, so minimum 5 vowels.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>✅ &lt;strong>Letters at even indices are vowels&lt;/strong>
&lt;ul>
&lt;li>Correct: This is the &lt;strong>core condition&lt;/strong> for &lt;code>valid=True&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>❌ &lt;strong>Every vowel appears only at even indices&lt;/strong>
&lt;ul>
&lt;li>Incorrect: Vowels &lt;strong>can appear at odd indices&lt;/strong> (e.g., &lt;code>'aaaaaaaaaa'&lt;/code> returns &lt;code>True&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Correct statements&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>The word has at least five vowels.&lt;/li>
&lt;li>The letters at even indices are vowels.&lt;/li>
&lt;/ul>
&lt;h3>💡 Key Insight&lt;span class="hx-absolute -hx-mt-20" id="-key-insight">&lt;/span>
&lt;a href="#-key-insight" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The code &lt;strong>only cares about even indices&lt;/strong>—odd indices are irrelevant to the check. A valid word must have vowels at all even positions but can have any characters (including vowels) elsewhere.&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>13&lt;/strong>) Select all the snippets that prints the sum of the first &lt;code>n&lt;/code> odd numbers starting from 1(including). Assume &lt;code>n&lt;/code> is a positive integer and is already defined.&lt;/p>
&lt;p>Example n = 5 , output: 1+3+5+7+9 = 25&lt;/p>
&lt;h5>Options&lt;span class="hx-absolute -hx-mt-20" id="options">&lt;/span>
&lt;a href="#options" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="n">i&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="n">i&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="n">i&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s analyze each snippet to see if it prints the sum of the first &lt;code>n&lt;/code> odd numbers starting from 1 (i.e., &lt;code>1 + 3 + 5 + ...&lt;/code>).&lt;/p>
&lt;h3>🔍 Option 1&lt;span class="hx-absolute -hx-mt-20" id="-option-1">&lt;/span>
&lt;a href="#-option-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>For &lt;code>i&lt;/code> from &lt;code>0&lt;/code> to &lt;code>n-1&lt;/code>, adds &lt;code>2*i+1&lt;/code> (which generates 1, 3, 5, &amp;hellip;)&lt;/li>
&lt;li>✅ &lt;strong>Correct!&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>🔍 Option 2&lt;span class="hx-absolute -hx-mt-20" id="-option-2">&lt;/span>
&lt;a href="#-option-2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>For &lt;code>i&lt;/code> from &lt;code>1&lt;/code> to &lt;code>n-1&lt;/code>, adds &lt;code>2*i+1&lt;/code> (starts from 3, skips 1)&lt;/li>
&lt;li>❌ &lt;strong>Incorrect!&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>🔍 Option 3&lt;span class="hx-absolute -hx-mt-20" id="-option-3">&lt;/span>
&lt;a href="#-option-3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Adds &lt;code>2*i+1&lt;/code> for &lt;code>i&lt;/code> from 1 to &lt;code>n-1&lt;/code> (skips 1), then adds 1 at the end.&lt;/li>
&lt;li>For &lt;code>n=5&lt;/code>: Adds 3,5,7,9 (i=1 to 4), then adds 1 → 3+5+7+9+1=25&lt;/li>
&lt;li>✅ &lt;strong>Correct!&lt;/strong> (though a bit hacky)&lt;/li>
&lt;/ul>
&lt;h3>🔍 Option 4&lt;span class="hx-absolute -hx-mt-20" id="-option-4">&lt;/span>
&lt;a href="#-option-4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Only adds when &lt;code>i&lt;/code> is odd, so skips even &lt;code>i&lt;/code> (skips some numbers)&lt;/li>
&lt;li>❌ &lt;strong>Incorrect!&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>🔍 Option 5&lt;span class="hx-absolute -hx-mt-20" id="-option-5">&lt;/span>
&lt;a href="#-option-5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="n">i&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Loops from 0 to &lt;code>2*n&lt;/code>, adds all odd &lt;code>i&lt;/code> in that range.&lt;/li>
&lt;li>For n=5: i=1,3,5,7,9 → 1+3+5+7+9=25&lt;/li>
&lt;li>✅ &lt;strong>Correct!&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>🔍 Option 6&lt;span class="hx-absolute -hx-mt-20" id="-option-6">&lt;/span>
&lt;a href="#-option-6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="n">i&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>i&lt;/code> is incremented only inside the &lt;code>if&lt;/code>, so when &lt;code>i&lt;/code> is even, infinite loop!&lt;/li>
&lt;li>❌ &lt;strong>Incorrect!&lt;/strong> (infinite loop for even &lt;code>i&lt;/code>)&lt;/li>
&lt;/ul>
&lt;h3>🔍 Option 7&lt;span class="hx-absolute -hx-mt-20" id="-option-7">&lt;/span>
&lt;a href="#-option-7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="n">i&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>This is identical to Option 6 (likely a duplicate), so infinite loop.&lt;/li>
&lt;li>❌ &lt;strong>Incorrect!&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2>✅ &lt;strong>Correct Options:&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-correct-options">&lt;/span>
&lt;a href="#-correct-options" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;strong>Option 1&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Option 3&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Option 5&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>🎉 &lt;strong>Summary Table&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-summary-table">&lt;/span>
&lt;a href="#-summary-table" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Option&lt;/th>
&lt;th style="text-align: left">Correct?&lt;/th>
&lt;th style="text-align: left">Reason&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">1&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">Classic odd numbers sum&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">2&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Skips first odd (1)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">3&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">Adds 1 at the end to compensate&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">4&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Skips even indices&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">5&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;td style="text-align: left">Sums all odd numbers up to 2n-1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">6&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Infinite loop&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">7&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;td style="text-align: left">Infinite loop&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>So, select: Option 1, Option 3, and Option 5!&lt;/strong> 🎯✨&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>14&lt;/strong>) Select all the snippets that prints the sum of the first &lt;code>n&lt;/code> odd numbers starting from 1(including). Assume &lt;code>n&lt;/code> is a positive integer and is already defined.&lt;/p>
&lt;p>Example n = 5 , output: 1+3+5+7+9 = 25&lt;/p>
&lt;h5>Options&lt;span class="hx-absolute -hx-mt-20" id="options">&lt;/span>
&lt;a href="#options" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">-=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">-=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s analyze each snippet&amp;rsquo;s behavior based on the sum of the first &lt;code>n&lt;/code> odd numbers (starting from 1). For &lt;code>n=5&lt;/code>, the sum should be 25.&lt;/p>
&lt;h3>Snippet 1&lt;span class="hx-absolute -hx-mt-20" id="snippet-1">&lt;/span>
&lt;a href="#snippet-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Adds odd numbers starting from 1 (&lt;code>2*0+1=1&lt;/code>) up to the nth odd number.&lt;/li>
&lt;li>Output for n=5: 25&lt;/li>
&lt;li>✅ Correct&lt;/li>
&lt;/ul>
&lt;h3>Snippet 2&lt;span class="hx-absolute -hx-mt-20" id="snippet-2">&lt;/span>
&lt;a href="#snippet-2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Adds odd numbers starting from 1 (&lt;code>2*1-1=1&lt;/code>) to nth odd number.&lt;/li>
&lt;li>Output for n=5: 25&lt;/li>
&lt;li>✅ Correct&lt;/li>
&lt;/ul>
&lt;h3>Snippet 3&lt;span class="hx-absolute -hx-mt-20" id="snippet-3">&lt;/span>
&lt;a href="#snippet-3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Adds odd numbers starting from 3 (&lt;code>2*1+1=3&lt;/code>) up to &lt;code>(n-1)&lt;/code>th odd number, then adds 1 at the end.&lt;/li>
&lt;li>For n=5: sums 3,5,7,9 + 1 = 25&lt;/li>
&lt;li>✅ Correct (though a bit indirect)&lt;/li>
&lt;/ul>
&lt;h3>Snippet 4&lt;span class="hx-absolute -hx-mt-20" id="snippet-4">&lt;/span>
&lt;a href="#snippet-4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Adds odd numbers starting from 3, but only &lt;code>(n-1)&lt;/code> terms.&lt;/li>
&lt;li>For n=5: sums 3+5+7+9 = 24&lt;/li>
&lt;li>❌ Incorrect&lt;/li>
&lt;/ul>
&lt;h3>Snippet 5&lt;span class="hx-absolute -hx-mt-20" id="snippet-5">&lt;/span>
&lt;a href="#snippet-5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">-=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Iterates &lt;code>i&lt;/code> from -1 down to &lt;code>-n&lt;/code> (inclusive), subtracts &lt;code>2*i+1&lt;/code> each time.&lt;/li>
&lt;li>For n=5, this correctly sums first n odd numbers (25).&lt;/li>
&lt;li>✅ Correct (clever use of negative indices)&lt;/li>
&lt;/ul>
&lt;h3>Snippet 6&lt;span class="hx-absolute -hx-mt-20" id="snippet-6">&lt;/span>
&lt;a href="#snippet-6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">-=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Iterates from -1 to &lt;code>-n+1&lt;/code> (exclusive), so fewer terms.&lt;/li>
&lt;li>For n=5, output is 0 (no terms summed).&lt;/li>
&lt;li>❌ Incorrect&lt;/li>
&lt;/ul>
&lt;h2>✅ &lt;strong>Correct snippets:&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-correct-snippets">&lt;/span>
&lt;a href="#-correct-snippets" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>Snippet 1&lt;/li>
&lt;li>Snippet 2&lt;/li>
&lt;li>Snippet 3&lt;/li>
&lt;li>Snippet 5&lt;/li>
&lt;/ul>
&lt;h3>Summary Table&lt;span class="hx-absolute -hx-mt-20" id="summary-table">&lt;/span>
&lt;a href="#summary-table" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Snippet&lt;/th>
&lt;th style="text-align: left">Output for n=5&lt;/th>
&lt;th style="text-align: left">Correct?&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">1&lt;/td>
&lt;td style="text-align: left">25&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">2&lt;/td>
&lt;td style="text-align: left">25&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">3&lt;/td>
&lt;td style="text-align: left">25&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">4&lt;/td>
&lt;td style="text-align: left">24&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">5&lt;/td>
&lt;td style="text-align: left">25&lt;/td>
&lt;td style="text-align: left">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">6&lt;/td>
&lt;td style="text-align: left">0&lt;/td>
&lt;td style="text-align: left">❌&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>Final answer:&lt;/strong> Snippets 1, 2, 3, and 5 print the correct sum of the first &lt;code>n&lt;/code> odd numbers.&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>15&lt;/strong>) Consider the following snippet of code.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">value&lt;/span>&lt;span class="o">+=&lt;/span> &lt;span class="n">num&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Select all the data processing pattern(s) that the code implements. (MSQ)&lt;/p>
&lt;p>Aggregation&lt;/p>
&lt;p>Filtering&lt;/p>
&lt;p>Mapping&lt;/p>
&lt;p>None of the above&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Based on the code snippet, let&amp;rsquo;s analyze the data processing patterns:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># Filtering condition&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">value&lt;/span>&lt;span class="o">+=&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="c1"># Aggregation operation&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>🔍 Pattern Analysis:&lt;span class="hx-absolute -hx-mt-20" id="-pattern-analysis">&lt;/span>
&lt;a href="#-pattern-analysis" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Filtering&lt;/strong> ✅
&lt;ul>
&lt;li>The condition &lt;code>if len(str(num))&amp;lt;2&lt;/code> acts as a &lt;strong>filter&lt;/strong> that only processes single-digit numbers (0-9).&lt;/li>
&lt;li>Numbers with 2+ digits are excluded from further processing.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Aggregation&lt;/strong> ✅
&lt;ul>
&lt;li>The operation &lt;code>value += num&lt;/code> &lt;strong>aggregates&lt;/strong> (sums) the filtered values into a cumulative total.&lt;/li>
&lt;li>This is a classic reduction/aggregation pattern.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Mapping&lt;/strong> ❌
&lt;ul>
&lt;li>There&amp;rsquo;s no transformation of input values (like converting to another form).&lt;/li>
&lt;li>The numbers are used as-is after filtering.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>📝 Conclusion:&lt;span class="hx-absolute -hx-mt-20" id="-conclusion">&lt;/span>
&lt;a href="#-conclusion" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The code implements &lt;strong>two data processing patterns&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Filtering&lt;/strong> (selecting single-digit numbers)&lt;/li>
&lt;li>&lt;strong>Aggregation&lt;/strong> (summing the selected values)&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Correct options&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Aggregation&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Filtering&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>💡 Key Insight:&lt;span class="hx-absolute -hx-mt-20" id="-key-insight">&lt;/span>
&lt;a href="#-key-insight" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Filtering&lt;/strong> happens at the condition check (&lt;code>if len(str(num))&amp;lt;2&lt;/code>).&lt;/li>
&lt;li>&lt;strong>Aggregation&lt;/strong> occurs during the summation (&lt;code>value += num&lt;/code>).&lt;/li>
&lt;li>No mapping is applied since values aren&amp;rsquo;t transformed before aggregation.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>16&lt;/strong>) Consider the following snippet of code.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sentence&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">word&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">words&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">word&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">word&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Select all the data processing pattern(s) that the code implements. (MSQ)&lt;/p>
&lt;p>Aggregation&lt;/p>
&lt;p>Filtering&lt;/p>
&lt;p>Mapping&lt;/p>
&lt;p>None of the above&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Based on the provided code snippet:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sentence&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">word&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">words&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="c1"># Should be sentence.split(), assuming typo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">word&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># Filtering condition&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">word&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Transformation operation&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>🔍 Pattern Analysis:&lt;span class="hx-absolute -hx-mt-20" id="-pattern-analysis">&lt;/span>
&lt;a href="#-pattern-analysis" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Filtering&lt;/strong> ✅
&lt;ul>
&lt;li>The condition &lt;code>if 'a' in word&lt;/code> acts as a &lt;strong>filter&lt;/strong> that only processes words containing the letter &amp;lsquo;a&amp;rsquo;.&lt;/li>
&lt;li>Words without &amp;lsquo;a&amp;rsquo; are excluded from further processing.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Mapping&lt;/strong> ✅
&lt;ul>
&lt;li>The operation &lt;code>word*2&lt;/code> &lt;strong>transforms&lt;/strong> each filtered word by duplicating it.&lt;/li>
&lt;li>This is a classic mapping operation where each input is converted to a new output form.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Aggregation&lt;/strong> ❌
&lt;ul>
&lt;li>There&amp;rsquo;s no combining of values into a cumulative result (e.g., no summing, averaging, or collecting).&lt;/li>
&lt;li>Each word is processed individually and printed separately.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>📝 Conclusion:&lt;span class="hx-absolute -hx-mt-20" id="-conclusion">&lt;/span>
&lt;a href="#-conclusion" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The code implements &lt;strong>two data processing patterns&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Filtering&lt;/strong> (selecting words with &amp;lsquo;a&amp;rsquo;)&lt;/li>
&lt;li>&lt;strong>Mapping&lt;/strong> (transforming words to their duplicated version)&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Correct options&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Filtering&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Mapping&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>⚠️ Note on Code Error:&lt;span class="hx-absolute -hx-mt-20" id="-note-on-code-error">&lt;/span>
&lt;a href="#-note-on-code-error" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>The code contains a typo: &lt;code>words.split()&lt;/code> should be &lt;code>sentence.split()&lt;/code>.&lt;/li>
&lt;li>This doesn&amp;rsquo;t affect the pattern analysis but would cause a runtime error in practice.&lt;/li>
&lt;/ul>
&lt;h3>💡 Key Insight:&lt;span class="hx-absolute -hx-mt-20" id="-key-insight">&lt;/span>
&lt;a href="#-key-insight" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Filtering&lt;/strong> occurs at the condition check (&lt;code>if 'a' in word&lt;/code>).&lt;/li>
&lt;li>&lt;strong>Mapping&lt;/strong> happens during the transformation (&lt;code>word*2&lt;/code>).&lt;/li>
&lt;li>No aggregation is present since results aren&amp;rsquo;t combined into a summary value.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>17&lt;/strong>) Consider the following snippet of code.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Select all the data processing pattern(s) that the code implements. (MSQ)&lt;/p>
&lt;p>Aggregation&lt;/p>
&lt;p>Filtering&lt;/p>
&lt;p>Mapping&lt;/p>
&lt;p>None of the above&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Based on the provided code snippet:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Transformation operation&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>🔍 Pattern Analysis:&lt;span class="hx-absolute -hx-mt-20" id="-pattern-analysis">&lt;/span>
&lt;a href="#-pattern-analysis" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Mapping&lt;/strong> ✅
&lt;ul>
&lt;li>Each input value is &lt;strong>transformed&lt;/strong> by multiplying by 2 (&lt;code>int(input())*2&lt;/code>).&lt;/li>
&lt;li>This is a classic mapping operation where each input is converted to a new output value.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Filtering&lt;/strong> ❌
&lt;ul>
&lt;li>No condition is applied to exclude any input values.&lt;/li>
&lt;li>Every input is processed and transformed.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Aggregation&lt;/strong> ❌
&lt;ul>
&lt;li>There&amp;rsquo;s no combination of values into a cumulative result (e.g., no summing or averaging).&lt;/li>
&lt;li>Each transformed value is printed immediately without accumulation.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>📝 Conclusion:&lt;span class="hx-absolute -hx-mt-20" id="-conclusion">&lt;/span>
&lt;a href="#-conclusion" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The code implements &lt;strong>one data processing pattern&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Mapping&lt;/strong> (transforming each input value by doubling it)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Correct option&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Mapping&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>💡 Key Insight:&lt;span class="hx-absolute -hx-mt-20" id="-key-insight">&lt;/span>
&lt;a href="#-key-insight" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Mapping&lt;/strong> occurs through the arithmetic operation &lt;code>*2&lt;/code>, which transforms each input value.&lt;/li>
&lt;li>No filtering (all inputs are processed) or aggregation (no summary of results).&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>18&lt;/strong>) Consider the following snippet of code.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Select all the data processing pattern(s) that the code implements. (MSQ)&lt;/p>
&lt;p>Aggregation&lt;/p>
&lt;p>Filtering&lt;/p>
&lt;p>Mapping&lt;/p>
&lt;p>None of the above&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Based on the provided code snippet:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># Branching condition&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Transformation A&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Transformation B&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>🔍 Pattern Analysis:&lt;span class="hx-absolute -hx-mt-20" id="-pattern-analysis">&lt;/span>
&lt;a href="#-pattern-analysis" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Mapping&lt;/strong> ✅
&lt;ul>
&lt;li>Every input value is &lt;strong>transformed&lt;/strong> into an output value:
&lt;ul>
&lt;li>Single-digit numbers → &lt;code>num*2&lt;/code>&lt;/li>
&lt;li>Multi-digit numbers → &lt;code>num*3&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>This is a classic &lt;strong>mapping&lt;/strong> operation where each input is converted to a new output based on rules.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Filtering&lt;/strong> ❌
&lt;ul>
&lt;li>No values are excluded from processing. All inputs are transformed and printed.&lt;/li>
&lt;li>The condition only determines &lt;em>how&lt;/em> to transform, not &lt;em>whether&lt;/em> to process.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Aggregation&lt;/strong> ❌
&lt;ul>
&lt;li>There&amp;rsquo;s no combination of values into a cumulative result (e.g., no summing or collecting).&lt;/li>
&lt;li>Each transformed value is printed immediately.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>📝 Conclusion:&lt;span class="hx-absolute -hx-mt-20" id="-conclusion">&lt;/span>
&lt;a href="#-conclusion" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The code implements &lt;strong>one data processing pattern&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Mapping&lt;/strong> (transforming each input value based on digit length)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Correct option&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Mapping&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>💡 Key Insight:&lt;span class="hx-absolute -hx-mt-20" id="-key-insight">&lt;/span>
&lt;a href="#-key-insight" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Mapping&lt;/strong> occurs through the arithmetic operations (&lt;code>*2&lt;/code> or &lt;code>*3&lt;/code>), which transform inputs based on a condition.&lt;/li>
&lt;li>No filtering (all inputs are processed) or aggregation (no summary of results).&lt;/li>
&lt;/ul>
&lt;h3>⚠️ Note:&lt;span class="hx-absolute -hx-mt-20" id="-note">&lt;/span>
&lt;a href="#-note" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>The condition (&lt;code>len(str(num))&amp;lt;2&lt;/code>) acts as a &lt;strong>branching logic&lt;/strong> for mapping rules, not as a filter since no data is excluded.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>19&lt;/strong>) Consider the following snippet of code.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Select all the data processing pattern(s) that the code implements. (MSQ)&lt;/p>
&lt;p>Aggregation&lt;/p>
&lt;p>Filtering&lt;/p>
&lt;p>Mapping&lt;/p>
&lt;p>None of the above&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Based on the code snippet:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># Filtering condition&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="c1"># Selection operation&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>🔍 Pattern Analysis:&lt;span class="hx-absolute -hx-mt-20" id="-pattern-analysis">&lt;/span>
&lt;a href="#-pattern-analysis" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Filtering&lt;/strong> ✅
&lt;ul>
&lt;li>The condition &lt;code>if len(str(num))&amp;lt;2&lt;/code> acts as a &lt;strong>filter&lt;/strong> that only considers single-digit numbers (0-9).&lt;/li>
&lt;li>Multi-digit numbers are ignored and do not affect the result.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>No Aggregation&lt;/strong> ❌
&lt;ul>
&lt;li>There&amp;rsquo;s no combination of values (e.g., summing or averaging).&lt;/li>
&lt;li>Only the &lt;strong>last&lt;/strong> single-digit number is stored, not a cumulative result.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>No Mapping&lt;/strong> ❌
&lt;ul>
&lt;li>Values aren&amp;rsquo;t transformed; the original &lt;code>num&lt;/code> is stored as-is.&lt;/li>
&lt;li>The operation &lt;code>value = num&lt;/code> is assignment, not transformation.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>📝 Conclusion:&lt;span class="hx-absolute -hx-mt-20" id="-conclusion">&lt;/span>
&lt;a href="#-conclusion" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The code implements &lt;strong>one data processing pattern&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Filtering&lt;/strong> (selecting single-digit numbers from the input stream)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Correct option&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Filtering&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>💡 Key Insight:&lt;span class="hx-absolute -hx-mt-20" id="-key-insight">&lt;/span>
&lt;a href="#-key-insight" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>The loop filters inputs to only consider single-digit numbers.&lt;/li>
&lt;li>The variable &lt;code>value&lt;/code> is &lt;strong>overwritten&lt;/strong> (not aggregated) with the latest qualifying number.&lt;/li>
&lt;li>The final output is the &lt;strong>last single-digit number encountered&lt;/strong>, not a summary of all such numbers.&lt;/li>
&lt;/ul>
&lt;h3>⚠️ Special Note:&lt;span class="hx-absolute -hx-mt-20" id="-special-note">&lt;/span>
&lt;a href="#-special-note" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>If no single-digit numbers are input, &lt;code>value&lt;/code> remains &lt;code>None&lt;/code> (output: &lt;code>None&lt;/code>).&lt;/li>
&lt;li>This is &lt;strong>not aggregation&lt;/strong> because:
&lt;ul>
&lt;li>No accumulation of values (e.g., summing)&lt;/li>
&lt;li>No reduction to a summary statistic&lt;/li>
&lt;li>Only the last valid value is retained&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Final answer: Filtering&lt;/strong> ✅&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>20&lt;/strong>) Consider the following snippet of code.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Select all the data processing pattern(s) that the code implements. (MSQ)&lt;/p>
&lt;p>Aggregation&lt;/p>
&lt;p>Filtering&lt;/p>
&lt;p>Mapping&lt;/p>
&lt;p>None of the above&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Based on the provided code snippet:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>🔍 Pattern Analysis:&lt;span class="hx-absolute -hx-mt-20" id="-pattern-analysis">&lt;/span>
&lt;a href="#-pattern-analysis" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Aggregation&lt;/strong> ✅
&lt;ul>
&lt;li>The code &lt;strong>reduces&lt;/strong> multiple input values into a single result (the minimum value).&lt;/li>
&lt;li>It combines all inputs through comparison operations to produce a summary value.&lt;/li>
&lt;li>This is a classic example of aggregation (specifically, a reduction operation).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Filtering&lt;/strong> ❌
&lt;ul>
&lt;li>No values are excluded based on conditions. All inputs are processed.&lt;/li>
&lt;li>The condition &lt;code>num &amp;lt; value&lt;/code> is for comparison, not exclusion.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Mapping&lt;/strong> ❌
&lt;ul>
&lt;li>Values aren&amp;rsquo;t transformed; they&amp;rsquo;re only compared.&lt;/li>
&lt;li>The original &lt;code>num&lt;/code> values are used without modification.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>📝 Conclusion:&lt;span class="hx-absolute -hx-mt-20" id="-conclusion">&lt;/span>
&lt;a href="#-conclusion" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The code implements &lt;strong>one data processing pattern&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Aggregation&lt;/strong> (reducing all inputs to a single minimum value)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Correct option&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Aggregation&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>💡 Key Insight:&lt;span class="hx-absolute -hx-mt-20" id="-key-insight">&lt;/span>
&lt;a href="#-key-insight" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>The algorithm maintains a running minimum (&lt;code>value&lt;/code>), updating it when a smaller number is found.&lt;/li>
&lt;li>This follows the &lt;strong>reduction&lt;/strong> pattern in data processing, where a dataset is condensed to a single value.&lt;/li>
&lt;li>No filtering (all inputs are processed) or mapping (no value transformations) occurs.&lt;/li>
&lt;/ul>
&lt;h3>⚠️ Special Note:&lt;span class="hx-absolute -hx-mt-20" id="-special-note">&lt;/span>
&lt;a href="#-special-note" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>The initial &lt;code>value = None&lt;/code> handles the first input specially.&lt;/li>
&lt;li>For &lt;code>n=0&lt;/code>, the output is &lt;code>None&lt;/code> (no aggregation possible).&lt;/li>
&lt;li>For &lt;code>n&amp;gt;0&lt;/code>, the output is the smallest number among the inputs.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Final answer: Aggregation&lt;/strong> ✅&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>21&lt;/strong>) Consider the following snippet of code.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Select all the data processing pattern(s) that the code implements. (MSQ)&lt;/p>
&lt;p>Aggregation&lt;/p>
&lt;p>Filtering&lt;/p>
&lt;p>Mapping&lt;/p>
&lt;p>None of the above&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Based on the provided code snippet:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="c1"># Transformation operation&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="c1"># Aggregation operation&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>🔍 Pattern Analysis:&lt;span class="hx-absolute -hx-mt-20" id="-pattern-analysis">&lt;/span>
&lt;a href="#-pattern-analysis" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Mapping&lt;/strong> ✅
&lt;ul>
&lt;li>Each input string is &lt;strong>transformed&lt;/strong> into a numerical value: &lt;code>len(input())/2&lt;/code> (half the string length).&lt;/li>
&lt;li>This is a classic mapping operation where raw input is converted to a new derived value.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Aggregation&lt;/strong> ✅
&lt;ul>
&lt;li>The transformed values are &lt;strong>reduced&lt;/strong> to a single result (the minimum value found).&lt;/li>
&lt;li>The comparison &lt;code>num &amp;lt; value&lt;/code> and assignment &lt;code>value = num&lt;/code> implement a reduction to find the smallest transformed value.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Filtering&lt;/strong> ❌
&lt;ul>
&lt;li>No values are excluded from processing. All inputs are transformed and considered in the aggregation.&lt;/li>
&lt;li>The conditionals only compare values, they don&amp;rsquo;t skip any inputs.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>📝 Conclusion:&lt;span class="hx-absolute -hx-mt-20" id="-conclusion">&lt;/span>
&lt;a href="#-conclusion" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The code implements &lt;strong>two data processing patterns&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Mapping&lt;/strong> (transforming string inputs to numerical values)&lt;/li>
&lt;li>&lt;strong>Aggregation&lt;/strong> (reducing multiple values to a single minimum result)&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Correct options&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Mapping&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Aggregation&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>💡 Key Insight:&lt;span class="hx-absolute -hx-mt-20" id="-key-insight">&lt;/span>
&lt;a href="#-key-insight" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Mapping&lt;/strong> occurs through &lt;code>len(input())/2&lt;/code>, converting each string to a float.&lt;/li>
&lt;li>&lt;strong>Aggregation&lt;/strong> happens through the min-finding logic (&lt;code>if value is None&lt;/code> and &lt;code>elif num &amp;lt; value&lt;/code>).&lt;/li>
&lt;li>No filtering is applied since all inputs are processed fully.&lt;/li>
&lt;/ul>
&lt;h3>⚠️ Special Note:&lt;span class="hx-absolute -hx-mt-20" id="-special-note">&lt;/span>
&lt;a href="#-special-note" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>The aggregation specifically finds the &lt;strong>minimum&lt;/strong> value among the transformed inputs.&lt;/li>
&lt;li>For &lt;code>n=0&lt;/code>, output is &lt;code>None&lt;/code> (no valid aggregation).&lt;/li>
&lt;li>For &lt;code>n&amp;gt;0&lt;/code>, output is the smallest &lt;code>len(string)/2&lt;/code> value among the inputs.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Final answer: Mapping and Aggregation&lt;/strong> ✅&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>22&lt;/strong>) Consider the following snippet of code.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Select all the data processing pattern(s) that the code implements. (MSQ)&lt;/p>
&lt;p>Aggregation&lt;/p>
&lt;p>Filtering&lt;/p>
&lt;p>Mapping&lt;/p>
&lt;p>None of the above&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Based on the provided code snippet:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="c1"># Transformation operation&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># Conditional update&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>🔍 Pattern Analysis:&lt;span class="hx-absolute -hx-mt-20" id="-pattern-analysis">&lt;/span>
&lt;a href="#-pattern-analysis" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Mapping&lt;/strong> ✅
&lt;ul>
&lt;li>Each input string is &lt;strong>transformed&lt;/strong> into a numerical value: &lt;code>len(input())&lt;/code> (string length).&lt;/li>
&lt;li>This is a classic mapping operation where raw input is converted to a derived value.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Aggregation&lt;/strong> ✅
&lt;ul>
&lt;li>The transformed values are &lt;strong>reduced&lt;/strong> to a single result through conditional updates.&lt;/li>
&lt;li>The algorithm maintains a running value that gets updated based on comparisons with new inputs.&lt;/li>
&lt;li>This fits the aggregation pattern (reducing multiple values to one).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Filtering&lt;/strong> ❌
&lt;ul>
&lt;li>No values are excluded from processing. All inputs are transformed and considered in the aggregation.&lt;/li>
&lt;li>The condition &lt;code>num/2 &amp;lt; value&lt;/code> only affects &lt;em>how&lt;/em> the aggregation updates, not &lt;em>which&lt;/em> inputs are processed.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>📝 Conclusion:&lt;span class="hx-absolute -hx-mt-20" id="-conclusion">&lt;/span>
&lt;a href="#-conclusion" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The code implements &lt;strong>two data processing patterns&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Mapping&lt;/strong> (transforming string inputs to their lengths)&lt;/li>
&lt;li>&lt;strong>Aggregation&lt;/strong> (reducing multiple values to a single result through conditional updates)&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Correct options&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Mapping&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Aggregation&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>💡 Key Insight:&lt;span class="hx-absolute -hx-mt-20" id="-key-insight">&lt;/span>
&lt;a href="#-key-insight" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Mapping&lt;/strong> occurs through &lt;code>len(input())&lt;/code>, converting each string to an integer.&lt;/li>
&lt;li>&lt;strong>Aggregation&lt;/strong> happens through the update logic:
&lt;ul>
&lt;li>First value initializes &lt;code>value&lt;/code>&lt;/li>
&lt;li>Subsequent values update &lt;code>value&lt;/code> only if &lt;code>num/2 &amp;lt; value&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The output is the last value that met the update condition or the first value if no updates occurred.&lt;/li>
&lt;/ul>
&lt;h3>⚠️ Special Note:&lt;span class="hx-absolute -hx-mt-20" id="-special-note">&lt;/span>
&lt;a href="#-special-note" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>This is &lt;strong>not standard min/max aggregation&lt;/strong> due to the specific update rule (&lt;code>num/2 &amp;lt; value&lt;/code>).&lt;/li>
&lt;li>However, it still qualifies as aggregation because it reduces all inputs to a single summary value.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Final answer: Mapping and Aggregation&lt;/strong> ✅&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>23&lt;/strong>) Consider the following snippet of code.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">values&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">l&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">l&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">values&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">values&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">set&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">values&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Select all the data processing pattern(s) that the code implements. (MSQ)&lt;/p>
&lt;p>Aggregation&lt;/p>
&lt;p>Filtering&lt;/p>
&lt;p>Mapping&lt;/p>
&lt;p>None of the above&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Based on the code snippet and analysis:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">values&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">l&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># Transformation operation&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">l&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">values&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">values&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">set&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">values&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Grouping operation&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>🔍 Pattern Analysis:&lt;span class="hx-absolute -hx-mt-20" id="-pattern-analysis">&lt;/span>
&lt;a href="#-pattern-analysis" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Mapping&lt;/strong> ✅
&lt;ul>
&lt;li>Each input number is &lt;strong>transformed&lt;/strong> into a new value: &lt;code>len(str(num))&lt;/code> (number of digits).&lt;/li>
&lt;li>This is a classic mapping operation where raw input is converted to a derived feature.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Aggregation&lt;/strong> ✅
&lt;ul>
&lt;li>Numbers are &lt;strong>grouped by their digit length&lt;/strong> into sets within a dictionary.&lt;/li>
&lt;li>This is a form of aggregation where values are collected into categories (group-by operation).&lt;/li>
&lt;li>The dictionary &lt;code>values&lt;/code> acts as an aggregated data structure.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Filtering&lt;/strong> ❌
&lt;ul>
&lt;li>No values are excluded from processing. All inputs are transformed and added to the groups.&lt;/li>
&lt;li>The condition &lt;code>if l not in values&lt;/code> only initializes new groups, doesn&amp;rsquo;t filter data.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>📝 Conclusion:&lt;span class="hx-absolute -hx-mt-20" id="-conclusion">&lt;/span>
&lt;a href="#-conclusion" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The code implements &lt;strong>two data processing patterns&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Mapping&lt;/strong> (transforming numbers to their digit counts)&lt;/li>
&lt;li>&lt;strong>Aggregation&lt;/strong> (grouping numbers by their digit counts)&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Correct options&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Aggregation&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Mapping&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>💡 Key Insight:&lt;span class="hx-absolute -hx-mt-20" id="-key-insight">&lt;/span>
&lt;a href="#-key-insight" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Mapping&lt;/strong> occurs through &lt;code>len(str(num))&lt;/code>, converting each number to its digit count.&lt;/li>
&lt;li>&lt;strong>Aggregation&lt;/strong> happens through the dictionary grouping:
&lt;ul>
&lt;li>Keys: Digit counts (from mapping)&lt;/li>
&lt;li>Values: Sets of original numbers&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The output is a dictionary showing numbers grouped by digit length (e.g., &lt;code>{2: {10, 99}, 3: {100, 255}}&lt;/code>).&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Final answer: Aggregation and Mapping&lt;/strong> ✅&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>24&lt;/strong>) Consider the following snippet of code.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Select all the data processing pattern(s) that the code implements. (MSQ)&lt;/p>
&lt;p>Aggregation&lt;/p>
&lt;p>Filtering&lt;/p>
&lt;p>Mapping&lt;/p>
&lt;p>None of the above&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Based on the provided code snippet:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>🔍 Pattern Analysis:&lt;span class="hx-absolute -hx-mt-20" id="-pattern-analysis">&lt;/span>
&lt;a href="#-pattern-analysis" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Mapping&lt;/strong> ✅
&lt;ul>
&lt;li>Each pair of inputs (&lt;code>a&lt;/code>, &lt;code>b&lt;/code>) is &lt;strong>transformed&lt;/strong> into a new output order (&lt;code>b&lt;/code>, &lt;code>a&lt;/code>).&lt;/li>
&lt;li>This is a classic mapping operation where the input structure is reordered without changing the content.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>No Aggregation&lt;/strong> ❌
&lt;ul>
&lt;li>Values aren&amp;rsquo;t combined into a summary result. Each input pair is processed independently.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>No Filtering&lt;/strong> ❌
&lt;ul>
&lt;li>All inputs are processed without exclusions.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>📝 Conclusion:&lt;span class="hx-absolute -hx-mt-20" id="-conclusion">&lt;/span>
&lt;a href="#-conclusion" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The code implements &lt;strong>one data processing pattern&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Mapping&lt;/strong> (reordering input pairs from &lt;code>(a, b)&lt;/code> to &lt;code>(b, a)&lt;/code>)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Correct option&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Mapping&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3>💡 Key Insight:&lt;span class="hx-absolute -hx-mt-20" id="-key-insight">&lt;/span>
&lt;a href="#-key-insight" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>The transformation is &lt;strong>structural&lt;/strong>: Input order is swapped during output.&lt;/li>
&lt;li>No value modification occurs (e.g., &lt;code>a&lt;/code> and &lt;code>b&lt;/code> are printed as-is).&lt;/li>
&lt;li>This is distinct from content-based mapping (like arithmetic operations) but still qualifies as data transformation.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Final answer: Mapping&lt;/strong> ✅&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>25&lt;/strong>) Consider the below python code.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">num&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">i&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Select all the possible outputs of the above code for any possible valid integer as input.&lt;/p>
&lt;p>💡&lt;em>Hint&lt;/em>: To solve this question you might want to try out with different values of num or automate that with another loop with different values for num. What range of values do you use for this automation?&lt;/p>
&lt;p>Options:&lt;/p>
&lt;p>0&lt;/p>
&lt;p>1&lt;/p>
&lt;p>2&lt;/p>
&lt;p>3&lt;/p>
&lt;p>4&lt;/p>
&lt;p>5&lt;/p>
&lt;p>6&lt;/p>
&lt;p>7&lt;/p>
&lt;p>8&lt;/p>
&lt;p>9&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Let&amp;rsquo;s look at the code&amp;rsquo;s possible outputs for any valid integer input:&lt;/p>
&lt;ul>
&lt;li>The code sets $ i = -num $ and sums every odd value from $-5$ to $5$ (inclusive), incrementing by 2, but only if $i$ starts within or eventually enters this range.&lt;/li>
&lt;li>If $ i &amp;gt; 5 $ at the start, the loop breaks immediately and the result is 0.&lt;/li>
&lt;li>If $ i &amp;lt; -5 $, the loop keeps incrementing $i$ by 2 until $i \geq -5$, then starts summing.&lt;/li>
&lt;/ul>
&lt;p>From the code execution results, the possible outputs are:&lt;/p>
&lt;ul>
&lt;li>0&lt;/li>
&lt;li>4&lt;/li>
&lt;li>5&lt;/li>
&lt;li>6&lt;/li>
&lt;li>8&lt;/li>
&lt;li>9&lt;/li>
&lt;/ul>
&lt;h3>🎯 &lt;strong>Possible outputs:&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="-possible-outputs">&lt;/span>
&lt;a href="#-possible-outputs" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>0, 4, 5, 6, 8, 9&lt;/strong>&lt;/p>
&lt;p>(Options 1, 2, 3, and 7 are not possible for any integer input.)&lt;/p>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;p>&lt;strong>26&lt;/strong>) Consider the below python code.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="n">i&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Select all the possible outputs of the above code for any possible valid integer as input.&lt;/p>
&lt;p>💡&lt;strong>Hint&lt;/strong>: To solve this question you might want to try out with different values of num or automate that with another loop with different values for num. What range of values do you use for this automation?&lt;/p>
&lt;p>Options:&lt;/p>
&lt;p>-9&lt;/p>
&lt;p>-7&lt;/p>
&lt;p>-3&lt;/p>
&lt;p>-2&lt;/p>
&lt;p>1&lt;/p>
&lt;p>3&lt;/p>
&lt;p>4&lt;/p>
&lt;p>5&lt;/p>
&lt;p>8&lt;/p>
&lt;p>9&lt;/p>
&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;p>Based on the analysis of the code for various integer inputs, the possible outputs from the given options are:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-9&lt;/strong> (e.g., &lt;code>num = 19&lt;/code> or &lt;code>num = 29&lt;/code>)&lt;/li>
&lt;li>&lt;strong>-3&lt;/strong> (e.g., &lt;code>num = 18&lt;/code> or &lt;code>num = 23&lt;/code>)&lt;/li>
&lt;li>&lt;strong>3&lt;/strong> (e.g., &lt;code>num = 17&lt;/code> or &lt;code>num = 22&lt;/code>)&lt;/li>
&lt;li>&lt;strong>5&lt;/strong> (e.g., &lt;code>num = 14&lt;/code>)&lt;/li>
&lt;li>&lt;strong>9&lt;/strong> (e.g., &lt;code>num = 16&lt;/code> or &lt;code>num = 21&lt;/code>)&lt;/li>
&lt;/ul>
&lt;h3>✅ Valid Outputs:&lt;span class="hx-absolute -hx-mt-20" id="-valid-outputs">&lt;/span>
&lt;a href="#-valid-outputs" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;code>-9&lt;/code>&lt;/li>
&lt;li>&lt;code>-3&lt;/code>&lt;/li>
&lt;li>&lt;code>3&lt;/code>&lt;/li>
&lt;li>&lt;code>5&lt;/code>&lt;/li>
&lt;li>&lt;code>9&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3>❌ Not Possible:&lt;span class="hx-absolute -hx-mt-20" id="-not-possible">&lt;/span>
&lt;a href="#-not-possible" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;code>-7&lt;/code>, &lt;code>-2&lt;/code>, &lt;code>1&lt;/code>, &lt;code>4&lt;/code>, &lt;code>8&lt;/code> were not observed for any integer input and are mathematically implausible given the code&amp;rsquo;s arithmetic progression.&lt;/li>
&lt;/ul>
&lt;h3>Explanation:&lt;span class="hx-absolute -hx-mt-20" id="explanation">&lt;/span>
&lt;a href="#explanation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The code processes inputs by:&lt;/p>
&lt;ol>
&lt;li>Starting with &lt;code>i = num&lt;/code>&lt;/li>
&lt;li>Repeatedly subtracting 5 from &lt;code>i&lt;/code> in each iteration.&lt;/li>
&lt;li>Only accumulating &lt;code>result -= i&lt;/code> when &lt;code>i&lt;/code> is in &lt;code>[-15, 15]&lt;/code>.&lt;/li>
&lt;li>Breaking the loop when &lt;code>i &amp;lt; -15&lt;/code>.&lt;/li>
&lt;/ol>
&lt;p>The outputs depend on the sequence of &lt;code>i&lt;/code> values in the arithmetic progression (step &lt;code>-5&lt;/code>) that fall within &lt;code>[-15, 15]&lt;/code>. The valid outputs above are achievable for specific inputs, while others are not due to integer constraints and the progression&amp;rsquo;s properties.&lt;/p>
&lt;p>For example:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>num=14&lt;/code>&lt;/strong> → Output &lt;code>5&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>num=16&lt;/code>&lt;/strong> → Output &lt;code>9&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>num=17&lt;/code>&lt;/strong> → Output &lt;code>3&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>num=18&lt;/code>&lt;/strong> → Output &lt;code>-3&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>num=19&lt;/code>&lt;/strong> → Output &lt;code>-9&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style></description></item><item><title>Python Week 4</title><link>/exercises/graded-assignments/python/week-4-python-graded-assignment-iit-madras/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/exercises/graded-assignments/python/week-4-python-graded-assignment-iit-madras/</guid><description>
&lt;hr>
&lt;h2>Multiple Choice Questions 🧠&lt;span class="hx-absolute -hx-mt-20" id="multiple-choice-questions-">&lt;/span>
&lt;a href="#multiple-choice-questions-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>2. Python Code – Size of the List &lt;code>rolls&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="2-python-code--size-of-the-list-rolls">&lt;/span>
&lt;a href="#2-python-code--size-of-the-list-rolls" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;em>(From Image 2)&lt;/em>&lt;/p>
&lt;p>&lt;strong>Question:&lt;/strong>
What is the size of the list &lt;code>rolls&lt;/code> in the given code?&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">random&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">rolls&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100000&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">roll&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rolls&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">roll&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>Step-by-step Solution:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>The loop runs from 0 to 99,999 (that’s 100,000 iterations).&lt;/li>
&lt;li>In each iteration, one value is appended to &lt;code>rolls&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Final Answer:&lt;/strong>
&lt;strong>The size of the list &lt;code>rolls&lt;/code> is 100,000.&lt;/strong> 🔢&lt;/p>
&lt;h3>3. Python Code – What Does &lt;code>some_var&lt;/code> Represent?&lt;span class="hx-absolute -hx-mt-20" id="3-python-code--what-does-some_var-represent">&lt;/span>
&lt;a href="#3-python-code--what-does-some_var-represent" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;em>(From Image 2)&lt;/em>&lt;/p>
&lt;p>&lt;strong>Question:&lt;/strong>
Given:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">some_var&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rolls&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>What does the variable &lt;code>some_var&lt;/code> represent?&lt;/p>
&lt;p>&lt;strong>Step-by-step Solution:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>count&lt;/code> counts how many elements in &lt;code>rolls&lt;/code> are in the list &lt;code>primes = [^1][^2]&lt;/code>.&lt;/li>
&lt;li>&lt;code>len(rolls)&lt;/code> is the total number of elements (100,000).&lt;/li>
&lt;li>So, &lt;code>some_var&lt;/code> is the fraction of numbers in &lt;code>rolls&lt;/code> that are prime numbers (2, 3, or 5).&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Final Answer:&lt;/strong>
&lt;strong>It represents the probability that a number chosen at random from the list &lt;code>rolls&lt;/code> is a prime.&lt;/strong> 🎲✅&lt;/p>
&lt;h3>4. Python Code – List &lt;code>L&lt;/code> and &lt;code>flag&lt;/code> Logic&lt;span class="hx-absolute -hx-mt-20" id="4-python-code--list-l-and-flag-logic">&lt;/span>
&lt;a href="#4-python-code--list-l-and-flag-logic" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;em>(From Image 3)&lt;/em>&lt;/p>
&lt;p>&lt;strong>Question:&lt;/strong>
If &lt;code>flag&lt;/code> is &lt;code>True&lt;/code> at the end of the code, which statements are always true?&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">L&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">x&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">L&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">L&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>Step-by-step Solution:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>$ s $ is the sum of all elements in $ L $.&lt;/li>
&lt;li>For each $ x $ in $ L $, if $ x \times len(L) = s $, then $ x = \frac{s}{len(L)} $.&lt;/li>
&lt;li>So, $ x $ is the average (mean) of the list, and since all elements are distinct and positive integers, the mean is an element of the list only if the mean is an integer and present in $ L $.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Final Answers:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>$ y $ is an element in the list $ L $. ✅&lt;/li>
&lt;li>$ y $ is the average (arithmetic mean) of the numbers in the list. ✅&lt;/li>
&lt;/ul>
&lt;h3>5. Python Code – When is &lt;code>flag&lt;/code> True?&lt;span class="hx-absolute -hx-mt-20" id="5-python-code--when-is-flag-true">&lt;/span>
&lt;a href="#5-python-code--when-is-flag-true" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;em>(From Image 3)&lt;/em>&lt;/p>
&lt;p>&lt;strong>Question:&lt;/strong>
Assume $ L $ is the list of the first $ n $ positive integers ($ n &amp;gt; 0 $). Under what condition will &lt;code>flag&lt;/code> be &lt;code>True&lt;/code> at the end?&lt;/p>
&lt;p>&lt;strong>Step-by-step Solution:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>$ s = 1 + 2 + &amp;hellip; + n = \frac{n(n+1)}{2} $&lt;/li>
&lt;li>For some $ x $ in $ L $, $ x \times n = s \implies x = \frac{s}{n} = \frac{n+1}{2} $&lt;/li>
&lt;li>$ x $ must be an integer in $ L $, so $ n+1 $ must be even $ \implies n $ is odd.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Final Answer:&lt;/strong>
&lt;strong>&lt;code>flag&lt;/code> will be True if and only if $ n $ is an odd integer.&lt;/strong> 🟢&lt;/p>
&lt;h3>6. Python Code – What is the Output of the Code?&lt;span class="hx-absolute -hx-mt-20" id="6-python-code--what-is-the-output-of-the-code">&lt;/span>
&lt;a href="#6-python-code--what-is-the-output-of-the-code" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;em>(From Image 4)&lt;/em>&lt;/p>
&lt;p>&lt;strong>Question:&lt;/strong>
Given the code and $ L = $, what is the output after execution?&lt;/p>
&lt;p>&lt;strong>Step-by-step Solution:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Initially, $ S = $.&lt;/li>
&lt;li>The outer loop runs $ j $ from 1 to 5.&lt;/li>
&lt;li>For each $ j $, check if $ L[j] &amp;lt; S $. The first time this is true is at $ j = 2 $ ($ L[^1] = 8 &amp;lt; S = 90 $).&lt;/li>
&lt;li>At this point:
&lt;ul>
&lt;li>$ before_j = S[:2] = $&lt;/li>
&lt;li>$ new_j = [L[^1]] = $&lt;/li>
&lt;li>$ after_j = S[2:] = [] $&lt;/li>
&lt;li>So, $ S = + + [] = $&lt;/li>
&lt;li>Set flag to False and break.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Since flag is False, append $ L[^3] = 47 $ to $ S $: $ S = $.&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Final Output:&lt;/strong>
**** is the output. 🖨️&lt;/p>
&lt;h3>&lt;strong>Q6: Grid of Integer Points – Python Representation&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="q6-grid-of-integer-points--python-representation">&lt;/span>
&lt;a href="#q6-grid-of-integer-points--python-representation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Question:&lt;/strong>
You are given a grid of integer points in the plane: $ P_{ij} = (i, j) $, $ 0 \leq i, j \leq 4 $.
You want to represent this grid as a list of tuples called &lt;code>points&lt;/code>, where each tuple is of the form &lt;code>(x, y)&lt;/code>.
&lt;strong>Which code snippets correctly implement this? (MSQ)&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Options:&lt;/strong>
1.
&lt;code>python points = [] for x in range(0, 5): for y in range(0, 5): points.append(x, y) &lt;/code>
2.
&lt;code>python points = [] for x in range(0, 5): for y in range(0, 5): points.append([x, y]) &lt;/code>
3.
&lt;code>python points = () for x in range(0, 5): for y in range(0, 5): points.append((x, y)) &lt;/code>
4.
&lt;code>python points = [] for x in range(0, 5): for y in range(0, 5): points.append((x, y)) &lt;/code>&lt;/p>
&lt;p>&lt;strong>Answer &amp;amp; Explanation:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Option 1:&lt;/strong> ❌ Incorrect. &lt;code>append(x, y)&lt;/code> is not valid; &lt;code>append&lt;/code> takes only one argument.&lt;/li>
&lt;li>&lt;strong>Option 2:&lt;/strong> ❌ Incorrect. Appends a list &lt;code>[x, y]&lt;/code> instead of a tuple &lt;code>(x, y)&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Option 3:&lt;/strong> ❌ Incorrect. &lt;code>points&lt;/code> is initialized as a tuple, which does not have an &lt;code>append&lt;/code> method.&lt;/li>
&lt;li>&lt;strong>Option 4:&lt;/strong> ✅ &lt;strong>Correct!&lt;/strong> Appends a tuple to a list, as required.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Final Answer:&lt;/strong>
&lt;strong>Only Option 4 is correct.&lt;/strong> ✅&lt;/p>
&lt;h3>&lt;strong>Q7: List Comprehension Equivalence&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="q7-list-comprehension-equivalence">&lt;/span>
&lt;a href="#q7-list-comprehension-equivalence" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Question:&lt;/strong>
Given:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">L&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>Which of the following codes are equivalent? (MSQ)&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Options:&lt;/strong>
1.
&lt;code>python L = [] for x in [1, 2, 3]: for y in [3, 4, 5]: if y &amp;gt; x: L.append(y - x) &lt;/code>
2.
&lt;code>python L = [] for y in [3, 4, 5]: for x in [1, 2, 3]: if y &amp;gt; x: L.append(y - x) &lt;/code>
3.
&lt;code>python L = [] for x in [1, 2, 3]: for y in [3, 4, 5]: if y &amp;gt; x: L += [y - x] &lt;/code>
4.
&lt;code>python L = [] for y in [3, 4, 5]: for x in [1, 2, 3]: if y &amp;gt; x: L += [y - x] &lt;/code>&lt;/p>
&lt;p>&lt;strong>Answer &amp;amp; Explanation:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>The order of &lt;code>for x in ... for y in ...&lt;/code> matters for list comprehensions.&lt;/li>
&lt;li>The original comprehension is: for each &lt;code>x&lt;/code> in &lt;code>[^1][^2][^3]&lt;/code>, then for each &lt;code>y&lt;/code> in &lt;code>[^3][^4][^5]&lt;/code>, if &lt;code>y &amp;gt; x&lt;/code>, add &lt;code>y-x&lt;/code>.&lt;/li>
&lt;li>Options 1 and 3 match the order and logic.&lt;/li>
&lt;li>Options 2 and 4 reverse the order, so the output list will be in a different order.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Final Answer:&lt;/strong>
&lt;strong>Options 1 and 3 are equivalent to the given comprehension.&lt;/strong> ✅✅&lt;/p>
&lt;h3>&lt;strong>Q8: Find All Integer Triplets (x, y, z)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="q8-find-all-integer-triplets-x-y-z">&lt;/span>
&lt;a href="#q8-find-all-integer-triplets-x-y-z" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Question:&lt;/strong>
Find all integer triplets $(x, y, z)$ such that $x^2 + y^2 = z^2$ and $0 &amp;lt; x &amp;lt; y &amp;lt; z &amp;lt; 100$.
&lt;strong>Which code snippets correctly create such a list called &lt;code>triplets&lt;/code>? (MSQ)&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Options:&lt;/strong>
1.
&lt;code>python triplets = [(x, y, z) for x in range(1, 100) for y in range(x + 1, 100) for z in range(y + 1, 100) if x ** 2 + y ** 2 == z ** 2] &lt;/code>
2.
&lt;code>python triplets = [] for x in range(1, 100): for y in range(x + 1, 100): for z in range(y + 1, 100): if x ** 2 + y ** 2 == z ** 2: triplets.append((x, y, z)) &lt;/code>
3.
&lt;code>python triplets = [(x, y, z) for x in range(1, 100) for y in range(1, 100) for z in range(1, 100) if x ** 2 + y ** 2 == z ** 2 and x &amp;lt; y &amp;lt; z] &lt;/code>&lt;/p>
&lt;p>&lt;strong>Answer &amp;amp; Explanation:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Option 1: ✅ Correct. List comprehension, correct ranges.&lt;/li>
&lt;li>Option 2: ✅ Correct. Nested loops, correct logic.&lt;/li>
&lt;li>Option 3: ✅ Correct. Uses all ranges from 1 to 99, but the condition &lt;code>x &amp;lt; y &amp;lt; z&lt;/code> ensures only valid triplets are included.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Final Answer:&lt;/strong>
&lt;strong>All three options are correct.&lt;/strong> ✅✅✅&lt;/p>
&lt;h3>&lt;strong>Q9: Filter Names Starting with a Capital Letter&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="q9-filter-names-starting-with-a-capital-letter">&lt;/span>
&lt;a href="#q9-filter-names-starting-with-a-capital-letter" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Question:&lt;/strong>
Given a list &lt;code>L&lt;/code> of names, create a list &lt;code>P&lt;/code> that contains only those names in &lt;code>L&lt;/code> that begin with a capital letter.
&lt;strong>Which implementations are correct? (MSQ)&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Options:&lt;/strong>
1.
&lt;code>python P = [name for name in L if 'a' &amp;lt;= name[^0] &amp;lt;= 'z'] &lt;/code>
2.
&lt;code>python P = [name for name in L if 'A' &amp;lt;= name[^0] &amp;lt;= 'Z'] &lt;/code>
3.
&lt;code>python P = [] for name in L: if 'A' &amp;lt;= name[^0] &amp;lt;= 'Z': P.append(name) &lt;/code>&lt;/p>
&lt;p>&lt;strong>Answer &amp;amp; Explanation:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Option 1: ❌ Incorrect. This checks for lowercase letters.&lt;/li>
&lt;li>Option 2: ✅ Correct. This checks for uppercase letters.&lt;/li>
&lt;li>Option 3: ✅ Correct. This also checks for uppercase letters.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Final Answer:&lt;/strong>
&lt;strong>Options 2 and 3 are correct.&lt;/strong> ✅✅&lt;/p>
&lt;h3>&lt;strong>Q10. Filter strings without the letter &amp;rsquo;e&amp;rsquo; from input (MSQ)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="q10-filter-strings-without-the-letter">&lt;/span>
&lt;a href="#q10-filter-strings-without-the-letter" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Question:&lt;/strong>
Accept a sequence of comma-separated strings as input from the user and populate a list of strings that do &lt;strong>not&lt;/strong> have the letter &amp;rsquo;e&amp;rsquo; in them. Print this list as output to the console. Select all code snippets that achieve this.&lt;/p>
&lt;p>&lt;strong>Options:&lt;/strong>
1.
&lt;code>python P = input().split(',') L = [] for word in P: if 'e' not in word: L.append(word) print(L) &lt;/code>
2.
&lt;code>python L = [word for word in input().split(',') if 'e' not in word] print(L) &lt;/code>
3.
&lt;code>python print([word for word in input().split(',') if 'e' not in word]) &lt;/code>&lt;/p>
&lt;p>&lt;strong>Answer:&lt;/strong>
✅ &lt;strong>All three code snippets (1, 2, and 3) correctly achieve the required task.&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Option 1 uses a loop and conditional append.&lt;/li>
&lt;li>Option 2 uses a list comprehension and then prints.&lt;/li>
&lt;li>Option 3 prints the list comprehension directly.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Q11. Which return statement is executed in minmax(x, x)?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="q11-which-return-statement-is-executed-in-minmaxx-x">&lt;/span>
&lt;a href="#q11-which-return-statement-is-executed-in-minmaxx-x" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Question:&lt;/strong>
Given:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">minmax&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>If $ x $ is a real number, when &lt;code>minmax(x, x)&lt;/code> is called, which return statement is executed?&lt;/p>
&lt;p>&lt;strong>Options:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>The return statement in line-3 which is inside the if-block.&lt;/li>
&lt;li>The return statement in line-4 which is outside the if-block.&lt;/li>
&lt;li>Both return statements are executed.&lt;/li>
&lt;li>Neither return statement is executed.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Answer:&lt;/strong>
✅ &lt;strong>The return statement in line-3 which is inside the if-block is executed.&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Because $ x \leq x $ is always true, so the function returns from inside the if-block.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Q12. Select all correct implementations of unique(L) (MSQ)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="q12-select-all-correct-implementations-of-uniquel-msq">&lt;/span>
&lt;a href="#q12-select-all-correct-implementations-of-uniquel-msq" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Question:&lt;/strong>
Select all correct implementations of a function &lt;code>unique&lt;/code> that accepts a non-empty list &lt;code>L&lt;/code> of integers and returns a list with only the first occurrence of each distinct element (removing duplicates, order preserved).&lt;/p>
&lt;p>&lt;strong>Options:&lt;/strong>
1.
&lt;code>python def unique(L): L_uniq = [] for elem in L: if elem not in L_uniq: L_uniq.append(elem) return L_uniq &lt;/code>
2.
&lt;code>python def unique(L): L_uniq = [] for elem in L: if elem in L_uniq: L_uniq.append(elem) return L_uniq &lt;/code>
3.
&lt;code>python def unique(L): L_uniq = [L[^0]] for i in range(1, len(L)): if not (L[i] in L[:i]): L_uniq.append(L[i]) return L_uniq &lt;/code>
4.
&lt;code>python def unique(L): L_uniq = [] for i in range(len(L)): if not (L[i] in L[:i]): L_uniq.append(L[i]) return L_uniq &lt;/code>
5.
&lt;code>python def unique(L): L_uniq = [] for i in range(len(L)): if not (L[i] in L[i+1:]): L_uniq.append(L[i]) return L_uniq &lt;/code>&lt;/p>
&lt;p>&lt;strong>Answer:&lt;/strong>
✅ &lt;strong>Options 1, 3, and 4 are correct.&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Option 1: Standard method, keeps first occurrence.&lt;/li>
&lt;li>Option 3: Starts with first element, then checks if not in previous.&lt;/li>
&lt;li>Option 4: Similar to 3, works for all indices.&lt;/li>
&lt;li>Option 2: Incorrect logic (appends duplicates).&lt;/li>
&lt;li>Option 5: Checks future elements, so it keeps last occurrence, not first.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Q13. Correct implementation of poly(L, x_0) (polynomial evaluation)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="q13-correct-implementation-of-polyl-x_">&lt;/span>
&lt;a href="#q13-correct-implementation-of-polyl-x_" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Question:&lt;/strong>
Given a Python list of the coefficients of a polynomial $ L = [a_0, a_1, a_2, &amp;hellip;, a_n] $, write a function &lt;code>poly&lt;/code> that accepts the list and a real number $ x_0 $ and returns the polynomial evaluated at $ x_0 $.&lt;/p>
&lt;p>&lt;strong>Options:&lt;/strong>
1.
&lt;code>python def poly(L, x_0): n = len(L) psum = 0 for i in range(n): psum = psum + L[i] * (x_0 ** i) return psum &lt;/code>
2.
&lt;code>python def poly(L, x_0): psum = 0 n = len(L) for i in range(1, n): psum = psum + L[i] * (x_0 ** i) return psum &lt;/code>
3.
&lt;code>python def poly(L, x_0): psum = 0 n = len(L) for i in range(n): psum = psum + L[i] * (x_0 ** i) return psum &lt;/code>
4.
&lt;code>python def poly(L, x_0): psum = 0 n = len(L) for i in range(n): psum = psum + x_0 * (L[i] ** i) return psum &lt;/code>&lt;/p>
&lt;p>&lt;strong>Answer:&lt;/strong>
✅ &lt;strong>Options 1 and 3 are correct.&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Both correctly compute $ a_0 + a_1 x_0 + a_2 x_0^2 + &amp;hellip; $&lt;/li>
&lt;li>Option 2 skips $ a_0 $ (constant term), so it&amp;rsquo;s incorrect.&lt;/li>
&lt;li>Option 4 uses the wrong formula.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Q14. Correct implementation of poly_zeros(L, a, b)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="q14-correct-implementation-of-poly_">&lt;/span>
&lt;a href="#q14-correct-implementation-of-poly_" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;strong>Question:&lt;/strong>
Write a function &lt;code>poly_zeros&lt;/code> that accepts the list of coefficients &lt;code>L&lt;/code> and two integers &lt;code>a&lt;/code> and &lt;code>b&lt;/code>. It should return a list of all integer zeros of the polynomial in the range $[a, b]$, inclusive, in ascending order (no repeats).&lt;/p>
&lt;p>&lt;strong>Options:&lt;/strong>
1.
&lt;code>python def poly_zeros(L, a, b): zeros = [] for x in range(a, b+1): if poly(L, x) == 0: zeros.append(x) return zeros &lt;/code>
2.
&lt;code>python def poly_zeros(L, a, b): zeros = [] for x in range(a, b+1): if poly(L, x) == 0: zeros.append(x) return zeros &lt;/code>
3.
&lt;code>python def poly_zeros(L, a, b): zeros = [] for x in range(a, b+1): if poly(L, x) == 0: zeros.append(x) return zeros &lt;/code>
4.
&lt;code>python def poly_zeros(L, a, b): zeros = [] for x in range(a, b+1): if poly(L, x) == 0: zeros.append(x) return zeros &lt;/code>&lt;/p>
&lt;p>&lt;strong>Answer:&lt;/strong>
✅ &lt;strong>All four options are identical and correct.&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>They all check each integer $ x $ in $[a, b]$, and append $ x $ if it is a root.&lt;/li>
&lt;/ul></description></item><item><title>Python Week 5</title><link>/exercises/graded-assignments/python/graded-assignment-5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/exercises/graded-assignments/python/graded-assignment-5/</guid><description>
&lt;hr>
&lt;h2>Multiple Choice Questions 🧠&lt;span class="hx-absolute -hx-mt-20" id="multiple-choice-questions-">&lt;/span>
&lt;a href="#multiple-choice-questions-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;div class="border-card border-card-question">
&lt;div class="border-card-content">&lt;/div>
&lt;/div>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style>
&lt;details class="border-card border-card-tip">
&lt;summary class="border-card-header">
&lt;h3 class="header-title">Solution&lt;/h3>
&lt;span class="dropdown-toggle" aria-expanded="true"> &lt;/span>
&lt;/summary>
&lt;div class="border-card-content">&lt;/div>
&lt;/details>
&lt;style>
.border-card {
border-radius: 8px;
padding: 16px;
margin: 16px 0;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
.border-card-content {
overflow-x: auto;
overflow-y: hidden;
padding: 0;
margin: 0;
scrollbar-width: none;
-ms-overflow-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
margin-top: 0;
}
p {
margin-top: 1rem;
}
ol {
margin-top: 0;
}
ul {
margin-left: 0;
list-style: none;
}
table {
margin-bottom: 1.5rem;
}
.katex-display {
margin: 0;
margin-top: 0.5rem;
}
}
.border-card-content::-webkit-scrollbar {
display: none;
}
.border-card-header {
font-weight: bold;
}
.header-title {
font-size: 1.25rem;
margin: 0;
color: inherit;
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #fff3e0;
}
.border-card-tip {
border: 2px dashed #8bc34a;
.border-card-header {
background-color: #e8f5e9;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #fff8e1;
}
details.border-card {
border: 2px dashed #8bc34a;
padding: 0;
overflow: hidden;
}
details.border-card summary {
list-style: none;
padding: 16px;
margin: 0;
cursor: pointer;
display: flex;
justify-content: space-between;
align-items: center;
}
details.border-card summary::-webkit-details-marker {
display: none;
}
details.border-card[open] {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
details.border-card .border-card-content {
padding: 16px;
}
.dropdown-toggle {
width: 24px;
height: 24px;
border-radius: 50%;
background-color: #8bc34a;
display: flex;
justify-content: center;
align-items: center;
transition: transform 0.3s ease;
}
.dropdown-toggle::before {
content: "";
display: block;
width: 8px;
height: 8px;
border-right: 2px solid white;
border-bottom: 2px solid white;
transform: rotate(45deg);
transition: transform 0.3s ease;
}
details[open] .dropdown-toggle::before {
transform: rotate(-135deg);
}
html:is([class~="dark"]) {
.border-card {
color: #e0e0e0;
border-color: rgba(255, 255, 255, 0.2);
}
.border-card {
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
}
.border-card-basic {
border: 2px solid #4caf50;
}
.border-card-question {
border: 2px solid #2196f3;
}
.border-card-answer {
border: 2px solid #ff9800;
background-color: #3e2723;
}
.border-card-tip {
border: 2px dashed #8bc34a;
background-color: #212521;
.border-card-header {
background-color: #405f42;
}
}
.border-card-conclusion {
border: 2px solid #9c27b0;
background-color: #4a148c33;
}
.border-card-bonus {
border: 2px dotted #ffc107;
background-color: #ffbb0027;
}
}
&lt;/style></description></item></channel></rss>